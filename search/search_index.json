{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"README","text":"<p>\u63a2\u7d22 Odin Inspector \u8fdb\u9636\u529f\u80fd\u3001\u6574\u5408\u793e\u533a\u4f18\u8d28\u9879\u76ee\u3001\u4f18\u5316\u6e38\u620f\u5f00\u53d1\u6d41\u7a0b\u3002</p> <p> </p>"},{"location":"#-\u91cd\u8981\u58f0\u660e","title":"\u26a0\ufe0f \u91cd\u8981\u58f0\u660e","text":"<ul> <li><code>Odin Toolkits</code> \u662f\u5f00\u6e90\u7684\u3001\u7b2c\u4e09\u65b9\u6269\u5c55\u5de5\u5177\u96c6\uff0c\u4e3b\u8981\u9762\u5411 <code>Odin Inspector and Serializer</code> \u7684\u4e2d\u6587\u7528\u6237\uff0c\u540c\u65f6\u4e3a\u652f\u6301\u82f1\u6587\u754c\u9762\u63d0\u4f9b\u4e86\u89e3\u51b3\u65b9\u6848\uff0c\u6b22\u8fce\u8d21\u732e\u5b8c\u5584\u82f1\u6587\u754c\u9762\u3002</li> <li>\u672c\u9879\u76ee\u4e0e Sirenix \u516c\u53f8\u53ca\u5b98\u65b9\u4ea7\u54c1 <code>Odin Inspector and Serializer</code> \u65e0\u4efb\u4f55\u96b6\u5c5e\u3001\u5408\u4f5c\u6216\u6388\u6743\u5173\u7cfb\uff0c\u5e76\u975e\u5b98\u65b9\u884d\u751f\u4ea7\u54c1\u3002</li> <li>\u672c\u9879\u76ee\u4e0d\u5305\u542b <code>Odin Inspector and Serializer</code> \u7684\u53d1\u884c\u7248\u672c\u3002</li> <li>\u672c\u6587\u4e2d\u7684 <code>Odin Inspector</code> \u4e3a <code>Odin Inspector and Serializer</code> \u7684\u7b80\u79f0\u3002</li> </ul>"},{"location":"#\u9879\u76ee\u613f\u666f","title":"\u9879\u76ee\u613f\u666f","text":"<ul> <li>\u6210\u4e3a\u4f7f\u7528 <code>Odin Inspector and Serializer</code> \u7684\u5f00\u53d1\u8005\u7684\u5fc5\u5907\u6269\u5c55\u5de5\u5177\u96c6</li> </ul>"},{"location":"#\u4e3b\u8981\u6a21\u5757","title":"\u4e3b\u8981\u6a21\u5757","text":"<ol> <li><code>Script Doc Generator</code>\uff1a\u811a\u672c\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u4e00\u952e\u751f\u6210 <code>API</code> \u6587\u6863</li> <li><code>Attribute Overview Pro</code> \uff1a\u4e2d\u6587\u7279\u6027\u603b\u89c8\u7a97\u53e3\uff0c\u5728\u5b98\u65b9\u7684 <code>Attribute Overview</code> \u5185\u5bb9\u4e0a\u8fdb\u884c\u6269\u5c55</li> <li><code>Community</code>\uff1a\u793e\u533a\u6a21\u5757\uff0c\u6536\u96c6\u3001\u6574\u7406\u3001\u5206\u4eab\u4f7f\u7528<code>Odin Inspector</code> \u5236\u4f5c\u7684\u5de5\u5177\u4ee5\u53ca\u63a8\u8350\u5176\u4ed6\u4f18\u8d28\u8d44\u6e90</li> <li>\u539f\u751f\u591a\u8bed\u8a00\u7279\u6027\uff0c\u5728\u6784\u9020\u51fd\u6570\u5c42\u9762\u76f4\u63a5\u6dfb\u52a0\u591a\u8bed\u8a00\u53c2\u6570</li> <li>\u6a21\u7248\u4ee3\u7801\u751f\u6210\u5de5\u5177\uff0c\u9009\u62e9\u7279\u5b9a\u7684\u6a21\u677f\u6587\u4ef6\uff0c\u4e00\u952e\u751f\u6210\u6a21\u7248\u4ee3\u7801</li> </ol>"},{"location":"#\u5b89\u88c5","title":"\u5b89\u88c5","text":""},{"location":"#\u524d\u63d0\u6761\u4ef6","title":"\u524d\u63d0\u6761\u4ef6","text":"<ul> <li><code>Unity 2021.3.45f2c1 LTS</code> \u6216\u66f4\u9ad8\u7248\u672c</li> <li><code>Odin Inspector And Serializer 3.3</code> \u6216\u66f4\u9ad8\u7248\u672c</li> </ul>"},{"location":"#\u5177\u4f53\u6b65\u9aa4","title":"\u5177\u4f53\u6b65\u9aa4","text":"<p><code>Odin Toolkits</code> \u4f9d\u8d56 <code>Odin Inspector</code> \u63d2\u4ef6\uff0c\u8bf7\u5148\u81ea\u884c\u5bfc\u5165 <code>Odin Inspector</code> \u63d2\u4ef6\u5230\u9879\u76ee\u3002</p> <p>\u4ece Unity Global AssetStore \u548c Sirenix \u5b98\u7f51 \u4e0a\u8d2d\u4e70 <code>Odin Inspector</code> \u6216\u5176\u4ed6\u65b9\u5f0f\u83b7\u53d6\u3002</p> <ol> <li>\u786e\u4fdd\u9879\u76ee\u4e2d\u5df2\u5b89\u88c5 <code>Odin Inspector</code></li> <li>\u4e0b\u8f7d\u6700\u65b0\u53d1\u5e03\u5305</li> <li>\u5c06\u5305\u5bfc\u5165\u5230 <code>Unity</code> \u9879\u76ee\u4e2d</li> <li>\u901a\u8fc7 <code>Tools/Odin Toolkits</code> \u83dc\u5355\u8bbf\u95ee\u5de5\u5177</li> </ol>"},{"location":"#\u5f00\u59cb\u4f7f\u7528","title":"\u5f00\u59cb\u4f7f\u7528","text":"<p>\u5bfc\u5165\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 Unity \u7f16\u8f91\u5668\u83dc\u5355\u8bbf\u95ee <code>Odin Toolkits</code>\uff1a</p> <ul> <li><code>Tools/Odin Toolkits/Getting Started</code> - \u5f00\u59cb\u4f7f\u7528</li> <li><code>Tools/Odin Toolkits/Editor Settings</code> - \u914d\u7f6e\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e</li> <li><code>Tools/Odin Toolkits/Runtime Config</code> - \u914d\u7f6e\u8fd0\u884c\u65f6\u8bbe\u7f6e</li> <li><code>Tools/Odin Toolkits/Attributes Overview Pro</code> - \u4e2d\u6587\u7279\u6027\u603b\u89c8</li> <li><code>Tools/Odin Toolkits/Script Doc Generator</code> - \u811a\u672c\u6587\u6863\u751f\u6210\u5de5\u5177</li> <li><code>Tools/Odin Toolkits/Community</code> - \u8bbf\u95ee\u793e\u533a\u6a21\u5757</li> </ul>"},{"location":"#\u9879\u76ee\u7ed3\u6784","title":"\u9879\u76ee\u7ed3\u6784","text":"<pre><code>Plugins/\n\u251c\u2500 Yuumix/\n\u2502  \u251c\u2500 Community/\n\u2502  \u2502  \u251c\u2500 Editor/\n\u2502  \u2502  \u251c\u2500 Modules/\n\u2502  \u251c\u2500 OdinToolkits/\n\u2502  \u2502  \u251c\u2500 AttributeOverviewPro/\n\u2502  \u2502  \u251c\u2500 Core/\n\u2502  \u2502  \u2502  \u251c\u2500 Editor/\n\u2502  \u2502  \u2502  \u251c\u2500 Resources/\n\u2502  \u2502  \u2502  \u251c\u2500 Runtime/\n\u2502  \u2502  \u251c\u2500 Modules/\n\u2502  \u2502  \u251c\u2500 ScriptDocGenerator/\n\u2502  \u2502  \u251c\u2500 Tests/\n</code></pre>"},{"location":"#\u5f00\u53d1\u539f\u5219","title":"\u5f00\u53d1\u539f\u5219","text":""},{"location":"#\u7a0b\u5e8f\u96c6\u8bbe\u8ba1","title":"\u7a0b\u5e8f\u96c6\u8bbe\u8ba1","text":"<p>\u5c3d\u91cf\u5c11\u7684\u7a0b\u5e8f\u96c6\uff0c\u7b2c\u4e00\u5c42\u4fdd\u7559 <code>Yuumix</code>\uff0c\u6700\u5927\u7a0b\u5ea6\u5730\u964d\u4f4e\u51b2\u7a81\u53ef\u80fd\u6027</p> <p><code>Yuumix.OdinToolkits.Runtime</code></p> <p><code>Yuumix.OdinToolkits.Editor</code></p> <p><code>Yuumix.Community.Runtime</code></p> <p><code>Yuumix.Community.Editor</code></p>"},{"location":"#\u547d\u540d\u7a7a\u95f4\u8bbe\u8ba1","title":"\u547d\u540d\u7a7a\u95f4\u8bbe\u8ba1","text":"<ul> <li>\u547d\u540d\u7a7a\u95f4\u5c3d\u91cf\u7b80\u77ed\uff0c\u63a7\u5236\u5728 5 \u5c42\u4ee5\u5185</li> <li>\u7b2c\u4e00\u5c42\u4fdd\u7559 <code>Yuumix</code> \u524d\u7f00\u4ee5\u51cf\u5c11\u51b2\u7a81</li> <li>\u4e0d\u4fdd\u7559 <code>Runtime</code> \u7ed3\u5c3e\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u65e0\u7279\u6b8a\u6807\u8bb0\u5219\u9ed8\u8ba4\u5c5e\u4e8e\u8fd0\u884c\u65f6\uff0c\u4e0e <code>private</code> \u8bbe\u8ba1\u540c\u6e90</li> </ul>"},{"location":"#Config-\u548c-Setting-\u547d\u540d\u89c4\u5219","title":"<code>Config</code> \u548c <code>Setting</code> \u547d\u540d\u89c4\u5219","text":"<ul> <li><code>Config</code> \u8868\u793a\u8fd0\u884c\u65f6\u811a\u672c\u53ef\u4ee5\u8bfb\u53d6\u7684\u914d\u7f6e\u3002</li> <li><code>InspectorBilingualismConfigSO</code>\u00a0\u4e3b\u8981\u7528\u4e8e\u7f16\u8f91\u5668\u9636\u6bb5\uff1b\u8003\u8651\u5230\u00a0<code>Inspector</code>\u00a0\u9762\u677f\u53ef\u80fd\u9891\u7e41\u8c03\u7528\u8be5\u914d\u7f6e\uff0c\u4e3a\u907f\u514d\u9700\u7ecf\u5e38\u7528\u5b8f\u5b9a\u4e49\u5305\u88f9\uff0c\u6545\u5c06\u5176\u8bbe\u8ba1\u4e3a\u00a0<code>Config</code>\u00a0\u5f62\u5f0f</li> <li><code>Setting</code> \u8868\u793a\u4ec5\u7f16\u8f91\u5668\u811a\u672c\u53ef\u4ee5\u8bfb\u53d6\u7684\u8bbe\u7f6e</li> </ul>"},{"location":"#\u7279\u6b8a\u6982\u5ff5","title":"\u7279\u6b8a\u6982\u5ff5","text":""},{"location":"#Widget","title":"<code>Widget</code>","text":"<p><code>Widget</code>\u00a0\u7b49\u540c\u4e8e <code>Unity</code> \u4e2d <code>IMGUI</code> \u7684\u00a0<code>Control</code>\uff0c\u662f\u4e13\u4e3a <code>Unity</code> \u7f16\u8f91\u5668\u8bbe\u8ba1\u7684\u81ea\u5b9a\u4e49\u7c7b\u3002\u6838\u5fc3\u7279\u6027\u5982\u4e0b\uff1a</p> <ol> <li>\u5185\u7f6e\u6837\u5f0f\u6a21\u5757\uff1a\u6bcf\u4e2a\u00a0<code>Widget</code>\u00a0\u5c01\u88c5\u72ec\u7acb\u7684\u7f16\u8f91\u5668\u6837\u5f0f\u903b\u8f91\uff0c\u4f7f\u7528\u8005\u4ec5\u9700\u586b\u5199\u5c11\u91cf\u6837\u5f0f\u53c2\u6570\uff0c\u5373\u53ef\u5728 <code>Inspector</code> \u9762\u677f\u5feb\u901f\u8c03\u7528\uff0c\u65e0\u9700\u624b\u52a8\u7f16\u5199\u7ed8\u5236\u903b\u8f91\uff1b</li> <li>\u9ad8\u7075\u6d3b\u6027\uff1a\u76f8\u8f83\u4e8e\u901a\u8fc7\u00a0<code>Attribute</code>\u00a0\u7279\u6027\u6807\u8bb0\u5b9e\u73b0\u7684\u81ea\u5b9a\u4e49\u7ed8\u5236\uff0c<code>Widget</code>\u00a0\u65e0\u9700\u4e0e\u7279\u5b9a\u53d8\u91cf\u7ed1\u5b9a\uff0c\u53ef\u7075\u6d3b\u9002\u914d\u4e0d\u540c\u7f16\u8f91\u573a\u666f\uff1b</li> <li>\u7f16\u8f91\u5668\u4e13\u5c5e\uff1a\u4ec5\u5728 <code>Unity</code> \u7f16\u8f91\u5668\u9636\u6bb5\u751f\u6548\uff0c\u672c\u8d28\u662f \u201c\u5373\u63d2\u5373\u7528\u201d \u7684\u7f16\u8f91\u5668\u5b57\u6bb5\uff1b</li> <li>\u6a21\u5757\u5316\u8bbe\u8ba1\uff1a\u4ee5\u6a21\u5757\u5316\u601d\u8def\u5c01\u88c5\u6837\u5f0f\u4e0e\u4ea4\u4e92\uff0c\u5f00\u53d1\u8005\u53ef\u50cf\u5b9a\u4e49\u666e\u901a\u5b57\u6bb5\u4e00\u6837\uff0c\u8f7b\u677e\u7528\u5b83\u642d\u5efa\u81ea\u5b9a\u4e49 <code>Inspector</code> \u754c\u9762\u3002</li> </ol> <p>\u5efa\u8bae\u5728 <code>ScriptableObject</code> \u7684\u00a0<code>OnEnable</code>\u00a0\u65b9\u6cd5\u4e2d\u4e3a <code>Widget</code> \u76f8\u5173\u7684\u53d8\u91cf\u8d4b\u503c\uff0c\u800c\u975e\u76f4\u63a5\u8bbe\u7f6e\u521d\u59cb\u503c\u3002\u539f\u56e0\u5982\u4e0b\uff1a</p> <ol> <li>\u89c4\u907f\u76f4\u63a5\u8bbe\u521d\u59cb\u503c\u7684\u5c40\u9650\uff1a\u5982\u679c\u5728 <code>ScriptableObject</code> \u4e2d\u4f7f\u7528\uff0c\u800c <code>ScriptableObject</code> \u5c5e\u4e8e <code>Unity</code> \u8d44\u6e90\u7c7b\u578b\uff0c\u82e5\u76f4\u63a5\u4e3a <code>Widget</code> \u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u540e\u7eed\u5c06\u65e0\u6cd5\u8c03\u6574\u8be5 <code>Widget</code> \u914d\u7f6e\uff1b\u82e5\u9700\u66f4\u6539\uff0c\u53ea\u80fd\u91cd\u65b0\u521b\u5efa <code>ScriptableObject</code> \u8d44\u6e90\uff0c\u64cd\u4f5c\u6210\u672c\u9ad8\u3002</li> <li>\u786e\u4fdd\u6837\u5f0f\u4fee\u6539\u5373\u65f6\u751f\u6548\uff1a\u901a\u8fc7\u00a0<code>OnEnable</code>\u00a0\u8d4b\u503c\u65f6\uff0c\u6bcf\u6b21\u6253\u5f00 <code>ScriptableObject</code> \u8d44\u6e90\u65f6\uff0c\u90fd\u4f1a\u81ea\u52a8\u91cd\u65b0\u751f\u6210\u4e00\u4e2a <code>Widget</code> \u5bf9\u8c61\uff0c\u65e0\u9700\u624b\u52a8\u91cd\u5efa\u8d44\u6e90\u5373\u53ef\u5e94\u7528\u6700\u65b0\u914d\u7f6e\u3002</li> </ol>"},{"location":"#YuumixEditor-\u6587\u4ef6\u5939\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4","title":"<code>YuumixEditor</code> \u6587\u4ef6\u5939\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4","text":"<p><code>YuumixEditor</code> \u6587\u4ef6\u5939\u4f4d\u4e8e <code>Runtime</code> \u6587\u4ef6\u5939\u4e0b\uff0c\u5b58\u50a8\u8fd0\u884c\u65f6\u811a\u672c\u53ef\u4ee5\u8c03\u7528\u4f46\u4ec5\u9650\u7f16\u8f91\u5668\u9636\u6bb5\u7684\u7c7b\uff0c<code>YuumixEditor</code> \u547d\u540d\u7a7a\u95f4\u7b49\u540c\u4e8e Unity \u4e2d\u7684 <code>UnityEditor</code>\uff0c\u4f7f\u7528\u65f6\u9700\u8981 <code>UNITY_EDITOR</code> \u5b8f\u5b9a\u4e49\u5305\u88f9\u3002</p>"},{"location":"#\u76f8\u5173\u94fe\u63a5","title":"\u76f8\u5173\u94fe\u63a5","text":"<p>\u63a8\u8350 - Odin Toolkits \u6587\u6863\u7f51\u7ad9 - GitHub \u90e8\u7f72</p> <p>Odin Toolkits \u6587\u6863\u7f51\u7ad9 - Read the Docs \u90e8\u7f72</p> <p>Odin Inspector \u5b98\u65b9\u7f51\u7ad9</p> <p>Odin Inspector \u8bb8\u53ef\u4fe1\u606f</p>"},{"location":"#\u8bb8\u53ef\u8bc1","title":"\u8bb8\u53ef\u8bc1","text":"<p>\u672c\u9879\u76ee\u57fa\u4e8e MIT \u8bb8\u53ef\u8bc1\u6388\u6743\u3002</p>"},{"location":"#Logo-\u8bb8\u53ef\u8bc1","title":"Logo \u8bb8\u53ef\u8bc1","text":"<p>\u67e5\u770b <code>LOGO-LICENSE.md</code> \u6587\u6863\u3002</p>"},{"location":"#\u66f4\u65b0\u65e5\u5fd7","title":"\u66f4\u65b0\u65e5\u5fd7","text":"<p>\u8be6\u7ec6\u7248\u672c\u5386\u53f2\u548c\u53d8\u66f4\u8bf7\u67e5\u770b\u9879\u76ee\u4e2d\u7684 <code>CHANGELOG.md</code> \u6216\u8005 Odin Toolkits \u6587\u6863\u7f51\u7ad9 - GitHub \u90e8\u7f72 \u7684 <code>CHANGELOG</code> \u7ae0\u8282\u3002</p>"},{"location":"#\u8d21\u732e\u6307\u5357","title":"\u8d21\u732e\u6307\u5357","text":"<p>\u67e5\u770b <code>CONTRIBUTING.md</code> \u6587\u6863\u3002</p>"},{"location":"#\u652f\u6301\u4e0e\u53cd\u9988","title":"\u652f\u6301\u4e0e\u53cd\u9988","text":"<p>zeriying@gmail.com</p> <p>\u611f\u8c22\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u5982\u679c <code>Odin Toolkits</code> \u5728\u4f60\u7684 <code>Unity</code> \u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5207\u5b9e\u63d0\u4f9b\u4e86\u5e2e\u52a9\uff0c\u6073\u8bf7\u4e3a\u9879\u76ee\u70b9\u4eae\u4e00\u9897 \u2605 Star\uff01</p> <p>\u5982\u679c <code>Odin Toolkits</code> \u6253\u5305\u51fa\u73b0\u9519\u8bef\uff0c\u8bf7\u63d0 issue\uff0c\u6216\u8005\u8054\u7cfb\u6211\uff0c\u6211\u4f1a\u5c3d\u5feb\u5904\u7406\uff0c\u4e1a\u4f59\u65f6\u95f4\u5f00\u53d1\uff0c\u65e0\u6cd5\u5373\u65f6\u56de\u590d\uff0c\u8bf7\u4f18\u5148\u90ae\u4ef6\u8054\u7cfb\u3002</p>"},{"location":"#\u9879\u76ee\u53ca\u53cb\u94fe\u63a8\u8350","title":"\u9879\u76ee\u53ca\u53cb\u94fe\u63a8\u8350","text":"<p>QFramework - Unity \u5f00\u53d1\u6846\u67b6</p> <p>ES Framework - Unity \u5f00\u53d1\u6846\u67b6</p> <p></p> <p>Wcowin \u7684 MkDocs \u535a\u5ba2</p> <p>Aaron \u7684\u535a\u5ba2</p> 2025-10-272025-10-27"},{"location":"CHANGELOG/","title":"CHANGELOG","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u7684\u6240\u6709\u663e\u8457\u53d8\u5316\u90fd\u5c06\u8bb0\u5f55\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u3002</p> <p>\u683c\u5f0f\u57fa\u4e8e Keep a Changelog\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u9879\u76ee <code>\u5c3d\u91cf</code> \u9075\u5faa Semantic Versioning\u3002</p> <p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog,and this project adheres to Semantic Versioning.</p>"},{"location":"CHANGELOG/#040---alpha---2025-09-21","title":"[0.4.0 - alpha] - 2025-09-21","text":"<ul> <li>Alpha \u9636\u6bb5\u4e0d\u4fdd\u8bc1\u517c\u5bb9\u6027\uff0c\u5185\u5bb9\u968f\u65f6\u53ef\u80fd\u4fee\u6539\u3002</li> </ul>"},{"location":"CHANGELOG/#\u5df2\u77e5\u95ee\u9898","title":"\u5df2\u77e5\u95ee\u9898","text":"<ul> <li><code>Attribute Overview Pro</code> \u5904\u4e8e\u91cd\u5236\u9636\u6bb5\uff08\u5176\u539f\u6a21\u5757\u4e3a <code>Chinese Attribute Overview</code>\uff09\uff0c\u5f53\u524d\u4ecd\u5b58\u5728\u9519\u8bef\uff1b\u4f46\u8be5\u9519\u8bef\u4ec5\u5c5e\u4e8e\u5c55\u793a\u5c42\u9762\u95ee\u9898\uff0c\u5927\u90e8\u5206\u7279\u6027\u6b63\u5e38\u663e\u793a\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6\u672a\u62a5\u9519\u5185\u5bb9\uff0c\u4e14\u4e0d\u5f71\u54cd\u6253\u5305\u6d41\u7a0b</li> </ul>"},{"location":"CHANGELOG/#Change","title":"Change","text":"<ul> <li>\u4f18\u5316\u4ee3\u7801\u67b6\u6784\uff0c\u66f4\u65b0\u7248\u672c\u9700\u8981\u91cd\u65b0\u5bfc\u5165</li> <li>\u79fb\u52a8 <code>Wigdet</code> \u90e8\u5206\u5230 <code>YuumixEditor</code> \u4e2d\uff0c\u91cd\u547d\u540d\u4e3a <code>InspectorWigdet</code>\uff0c\u8bbe\u8ba1\u4e3a\u4ec5\u9650\u7f16\u8f91\u5668\u9636\u6bb5\u4f7f\u7528\uff0c\u6253\u5305\u540e\u5254\u9664\uff0c\u9700\u8981\u4f7f\u7528 <code>UNITY_EDITOR</code> \u5b8f\u5b9a\u4e49\u5305\u88f9</li> </ul>"},{"location":"CHANGELOG/#Added","title":"Added","text":"<ul> <li>\u65b0\u589e <code>InspectorBiligualismConfigSO</code>\uff0c\u8bbe\u7f6e\u9762\u677f\u8bed\u8a00\uff0c\u63d0\u4f9b <code>OnLanguageChange</code> \u4e8b\u4ef6\u63a5\u53e3</li> <li>\u65b0\u589e <code>OdinToolkits</code> \u6587\u4ef6\u5939\u5b9a\u4f4d\u63a5\u53e3\uff0c<code>OdinToolkitsPaths.GetRootPath()</code> \u53ef\u4ee5\u83b7\u53d6\u5230 <code>OdinToolkits</code> \u6587\u4ef6\u5939\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a <code>\"Assets/Plugins/Yuumix/OdinToolkits\"</code></li> <li>\u65b0\u589e <code>Add ChineseSummary</code> \u548c <code>Remove ChineseSummary</code> \u53f3\u952e\u83dc\u5355\u9879\uff0c\u53ef\u4ee5\u4e00\u952e\u540c\u6b65\u811a\u672c\u4e2d\u7684 <code>Summary</code> \u6ce8\u91ca\u5230 <code>ChineseSummary</code> \u7279\u6027\uff0c\u540c\u65f6\u63d0\u4f9b\u4e00\u952e\u79fb\u9664\u64cd\u4f5c\uff0c\u5728\u4e0d\u9700\u8981\u65f6\u53ef\u4ee5\u5feb\u901f\u8131\u79bb\uff0c\u4e0d\u5f71\u54cd\u9879\u76ee</li> </ul>"},{"location":"CHANGELOG/#\u91cd\u8981\u66f4\u65b0---Script-Doc-Generator-\u811a\u672c\u6587\u6863\u751f\u6210\u5668","title":"\u91cd\u8981\u66f4\u65b0 - Script Doc Generator \u811a\u672c\u6587\u6863\u751f\u6210\u5668","text":""},{"location":"CHANGELOG/#Change_1","title":"Change","text":"<ul> <li>\u5347\u7ea7\u4e3a\u72ec\u7acb\u6a21\u5757\uff0c\u91cd\u6784\u4ee3\u7801\u903b\u8f91\u548c\u7528\u6237 UI \u754c\u9762</li> </ul>"},{"location":"CHANGELOG/#Added_1","title":"Added","text":"<ul> <li>\u65b0\u589e <code>ChineseSummaryAttribute</code> \u7279\u6027\uff0c\u7528\u4e8e\u66ff\u4ee3 XML \u7684 Summary \u6ce8\u91ca\uff0c\u5c06\u5185\u5bb9\u4f5c\u4e3a\u5143\u6570\u636e\u6807\u8bb0\u5230\u6210\u5458\u4e2d\uff0c\u4f7f\u5f97\u53cd\u5c04\u53ef\u4ee5\u83b7\u53d6</li> <li>\u65b0\u589e\u652f\u6301\u5206\u6790\u516c\u5171\u5b9e\u4f8b\u6784\u9020\u51fd\u6570\u3001\u975e\u6784\u9020\u65b9\u6cd5\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65b9\u6cd5\u3001\u5c5e\u6027\u3001\u4e8b\u4ef6\u53ca\u5b57\u6bb5</li> <li>\u65b0\u589e\u652f\u6301\u5206\u6790\u76ee\u6807\u7a0b\u5e8f\u96c6\u4e2d\u7684\u7c7b\u578b\u5e76\u751f\u6210\u6587\u6863</li> <li>\u65b0\u589e <code>Test</code> \u6587\u4ef6\u5939\uff0c\u7ecf\u624b\u52a8\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u652f\u6301\u76f8\u5f53\u591a\u7684\u811a\u672c\u5185\u5bb9\u5206\u6790\u3002</li> </ul>"},{"location":"CHANGELOG/#Fixed","title":"Fixed","text":"<ul> <li>\u4fee\u590d\u5728\u4e2d\u6587 API \u6587\u6863\u751f\u6210\u5668\u4e2d\uff0c\u65b9\u6cd5\u5728\u9ad8\u5c42\u7ea7\u57fa\u7c7b\uff08\u4e0d\u9650\u5c42\u7ea7\uff0c\u5982\u7956\u7236\u7c7b\u53ca\u4ee5\u4e0a\uff09\u58f0\u660e\u3001\u5728\u4e0b\u5c42\u57fa\u7c7b\uff08\u4e0d\u9650\u5c42\u7ea7\uff09\u91cd\u5199\u65f6\u672a\u88ab\u6b63\u786e\u5f52\u7eb3\u81f3\u7ee7\u627f\u65b9\u6cd5\u5217\u8868\u7684\u95ee\u9898</li> <li>\u4fee\u590d\u5728\u65b9\u6cd5\u5206\u6790\u6570\u636e\u4e2d\uff0c\u63a5\u53e3\u58f0\u660e\u7684\u65b9\u6cd5\u5728\u5f53\u524d\u7c7b\u5b9e\u73b0\u65f6\uff0c\u4ee3\u7801\u903b\u8f91\u4e2d\u5e76\u4e0d\u5b58\u5728 override \u5173\u952e\u5b57\uff0c\u800c\u65b9\u6cd5\u58f0\u660e\u5b57\u7b26\u4e32\u4e2d\u9519\u8bef\u663e\u793a override \u7684\u95ee\u9898</li> </ul>"},{"location":"CHANGELOG/#Community-\u793e\u533a\u6a21\u5757","title":"Community \u793e\u533a\u6a21\u5757","text":""},{"location":"CHANGELOG/#Added_2","title":"Added","text":"<ul> <li>\u65b0\u589e <code>ResolvedParametersOverviewCardSO</code> \u5361\u7247\u6848\u4f8b\uff0c\u4e3a\u7eaf <code>Editor</code> \u6a21\u5757</li> <li>\u65b0\u589e <code>SwitchButtonAttributeCardSO</code> \u5361\u7247\u6848\u4f8b\uff0c\u5305\u542b <code>Runtime</code> \u548c <code>Editor</code> \u4e24\u90e8\u5206</li> </ul>"},{"location":"CHANGELOG/#033---alpha---2025-08-17","title":"[0.3.3 - alpha] - 2025-08-17","text":"<ul> <li>Alpha \u9636\u6bb5\u4e0d\u4fdd\u8bc1\u517c\u5bb9\u6027\uff0c\u5185\u5bb9\u968f\u65f6\u53ef\u80fd\u4fee\u6539\u3002</li> <li>\u76ee\u524d <code>v0.3.3 - alpha</code> \u5df2\u7ecf\u53ef\u4ee5\u652f\u6301\u57fa\u7840\u529f\u80fd\u8fd0\u884c\uff0c\u5177\u4f53\u67e5\u770b Odin Toolkits For Unity</li> </ul>"},{"location":"CHANGELOG/#013beta---2025-05-21","title":"[0.1.3.beta] - 2025-05-21","text":"<ul> <li>Beta \u9636\u6bb5\u4e0d\u4fdd\u8bc1\u5411\u524d\u517c\u5bb9\uff0c\u5220\u9664\u65e7\u7248\u672c\u518d\u5bfc\u5165</li> </ul>"},{"location":"CHANGELOG/#Added_3","title":"Added","text":"<ul> <li>\u65b0\u589e <code>SwitchButtonAttribute</code>\uff0c\u5c06 <code>bool</code> \u663e\u793a\u4e3a\u5f00\u5173\uff0c\u517c\u5bb9 <code>ToggleLeftAttribute</code> \u7279\u6027 - \u4fee\u6539\u81ea <code>Schwapo</code> \u5f00\u6e90\u9879\u76ee</li> <li>\u65b0\u589e <code>Singleton</code> \u5355\u4f8b\u6a21\u5757</li> </ul>"},{"location":"CHANGELOG/#Changed","title":"Changed","text":"<ul> <li>\u5b8c\u5584\u751f\u6210\u6a21\u677f\u4ee3\u7801\u5de5\u5177 <code>GenerateTemplateCode</code>\uff0c\u5e76\u5b8c\u5584 <code>OdinToolkits</code> \u6587\u6863\u7f51\u7ad9\u4fe1\u606f</li> <li>\u8c03\u6574\u83dc\u5355\u8def\u5f84</li> <li>\u8c03\u6574 <code>OdinToolkits</code> \u6587\u4ef6\u5939\u5b9a\u4f4d\uff0c\u652f\u6301 <code>OdinToolkits</code> \u6587\u4ef6\u5939\u6574\u4f53\u79fb\u52a8</li> <li>\u8c03\u6574 <code>Common</code> \u6587\u4ef6\u5939</li> <li>\u5b8c\u5584 <code>QuickGenerateSO</code> \u6587\u6863\u4fe1\u606f</li> </ul>"},{"location":"CHANGELOG/#Removed","title":"Removed","text":"<ul> <li><code>ComponentBinder</code>\uff0c\u7ec4\u4ef6\u7ed1\u5b9a\u5de5\u5177\uff0c\u5728\u9879\u76ee\u4e2d\u5e76\u672a\u5b8c\u5584\uff0c\u65e0\u6cd5\u4f7f\u7528</li> <li>\u79fb\u9664 <code>OdinToolkits</code> \u7f16\u8f91\u5668\u914d\u7f6e\uff0c\u672a\u4fee\u6539\u5b8c\u5584</li> </ul>"},{"location":"CHANGELOG/#012beta---2025-05-09","title":"[0.1.2.beta] - 2025-05-09","text":""},{"location":"CHANGELOG/#Changed_1","title":"Changed","text":"<ul> <li>Beta \u9636\u6bb5\u4e0d\u5411\u524d\u517c\u5bb9</li> <li>\u91cd\u65b0\u8bbe\u8ba1\u9879\u76ee\u7ed3\u6784\uff0c\u6839\u76ee\u5f55\u4e3a Plugins/Yuumix/OdinToolkits\uff0c\u5c06 SO \u6846\u67b6\u79fb\u81f3 OdinToolkits \u6587\u4ef6\u5939\u5185\u3002</li> </ul>"},{"location":"CHANGELOG/#011---2025-04-28","title":"[0.1.1] - 2025-04-28","text":""},{"location":"CHANGELOG/#Added_4","title":"Added","text":"<ul> <li>\u65b0\u589e\u4e24\u4e2a\u7b2c\u4e09\u65b9\u5f15\u7528\uff0c\u4f4d\u4e8e ThirdParty \u6587\u4ef6\u5939\uff0c\u5305\u62ec\u4e00\u4e2a Odin \u76f8\u5173\u5f00\u6e90\u5e93 \u548c\u4e00\u4e2a Log\u76f8\u5173\u514d\u8d39\u8d44\u6e90</li> <li>\u65b0\u589e Odin \u81ea\u5e26\u7279\u6027\u89e3\u6790\u624b\u518c\uff0c\u4e2d\u6587\u89e3\u6790 Odin \u9ed8\u8ba4\u63d0\u4f9b\u7684 Attributes\uff0c\u6bd4\u5b98\u65b9\u7684\u624b\u518c\u66f4\u9002\u5408\u4e2d\u6587\u5f00\u53d1\u8005\u3002</li> <li>\u65b0\u589e\u6a21\u7248\u4ee3\u7801\u751f\u6210\u5de5\u5177</li> <li>\u65b0\u589e ComponentBinder \uff0c\u7ec4\u4ef6\u7ed1\u5b9a\u5de5\u5177</li> <li>\u65b0\u589e OdinToolkits \u7f16\u8f91\u5668\u914d\u7f6e</li> <li>\u65b0\u589e\u81ea\u5b9a\u4e49\u6269\u5c55 Odin Attribute</li> <li>\u65b0\u589e\u63d0\u53d6 Odin Syntax Highlight \u8d44\u6e90\u6587\u4ef6\uff0c\u8ba9 Odin \u7684\u8bed\u6cd5\u9ad8\u4eae\u4e3a\u5f00\u53d1\u8005\u6240\u7528</li> <li>\u65b0\u589e\u901a\u7528\u6a21\u5757 Common\uff0c\u4e00\u4e9b\u8de8\u9879\u76ee\u901a\u7528\u7c7b\uff0c\u65b9\u6cd5</li> </ul>"},{"location":"CHANGELOG/#010---2025-04-21","title":"[0.1.0] - 2025-04-21","text":""},{"location":"CHANGELOG/#Added_5","title":"Added","text":"<ul> <li>\u65b0\u589e\u4e00\u4e2a\u7b80\u5355\u5de5\u5177\uff0cQuickGenerateSO - \u5feb\u901f\u53f3\u952e\u751f\u6210 SO \u8d44\u6e90\uff0c\u81ea\u52a8\u904d\u5386\u9009\u62e9\u7684\u8d44\u6e90\uff0c\u6839\u636e\u7ee7\u627f\u4e86 <code>ScriptableObject</code> \u7684\u811a\u672c\uff0c\u751f\u6210 SO \u8d44\u6e90\u3002</li> </ul> 2025-10-272025-10-27"},{"location":"CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>[\u6b63\u5728\u7f16\u5199\u4e2d...]</p>"},{"location":"CONTRIBUTING/#Community-\u793e\u533a\u6a21\u5757\u8d21\u732e\u6307\u5357","title":"<code>Community</code> \u793e\u533a\u6a21\u5757\u8d21\u732e\u6307\u5357","text":""},{"location":"CONTRIBUTING/#\u8d21\u732e\u89c4\u8303","title":"\u8d21\u732e\u89c4\u8303","text":"<ol> <li>\u5c3d\u91cf\u4ee5\u5355\u4e2a\u6587\u4ef6\u5939\u7684\u5f62\u5f0f\u8d21\u732e</li> <li>\u5728\u7528\u6237\u4e0d\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u5f71\u54cd\u8fd0\u884c\u903b\u8f91\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6\u6a21\u5757\u7684\u6b63\u5e38\u4f7f\u7528\u3002\u53ef\u4ee5\u6709\u540e\u53f0\u81ea\u52a8\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u6bd4\u5982\u573a\u666f\u5355\u4f8b\u3002</li> <li>\u5220\u9664\u76f8\u5173\u6587\u4ef6\u5939\u4e0d\u62a5\u9519\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u9879\u76ee\u8fd0\u884c\u65f6\u9519\u8bef\u3002</li> <li>\u7f16\u8f91\u5668\u6269\u5c55\u65b9\u9762\u5c3d\u91cf\u4f7f\u7528 <code>Odin Inspector</code>\uff0c\u53ef\u4ee5\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\u53c2\u8003\uff0c\u5b66\u4e60 <code>Odin Inspector</code> \u7684\u4f7f\u7528\u3002</li> <li>Community \u6a21\u5757\u7684\u4ee3\u7801\u6837\u5f0f\u65e0\u8981\u6c42\uff0c\u9009\u62e9\u4f60\u559c\u6b22\u7684\u65b9\u5f0f\u3002</li> <li>\u53ea\u5305\u542b <code>OdinToolkits</code> \u7684\u65b0\u9879\u76ee\u6253\u5305\u65e0\u8b66\u544a\u6216\u9519\u8bef\u3002</li> <li>\u9759\u6001\u53d8\u91cf\u8981\u6c42\u517c\u5bb9 <code>Play Mode</code>\uff0c\u5728\u7981\u6b62\u57df\u91cd\u65b0\u52a0\u8f7d\u65f6\u4e0d\u51fa\u9519\uff0c\u4e0b\u6587\u5305\u542b\u793a\u4f8b\u3002</li> </ol>"},{"location":"CONTRIBUTING/#\u9759\u6001\u53d8\u91cf\u517c\u5bb9-Play-Mode-\u793a\u4f8b","title":"\u9759\u6001\u53d8\u91cf\u517c\u5bb9 <code>Play Mode</code> \u793a\u4f8b","text":"<pre><code>#if UNITY_EDITOR  \n\n        #region \u517c\u5bb9 [\u7981\u7528\u57df\u91cd\u65b0\u52a0\u8f7d]  \n\n        [InitializeOnLoadMethod]  \n        static void Initialize()  \n        {            \n            EditorApplication.playModeStateChanged -= OnPlayModeStateChanged;  \n            EditorApplication.playModeStateChanged += OnPlayModeStateChanged;  \n        }\n\n        static void OnPlayModeStateChanged(PlayModeStateChange state)  \n        {            \n            if (state == PlayModeStateChange.EnteredPlayMode)  \n            {                \n                OnLanguageChange = null;  \n            }        \n        }  \n\n        #endregion  \n\n#endif\n</code></pre>"},{"location":"CONTRIBUTING/#Modules-\u6838\u5fc3\u6a21\u5757\u8d21\u732e","title":"<code>Modules</code> \u6838\u5fc3\u6a21\u5757\u8d21\u732e","text":"<p>\u5f85\u8865\u5145...</p>"},{"location":"CONTRIBUTING/#Core-\u6838\u5fc3\u90e8\u5206\u8d21\u732e","title":"<code>Core</code> \u6838\u5fc3\u90e8\u5206\u8d21\u732e","text":"<p>\u5f85\u8865\u5145...</p> <p>\u5982\u8d21\u732e <code>Core</code> \u6216 <code>Module</code> \u6a21\u5757\uff0c\u8bf7\u53c2\u8003 <code>Core/Editor/Misc/OdinToolkitsCodeStyleExample.cs</code> \u4ee3\u7801\u6837\u5f0f\u6587\u4ef6\u3002</p> 2025-10-272025-10-27"},{"location":"LICENSE/","title":"The MIT License (MIT)","text":"<p>Copyright (c) 2025 YuumixCode</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p>\u73b0\u7279\u6b64\u6388\u4e88\u4efb\u4f55\u83b7\u53d6\u672c\u8f6f\u4ef6\u53ca\u76f8\u5173\u6587\u6863\u6587\u4ef6\uff08\u4ee5\u4e0b\u7b80\u79f0\u201c\u8f6f\u4ef6\u201d\uff09\u7684\u4eba\u58eb\u514d\u8d39\u4f7f\u7528\u8be5\u8f6f\u4ef6\u7684\u6743\u9650\uff0c\u4e14\u4e0d\u53d7\u4efb\u4f55\u9650\u5236\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4f7f\u7528\u3001\u590d\u5236\u3001\u4fee\u6539\u3001\u5408\u5e76\u3001\u53d1\u5e03\u3001\u5206\u53d1\u3001\u8f6c\u6388\u8bb8\u53ef\u4ee5\u53ca/\u6216\u51fa\u552e\u8be5\u8f6f\u4ef6\u7684\u6743\u5229\uff0c\u4ee5\u53ca\u5141\u8bb8\u56e0\u4f7f\u7528\u8be5\u8f6f\u4ef6\u800c\u83b7\u5f97\u8be5\u8f6f\u4ef6\u7684\u4eba\u8fdb\u884c\u4e0a\u8ff0\u64cd\u4f5c\u7684\u6743\u9650\uff0c\u4f46\u9700\u9075\u5b88\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <p>*\u4e0a\u8ff0\u7248\u6743\u58f0\u660e\u4ee5\u53ca\u672c\u8bb8\u53ef\u58f0\u660e\u5e94\u5305\u542b\u5728\u6240\u6709\u526f\u672c\u6216\u8f6f\u4ef6\u7684\u5b9e\u8d28\u6027\u5185\u5bb9\u4e2d\u3002</p> <p>\u8be5\u8f6f\u4ef6\u201c\u6309\u539f\u6837\u201d\u63d0\u4f9b\uff0c\u4e0d\u63d0\u4f9b\u4efb\u4f55\u5f62\u5f0f\u7684\u4fdd\u8bc1\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5173\u4e8e\u5176\u6027\u80fd\u3001\u9002\u7528\u6027\u4ee5\u53ca\u4e0d\u4fb5\u72af\u7248\u6743\u7684\u4fdd\u8bc1\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f5c\u8005\u6216\u7248\u6743\u6301\u6709\u8005\u5747\u4e0d\u627f\u62c5\u4efb\u4f55\u56e0\u8be5\u8f6f\u4ef6\u6216\u5176\u4f7f\u7528\u800c\u5f15\u8d77\u7684\u4efb\u4f55\u7d22\u8d54\u3001\u635f\u5bb3\u8d54\u507f\u6216\u5176\u4ed6\u8d23\u4efb\uff0c\u65e0\u8bba\u662f\u57fa\u4e8e\u5408\u540c\u3001\u4fb5\u6743\u8fd8\u662f\u5176\u4ed6\u539f\u56e0\u3002</p> 2025-10-272025-10-27"},{"location":"LOGO-LICENSE/","title":"Logo \u56fe\u6807\u8bb8\u53ef\u8bc1\u58f0\u660e","text":""},{"location":"LOGO-LICENSE/#\u57fa\u672c\u4fe1\u606f","title":"\u57fa\u672c\u4fe1\u606f","text":"\u9879\u76ee \u8be6\u60c5 \u9879\u76ee\u540d\u79f0 Odin Toolkits Logo \u8bbe\u8ba1\u8005 YuumixCode \u521b\u5efa\u65e5\u671f 2025\u5e74 \u7248\u6743\u5f52\u5c5e YuumixCode \u8bb8\u53ef\u8bc1 MIT License"},{"location":"LOGO-LICENSE/#Logo-\u8bbe\u8ba1\u8be6\u60c5","title":"Logo \u8bbe\u8ba1\u8be6\u60c5","text":""},{"location":"LOGO-LICENSE/#\u8bbe\u8ba1\u5de5\u5177\u4e0e\u6765\u6e90","title":"\u8bbe\u8ba1\u5de5\u5177\u4e0e\u6765\u6e90","text":"<ul> <li>\u8bbe\u8ba1\u5de5\u5177: ShipFast LogoFast</li> <li>\u56fe\u6807\u6765\u6e90: Lucide Icons - <code>Webhook</code> \u56fe\u6807</li> <li>\u56fe\u6807\u8bb8\u53ef\u8bc1: ISC License (\u5f00\u6e90\u53cb\u597d)</li> <li>\u8bbe\u8ba1\u65b9\u5f0f: \u5728\u7ebf\u5de5\u5177\u751f\u6210 + \u81ea\u5b9a\u4e49\u6837\u5f0f\u914d\u7f6e</li> </ul>"},{"location":"LOGO-LICENSE/#\u8bbe\u8ba1\u53c2\u6570\u914d\u7f6e","title":"\u8bbe\u8ba1\u53c2\u6570\u914d\u7f6e","text":""},{"location":"LOGO-LICENSE/#\u56fe\u6807\u8bbe\u7f6e","title":"\u56fe\u6807\u8bbe\u7f6e","text":"\u53c2\u6570 \u6570\u503c \u8bf4\u660e \u56fe\u6807\u540d\u79f0 Webhook \u6765\u81ea Lucide Icons \u5c3a\u5bf8 350px \u9ad8\u6e05\u663e\u793a \u65cb\u8f6c\u89d2\u5ea6 180\u00b0 \u7ffb\u8f6c\u663e\u793a \u8fb9\u6846\u5bbd\u5ea6 2.5px \u7ec6\u8fb9\u6846\u8bbe\u8ba1 \u4e3b\u4f53\u989c\u8272 <code>#333333</code> \u6df1\u7070\u8272\uff08\u975e\u7eaf\u9ed1\uff09"},{"location":"LOGO-LICENSE/#\u80cc\u666f\u8bbe\u8ba1","title":"\u80cc\u666f\u8bbe\u8ba1","text":"\u53c2\u6570 \u6570\u503c \u8bf4\u660e \u5706\u89d2 120px \u5927\u5706\u89d2\u8bbe\u8ba1 \u5185\u8fb9\u8ddd 10px \u9002\u4e2d\u95f4\u8ddd \u6e10\u53d8\u89d2\u5ea6 45\u00b0 \u5bf9\u89d2\u7ebf\u6e10\u53d8 \u5de6\u4e0b\u89d2\u8272 <code>#ff3802</code> \u6a59\u7ea2\u8272 \u4e2d\u95f4\u8fc7\u6e21 \u7eaf\u767d\u8272 (60%\u4f4d\u7f6e) \u4e2d\u5fc3\u4eae\u70b9 \u53f3\u4e0a\u89d2\u8272 <code>#0095ff</code> \u6df1\u84dd\u8272"},{"location":"LOGO-LICENSE/#\u989c\u8272\u65b9\u6848","title":"\u989c\u8272\u65b9\u6848","text":""},{"location":"LOGO-LICENSE/#\u5168\u5f69\u7248\u672c","title":"\u5168\u5f69\u7248\u672c","text":"<pre><code>/* \u4e3b\u56fe\u6807\u989c\u8272 */\n.logo-icon {\n  color: #333333; /* \u6df1\u7070\u8272 */\n  border: 2.5px solid #333333;\n}\n\n/* \u80cc\u666f\u6e10\u53d8 */\n.logo-background {\n  background: linear-gradient(45deg, \n    #ff3802 0%,     /* \u6a59\u7ea2\u8272 */\n    #ffffff 60%,    /* \u767d\u8272\u8fc7\u6e21 */\n    #0095ff 100%    /* \u6df1\u84dd\u8272 */\n  );\n  border-radius: 120px;\n  padding: 10px;\n}\n</code></pre>"},{"location":"LOGO-LICENSE/#\u8bb8\u53ef\u8bc1\u58f0\u660e","title":"\u8bb8\u53ef\u8bc1\u58f0\u660e","text":""},{"location":"LOGO-LICENSE/#Logo-\u7248\u6743\u4fe1\u606f","title":"Logo \u7248\u6743\u4fe1\u606f","text":"<pre><code>Copyright (c) 2025 YuumixCode\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this logo design and associated documentation files (the \"Logo\"), to deal\nin the Logo without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Logo, and to permit persons to whom the Logo is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Logo.\n\nTHE LOGO IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE LOGO OR THE USE OR OTHER DEALINGS IN THE\nLOGO.\n</code></pre>"},{"location":"LOGO-LICENSE/#\u8054\u7cfb","title":"\u8054\u7cfb","text":"<p>\u5982\u6709\u5173\u4e8e Logo \u4f7f\u7528\u7684\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb\uff1a</p> <ul> <li>\u90ae\u7bb1: zeriying@gmail.com</li> <li>\u9879\u76ee\u5730\u5740: https://github.com/yuumixcode/OdinToolkits-For-Unity</li> <li>\u7f51\u7ad9: https://www.odintoolkits.cn/</li> </ul>"},{"location":"LOGO-LICENSE/#\u81f4\u8c22","title":"\u81f4\u8c22","text":""},{"location":"LOGO-LICENSE/#Lucide-Icons-\u81f4\u8c22","title":"Lucide Icons \u81f4\u8c22","text":"<pre><code>\u672cLogo\u4f7f\u7528\u4e86 Lucide Icons \u9879\u76ee\u4e2d\u7684 \"Webhook\" \u56fe\u6807\n\n- \u9879\u76ee\u5730\u5740: https://lucide.dev/\n- \u8bb8\u53ef\u8bc1: ISC License\n- \u7248\u6743: Lucide Contributors\n- \u4f7f\u7528\u65b9\u5f0f: \u7ecf\u8fc7\u65cb\u8f6c\u548c\u6837\u5f0f\u5b9a\u5236\u540e\u96c6\u6210\u5230 Logo \u8bbe\u8ba1\u4e2d\n</code></pre>"},{"location":"LOGO-LICENSE/#\u8bbe\u8ba1\u5de5\u5177\u81f4\u8c22","title":"\u8bbe\u8ba1\u5de5\u5177\u81f4\u8c22","text":"<pre><code>Logo \u901a\u8fc7 ShipFast LogoFast \u5728\u7ebf\u5de5\u5177\u751f\u6210\n\n- \u5de5\u5177\u5730\u5740: https://shipfa.st/tools/logo-fast\n- \u5f00\u53d1\u8005: Marc Lou (Sirenix)\n- \u6027\u8d28: \u514d\u8d39\u5728\u7ebf\u8bbe\u8ba1\u5de5\u5177\n- \u751f\u6210\u5185\u5bb9\u7248\u6743\u5f52\u7528\u6237\u6240\u6709\n</code></pre> 2025-10-272025-10-27"},{"location":"blog/","title":"\u535a\u5ba2\u6982\u8ff0","text":"<p>\u8fd9\u662f <code>Odin Toolkits</code> \u63d2\u4ef6\u7684\u5f00\u53d1\u8005\u535a\u5ba2\uff0c\u535a\u5ba2\u5185\u5bb9\u5c06\u4ee5 <code>Odin Toolkits</code> \u9879\u76ee\u4ea7\u54c1\u4e3a\u4e2d\u5fc3\uff0c\u53d1\u5e03\u4e0e\u5176\u76f8\u5173\u7684\u6587\u7ae0\uff0c\u5305\u62ec\u63d2\u4ef6\u66f4\u65b0\uff0c\u6e90\u7801\u89e3\u8bfb\u7b49</p> <p>\u5982\u679c\u4f60\u5bf9 <code>Odin Toolkits</code> \u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u8bbf\u95ee Odin Toolkits\u3002</p> <p>\u6b22\u8fce\u4f60\u7684\u8d21\u732e\uff01</p> 2025-08-062025-10-27","tags":["Unity","Odin Inspector"]},{"location":"blog/tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"blog/tags/#tag:odin-inspector","title":"Odin Inspector","text":"<ul> <li>            \u535a\u5ba2\u6982\u8ff0          </li> </ul>"},{"location":"blog/tags/#tag:qframework","title":"QFramework","text":"<ul> <li>            Unity C# \u4ee3\u7801\u8bbe\u8ba1\u5185\u529f\uff1a\u4ece\u67b6\u6784\u601d\u7ef4\u5230\u5b9e\u6218\u7ecf\u9a8c          </li> </ul>"},{"location":"blog/tags/#tag:solid","title":"SOLID","text":"<ul> <li>            C# SOLID \u539f\u5219\u5b8c\u6574\u6307\u5357\uff1a\u4ece\u7406\u8bba\u5230 Unity \u5b9e\u6218          </li> <li>            Unity C# \u4ee3\u7801\u8bbe\u8ba1\u5185\u529f\uff1a\u4ece\u67b6\u6784\u601d\u7ef4\u5230\u5b9e\u6218\u7ecf\u9a8c          </li> </ul>"},{"location":"blog/tags/#tag:scriptdocgenerator","title":"ScriptDocGenerator","text":"<ul> <li>            \u7c7b\u578b\u89e3\u6790\u5668\u652f\u6301\u60c5\u51b5\u603b\u89c8          </li> </ul>"},{"location":"blog/tags/#tag:unity","title":"Unity","text":"<ul> <li>            \u535a\u5ba2\u6982\u8ff0          </li> </ul>"},{"location":"blog/tags/#tag:csharp","title":"csharp","text":"<ul> <li>            C# SOLID \u539f\u5219\u5b8c\u6574\u6307\u5357\uff1a\u4ece\u7406\u8bba\u5230 Unity \u5b9e\u6218          </li> <li>            C# \u7f16\u7801\u5efa\u8bae          </li> <li>            Odin Toolkits \u7684\u7f16\u7801\u89c4\u8303\u667a\u80fd\u4f53\u63d0\u793a\u8bcd\u53c2\u8003          </li> </ul>"},{"location":"blog/tags/#tag:sirenix","title":"sirenix","text":"<ul> <li>            Sirenix \u5b98\u65b9\u4fe1\u606f\u8bb0\u5f55          </li> </ul>"},{"location":"blog/tags/#tag:\u5e8f\u5217\u5316","title":"\u5e8f\u5217\u5316","text":"<ul> <li>            Unity SerializeReferenceAttribute \u89e3\u6790          </li> </ul>"},{"location":"blog/tags/#tag:\u63d0\u793a\u8bcd\u53c2\u8003","title":"\u63d0\u793a\u8bcd\u53c2\u8003","text":"<ul> <li>            SummaryAttribute \u6ce8\u91ca\u63d0\u793a\u8bcd\u53c2\u8003          </li> </ul>"},{"location":"blog/tags/#tag:\u6700\u4f73\u5b9e\u8df5","title":"\u6700\u4f73\u5b9e\u8df5","text":"<ul> <li>            C# SOLID \u539f\u5219\u5b8c\u6574\u6307\u5357\uff1a\u4ece\u7406\u8bba\u5230 Unity \u5b9e\u6218          </li> </ul>"},{"location":"blog/tags/#tag:\u8bbe\u8ba1\u6a21\u5f0f","title":"\u8bbe\u8ba1\u6a21\u5f0f","text":"<ul> <li>            C# SOLID \u539f\u5219\u5b8c\u6574\u6307\u5357\uff1a\u4ece\u7406\u8bba\u5230 Unity \u5b9e\u6218          </li> <li>            Unity C# \u4ee3\u7801\u8bbe\u8ba1\u5185\u529f\uff1a\u4ece\u67b6\u6784\u601d\u7ef4\u5230\u5b9e\u6218\u7ecf\u9a8c          </li> </ul> 2025-10-272025-10-27"},{"location":"blog/2025/09/24/csharp-code-suggestions/","title":"C# \u7f16\u7801\u5efa\u8bae","text":"<p>C# \u662f\u4e00\u79cd\u975e\u5e38\u7075\u6d3b\u4e14\u529f\u80fd\u4e30\u5bcc\u7684\u8bed\u8a00\uff0c\u5b83\u63d0\u4f9b\u4e86\u5c5e\u6027\u3001\u65b9\u6cd5\u3001\u7ee7\u627f\u3001\u591a\u6001\u7b49\u4e30\u5bcc\u7684\u7279\u6027\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u6784\u5efa\u9ad8\u6548\u3001\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\u3002\u672c\u6587\u63d0\u4f9b\u4e00\u4e9b\u7f16\u7801\u5efa\u8bae\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5f62\u6210\u7edf\u4e00\u7684\u7f16\u7801\u98ce\u683c\u3002</p>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#\u5c5e\u6027\u4e0e\u65b9\u6cd5\u7684\u4f7f\u7528\u65f6\u673a\u63a8\u8350","title":"\u5c5e\u6027\u4e0e\u65b9\u6cd5\u7684\u4f7f\u7528\u65f6\u673a\u63a8\u8350","text":"<p>\u5728C#\u5f00\u53d1\u4e2d\uff0c\u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u4e8e\u8bbf\u95ee\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u4f46\u5b83\u4eec\u6709\u4e0d\u540c\u7684\u8bed\u4e49\u542b\u4e49\u548c\u4f7f\u7528\u573a\u666f\u3002\u6b63\u786e\u533a\u5206\u5b83\u4eec\u7684\u4f7f\u7528\u65f6\u673a\u5bf9\u4e8e\u7f16\u5199\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\u81f3\u5173\u91cd\u8981\u3002</p>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#1-\u4f7f\u7528\u5c5e\u6027\u7684\u60c5\u51b5","title":"1. \u4f7f\u7528\u5c5e\u6027\u7684\u60c5\u51b5","text":"","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#11-\u5bf9\u8c61\u72b6\u6001\u548c\u7279\u5f81","title":"1.1 \u5bf9\u8c61\u72b6\u6001\u548c\u7279\u5f81","text":"<pre><code>// \u6b63\u786e\uff1a\u8868\u793a\u5bf9\u8c61\u7684\u57fa\u672c\u7279\u5f81\npublic class Person \n{\n    public string FirstName { get; set; }  // \u53ef\u8bfb\u5199\u72b6\u6001\n    public string LastName { get; set; }   // \u53ef\u8bfb\u5199\u72b6\u6001\n    public int Age { get; }                // \u53ea\u8bfb\u72b6\u6001\uff08\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\uff09\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#12-\u7b80\u5355\u8ba1\u7b97\u5c5e\u6027","title":"1.2 \u7b80\u5355\u8ba1\u7b97\u5c5e\u6027","text":"<pre><code>// \u6b63\u786e\uff1a\u7b80\u5355\u3001\u9ad8\u6027\u80fd\u7684\u8ba1\u7b97\npublic class Rectangle \n{\n    public double Width { get; set; }\n    public double Height { get; set; }\n    public double Area =&gt; Width * Height;  // \u7b80\u5355\u8ba1\u7b97\u5c5e\u6027\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#13-\u9700\u8981\u8f7b\u91cf\u7ea7\u9a8c\u8bc1\u7684\u5b57\u6bb5","title":"1.3 \u9700\u8981\u8f7b\u91cf\u7ea7\u9a8c\u8bc1\u7684\u5b57\u6bb5","text":"<pre><code>// \u6b63\u786e\uff1a\u7b80\u5355\u7684\u9a8c\u8bc1\u903b\u8f91\nprivate string _email;\npublic string Email \n{\n    get =&gt; _email;\n    set =&gt; _email = string.IsNullOrEmpty(value) ? \n        throw new ArgumentException(\"\u90ae\u7bb1\u4e0d\u80fd\u4e3a\u7a7a\") : value;\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#2-\u4f7f\u7528\u65b9\u6cd5\u7684\u60c5\u51b5","title":"2. \u4f7f\u7528\u65b9\u6cd5\u7684\u60c5\u51b5","text":"","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#21-\u590d\u6742\u4e1a\u52a1\u903b\u8f91","title":"2.1 \u590d\u6742\u4e1a\u52a1\u903b\u8f91","text":"<pre><code>// \u6b63\u786e\uff1a\u590d\u6742\u8ba1\u7b97\u5e94\u4f7f\u7528\u65b9\u6cd5\npublic OrderSummary GenerateOrderSummary(OrderFilter filter)\n{\n    // \u590d\u6742\u4e1a\u52a1\u903b\u8f91\n    return new OrderSummary();\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#22-\u6709\u526f\u4f5c\u7528\u7684\u64cd\u4f5c","title":"2.2 \u6709\u526f\u4f5c\u7528\u7684\u64cd\u4f5c","text":"<pre><code>// \u6b63\u786e\uff1a\u4f1a\u6539\u53d8\u7cfb\u7edf\u72b6\u6001\u7684\u64cd\u4f5c\u4f7f\u7528\u65b9\u6cd5\npublic bool SendEmail(Notification notification)\n{\n    // \u53d1\u9001\u90ae\u4ef6\uff0c\u6709\u5916\u90e8\u526f\u4f5c\u7528\n    return true;\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#23-\u9700\u8981\u591a\u4e2a\u53c2\u6570","title":"2.3 \u9700\u8981\u591a\u4e2a\u53c2\u6570","text":"<pre><code>// \u6b63\u786e\uff1a\u9700\u8981\u591a\u4e2a\u8f93\u5165\u53c2\u6570\u65f6\u4f7f\u7528\u65b9\u6cd5\npublic Customer CreateCustomer(string name, string email, string phone, Address address)\n{\n    return new Customer(name, email, phone, address);\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#24-\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u64cd\u4f5c","title":"2.4 \u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u64cd\u4f5c","text":"<pre><code>// \u6b63\u786e\uff1a\u53ef\u80fd\u5931\u8d25\u7684\u64cd\u4f5c\u4f7f\u7528\u65b9\u6cd5\npublic Product FindProduct(string sku)\n{\n    if (string.IsNullOrEmpty(sku))\n        throw new ArgumentException(\"SKU\u4e0d\u80fd\u4e3a\u7a7a\");\n\n    // \u67e5\u627e\u903b\u8f91\n    return product;\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#3-\u7279\u6b8a\u60c5\u51b5\u5904\u7406","title":"3. \u7279\u6b8a\u60c5\u51b5\u5904\u7406","text":"","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#31-\u53ea\u8bfb\u72b6\u6001","title":"3.1 \u53ea\u8bfb\u72b6\u6001","text":"<p>\u5bf9\u4e8e\u53ea\u8bfb\u72b6\u6001\uff0c\u4ecd\u7136\u4f7f\u7528\u5c5e\u6027\u800c\u975e\u65b9\u6cd5\uff1a</p> <pre><code>// \u63a8\u8350\npublic DateTime CreatedAt { get; } = DateTime.Now;\n\n// \u4e0d\u63a8\u8350\npublic DateTime GetCreatedAt() =&gt; _createdAt;\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#32-\u5ef6\u8fdf\u52a0\u8f7d","title":"3.2 \u5ef6\u8fdf\u52a0\u8f7d","text":"<p>\u5bf9\u4e8e\u5ef6\u8fdf\u52a0\u8f7d\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5c5e\u6027\uff1a</p> <pre><code>private List&lt;Order&gt; _orders;\npublic List&lt;Order&gt; Orders \n{\n    get \n    {\n        if (_orders == null)\n            _orders = LoadOrders(); // \u8f7b\u91cf\u7ea7\u5ef6\u8fdf\u52a0\u8f7d\n        return _orders;\n    }\n}\n</code></pre>","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-code-suggestions/#\u89c4\u8303\u7406\u7531\u603b\u7ed3","title":"\u89c4\u8303\u7406\u7531\u603b\u7ed3","text":"<ol> <li>\u8bed\u4e49\u6e05\u6670\uff1a\u5c5e\u6027\u8868\u793a\"\u662f\u4ec0\u4e48\"\uff0c\u65b9\u6cd5\u8868\u793a\"\u505a\u4ec0\u4e48\"</li> <li>\u7b26\u5408\u7ea6\u5b9a\uff1a\u9075\u5faaC#\u793e\u533a\u548c\u5fae\u8f6f\u7684\u7f16\u7801\u7ea6\u5b9a</li> <li>\u6846\u67b6\u517c\u5bb9\uff1a\u66f4\u597d\u5730\u652f\u6301\u6570\u636e\u7ed1\u5b9a\u3001\u5e8f\u5217\u5316\u7b49\u6846\u67b6\u529f\u80fd</li> <li>\u6027\u80fd\u8003\u91cf\uff1a\u8c03\u7528\u8005\u53ef\u4ee5\u5408\u7406\u5047\u8bbe\u5c5e\u6027\u8bbf\u95ee\u662f\u8f7b\u91cf\u7ea7\u7684</li> <li>\u7ef4\u62a4\u6027\uff1a\u6e05\u6670\u7684\u533a\u5206\u6709\u52a9\u4e8e\u4ee3\u7801\u7406\u89e3\u548c\u7ef4\u62a4</li> </ol> 2025-09-242025-10-27","tags":["csharp"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/","title":"C# SOLID \u539f\u5219\u5b8c\u6574\u6307\u5357\uff1a\u4ece\u7406\u8bba\u5230 Unity \u5b9e\u6218","text":"<p>\u5728 Unity \u6e38\u620f\u5f00\u53d1\u4e2d\uff0c\u968f\u7740\u9879\u76ee\u89c4\u6a21\u7684\u6269\u5927\uff0c\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5c55\u6027\u548c\u53ef\u6d4b\u8bd5\u6027\u53d8\u5f97\u81f3\u5173\u91cd\u8981\u3002SOLID \u539f\u5219\u4f5c\u4e3a\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u4e94\u5927\u57fa\u77f3\uff0c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6784\u5efa\u9ad8\u8d28\u91cf\u4ee3\u7801\u7684\u6307\u5bfc\u65b9\u9488\u3002\u672c\u6587\u5c06\u7ed3\u5408 Unity \u5f00\u53d1\u5b9e\u8df5\u548c Odin Inspector \u5de5\u5177\uff0c\u6df1\u5165\u63a2\u8ba8\u5982\u4f55\u5728 C# \u9879\u76ee\u4e2d\u5e94\u7528\u8fd9\u4e9b\u539f\u5219\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u5f15\u8a00\u4e3a\u4ec0\u4e48\u9700\u8981-SOLID-\u539f\u5219","title":"\u5f15\u8a00\uff1a\u4e3a\u4ec0\u4e48\u9700\u8981 SOLID \u539f\u5219\uff1f","text":"","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u4f20\u7edf-Unity-\u5f00\u53d1\u4e2d\u7684\u5e38\u89c1\u95ee\u9898","title":"\u4f20\u7edf Unity \u5f00\u53d1\u4e2d\u7684\u5e38\u89c1\u95ee\u9898","text":"<p>\u5728\u8bb8\u591a Unity \u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ol> <li>\u795e\u7c7b\u95ee\u9898\uff1a\u4e00\u4e2a MonoBehaviour \u811a\u672c\u627f\u62c5\u4e86\u592a\u591a\u804c\u8d23</li> <li>\u4fee\u6539\u56f0\u96be\uff1a\u6dfb\u52a0\u65b0\u529f\u80fd\u65f6\u9700\u8981\u4fee\u6539\u5927\u91cf\u73b0\u6709\u4ee3\u7801</li> <li>\u6d4b\u8bd5\u56f0\u96be\uff1a\u7ec4\u4ef6\u4e4b\u95f4\u8026\u5408\u5ea6\u9ad8\uff0c\u96be\u4ee5\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5</li> <li>\u4ee3\u7801\u91cd\u590d\uff1a\u76f8\u4f3c\u7684\u529f\u80fd\u5728\u591a\u4e2a\u5730\u65b9\u91cd\u590d\u5b9e\u73b0</li> </ol> <pre><code>// \u274c \u8fdd\u53cd\u591a\u4e2a SOLID \u539f\u5219\u7684\u793a\u4f8b\npublic class PlayerController : MonoBehaviour\n{\n    public float health = 100f;\n    public float speed = 5f;\n    public GameObject bulletPrefab;\n    public AudioSource audioSource;\n\n    void Update()\n    {\n        // \u5904\u7406\u79fb\u52a8\n        HandleMovement();\n        // \u5904\u7406\u5c04\u51fb\n        HandleShooting();\n        // \u5904\u7406\u8840\u91cf\u663e\u793a\n        UpdateHealthUI();\n        // \u5904\u7406\u97f3\u6548\n        PlaySounds();\n        // \u5904\u7406\u52a8\u753b\n        UpdateAnimations();\n    }\n\n    // ... \u5927\u91cf\u6df7\u6742\u7684\u529f\u80fd\u4ee3\u7801\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#SOLID-\u539f\u5219\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898","title":"SOLID \u539f\u5219\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898","text":"<p>SOLID \u539f\u5219\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6539\u5584\u4ee3\u7801\u8d28\u91cf\uff1a</p> <ul> <li>\u804c\u8d23\u5206\u79bb\uff1a\u6bcf\u4e2a\u7c7b\u53ea\u8d1f\u8d23\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd</li> <li>\u6269\u5c55\u53cb\u597d\uff1a\u65b0\u529f\u80fd\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u800c\u975e\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u6765\u5b9e\u73b0</li> <li>\u63a5\u53e3\u89c4\u8303\uff1a\u901a\u8fc7\u62bd\u8c61\u548c\u63a5\u53e3\u964d\u4f4e\u6a21\u5757\u95f4\u7684\u8026\u5408</li> <li>\u4f9d\u8d56\u7ba1\u7406\uff1a\u9ad8\u5c42\u6a21\u5757\u4e0d\u76f4\u63a5\u4f9d\u8d56\u4f4e\u5c42\u5b9e\u73b0\u7ec6\u8282</li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#SOLID-\u539f\u5219\u6982\u89c8","title":"SOLID \u539f\u5219\u6982\u89c8","text":"<p>SOLID \u662f\u4e94\u4e2a\u8bbe\u8ba1\u539f\u5219\u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff1a</p> \u539f\u5219 \u82f1\u6587\u540d\u79f0 \u4e2d\u6587\u540d\u79f0 \u6838\u5fc3\u7406\u5ff5 S Single Responsibility Principle \u5355\u4e00\u804c\u8d23\u539f\u5219 \u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u5f15\u8d77\u5b83\u53d8\u5316\u7684\u539f\u56e0 O Open-Closed Principle \u5f00\u95ed\u539f\u5219 \u8f6f\u4ef6\u5b9e\u4f53\u5e94\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5c01\u95ed L Liskov Substitution Principle \u91cc\u6c0f\u66ff\u6362\u539f\u5219 \u5b50\u7c7b\u5bf9\u8c61\u5fc5\u987b\u80fd\u591f\u66ff\u6362\u57fa\u7c7b\u5bf9\u8c61 I Interface Segregation Principle \u63a5\u53e3\u9694\u79bb\u539f\u5219 \u4e0d\u5e94\u5f3a\u8feb\u5ba2\u6237\u4f9d\u8d56\u4e8e\u5b83\u4eec\u4e0d\u4f7f\u7528\u7684\u63a5\u53e3 D Dependency Inversion Principle \u4f9d\u8d56\u5012\u7f6e\u539f\u5219 \u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u4f9d\u8d56\u4f4e\u5c42\u6a21\u5757\uff0c\u90fd\u5e94\u4f9d\u8d56\u62bd\u8c61 <p>\u8fd9\u4e9b\u539f\u5219\u76f8\u4e92\u8865\u5145\uff0c\u5171\u540c\u6784\u5efa\u4e86\u4e00\u4e2a\u5065\u58ee\u7684\u8f6f\u4ef6\u67b6\u6784\u57fa\u7840\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#S---\u5355\u4e00\u804c\u8d23\u539f\u5219-Single-Responsibility-Principle","title":"S - \u5355\u4e00\u804c\u8d23\u539f\u5219 (Single Responsibility Principle)","text":"","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u539f\u7406\u9610\u8ff0","title":"\u539f\u7406\u9610\u8ff0","text":"<p>\u5355\u4e00\u804c\u8d23\u539f\u5219\u662f SOLID \u539f\u5219\u4e2d\u6700\u57fa\u7840\u4e5f\u662f\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u5f15\u8d77\u5b83\u53d8\u5316\u7684\u539f\u56e0\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u627f\u62c5\u4e00\u79cd\u804c\u8d23\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u8fdd\u53cd-SRP-\u7684\u95ee\u9898\u793a\u4f8b","title":"\u8fdd\u53cd SRP \u7684\u95ee\u9898\u793a\u4f8b","text":"<p>\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u5178\u578b\u7684\u8fdd\u53cd SRP \u7684 Unity \u811a\u672c\uff1a</p> <pre><code>// \u274c \u8fdd\u53cd\u5355\u4e00\u804c\u8d23\u539f\u5219\u7684\u793a\u4f8b\npublic class BadPlayerController : MonoBehaviour\n{\n    [Header(\"\u5065\u5eb7\u7cfb\u7edf\")]\n    public float maxHealth = 100f;\n    private float currentHealth;\n\n    [Header(\"\u79fb\u52a8\u7cfb\u7edf\")]\n    public float moveSpeed = 5f;\n    private Rigidbody2D rb;\n\n    [Header(\"\u6b66\u5668\u7cfb\u7edf\")]\n    public GameObject bulletPrefab;\n    public Transform firePoint;\n    public float fireRate = 0.5f;\n    private float nextFireTime;\n\n    [Header(\"\u97f3\u6548\u7cfb\u7edf\")]\n    public AudioClip shootSound;\n    public AudioClip hurtSound;\n    private AudioSource audioSource;\n\n    [Header(\"UI \u663e\u793a\")]\n    public Slider healthBar;\n    public Text healthText;\n\n    void Start()\n    {\n        currentHealth = maxHealth;\n        rb = GetComponent&lt;Rigidbody2D&gt;();\n        audioSource = GetComponent&lt;AudioSource&gt;();\n    }\n\n    void Update()\n    {\n        HandleMovement();   // \u79fb\u52a8\u804c\u8d23\n        HandleShooting();   // \u5c04\u51fb\u804c\u8d23\n        UpdateHealthUI();   // UI \u66f4\u65b0\u804c\u8d23\n        CheckHealthStatus(); // \u5065\u5eb7\u72b6\u6001\u68c0\u67e5\u804c\u8d23\n    }\n\n    // \u79fb\u52a8\u76f8\u5173\u4ee3\u7801\n    void HandleMovement()\n    {\n        float horizontal = Input.GetAxis(\"Horizontal\");\n        float vertical = Input.GetAxis(\"Vertical\");\n        Vector2 movement = new Vector2(horizontal, vertical);\n        rb.velocity = movement * moveSpeed;\n    }\n\n    // \u5c04\u51fb\u76f8\u5173\u4ee3\u7801\n    void HandleShooting()\n    {\n        if (Input.GetButton(\"Fire1\") &amp;&amp; Time.time &gt;= nextFireTime)\n        {\n            Shoot();\n            nextFireTime = Time.time + fireRate;\n        }\n    }\n\n    void Shoot()\n    {\n        Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);\n        audioSource.PlayOneShot(shootSound);\n    }\n\n    // \u5065\u5eb7\u7cfb\u7edf\u76f8\u5173\u4ee3\u7801\n    public void TakeDamage(float damage)\n    {\n        currentHealth -= damage;\n        audioSource.PlayOneShot(hurtSound);\n        UpdateHealthUI();\n\n        if (currentHealth &lt;= 0)\n        {\n            Die();\n        }\n    }\n\n    void Die()\n    {\n        // \u6b7b\u4ea1\u903b\u8f91\n        gameObject.SetActive(false);\n    }\n\n    // UI \u66f4\u65b0\u76f8\u5173\u4ee3\u7801\n    void UpdateHealthUI()\n    {\n        if (healthBar != null)\n            healthBar.value = currentHealth / maxHealth;\n        if (healthText != null)\n            healthText.text = $\"{currentHealth:F0}/{maxHealth:F0}\";\n    }\n\n    void CheckHealthStatus()\n    {\n        // \u5065\u5eb7\u72b6\u6001\u68c0\u67e5\u903b\u8f91\n    }\n}\n</code></pre> <p>\u8fd9\u4e2a\u7c7b\u8fdd\u53cd\u4e86 SRP\uff0c\u56e0\u4e3a\u5b83\u627f\u62c5\u4e86\u591a\u4e2a\u804c\u8d23\uff1a</p> <ul> <li>\u79fb\u52a8\u63a7\u5236</li> <li>\u5c04\u51fb\u7cfb\u7edf</li> <li>\u5065\u5eb7\u7ba1\u7406</li> <li>\u97f3\u6548\u64ad\u653e</li> <li>UI \u66f4\u65b0</li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u9075\u5faa-SRP-\u7684\u91cd\u6784\u65b9\u6848","title":"\u9075\u5faa SRP \u7684\u91cd\u6784\u65b9\u6848","text":"<p>\u8ba9\u6211\u4eec\u5c06\u4e0a\u8ff0\u4ee3\u7801\u91cd\u6784\u4e3a\u9075\u5faa SRP \u7684\u7248\u672c\uff1a</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#1-\u5065\u5eb7\u7cfb\u7edf\u7ec4\u4ef6","title":"1. \u5065\u5eb7\u7cfb\u7edf\u7ec4\u4ef6","text":"<pre><code>// \u2705 \u9075\u5faa SRP\uff1a\u53ea\u8d1f\u8d23\u5065\u5eb7\u7ba1\u7406\nusing Sirenix.OdinInspector;\nusing UnityEngine;\nusing UnityEngine.Events;\n\npublic class HealthComponent : MonoBehaviour\n{\n    [Title(\"\u5065\u5eb7\u914d\u7f6e\")]\n    [SerializeField, Range(1, 1000)] private float maxHealth = 100f;\n\n    [ShowInInspector, ReadOnly, ProgressBar(0, \"maxHealth\", ColorGetter = \"GetHealthColor\")]\n    private float currentHealth;\n\n    [Title(\"\u4e8b\u4ef6\")]\n    public UnityEvent&lt;float&gt; OnHealthChanged;\n    public UnityEvent&lt;float&gt; OnDamageTaken;\n    public UnityEvent OnDeath;\n\n    public float CurrentHealth =&gt; currentHealth;\n    public float MaxHealth =&gt; maxHealth;\n    public bool IsAlive =&gt; currentHealth &gt; 0;\n    public float HealthPercentage =&gt; currentHealth / maxHealth;\n\n    void Start()\n    {\n        currentHealth = maxHealth;\n    }\n\n    [Button(\"\u9020\u6210\u4f24\u5bb3\"), DisableInEditorMode]\n    public void TakeDamage(float damage)\n    {\n        if (!IsAlive) return;\n\n        currentHealth = Mathf.Max(0, currentHealth - damage);\n\n        OnHealthChanged?.Invoke(currentHealth);\n        OnDamageTaken?.Invoke(damage);\n\n        if (!IsAlive)\n        {\n            OnDeath?.Invoke();\n        }\n    }\n\n    [Button(\"\u6062\u590d\u8840\u91cf\"), DisableInEditorMode]\n    public void Heal(float amount)\n    {\n        if (!IsAlive) return;\n\n        currentHealth = Mathf.Min(maxHealth, currentHealth + amount);\n        OnHealthChanged?.Invoke(currentHealth);\n    }\n\n    // Odin Inspector \u989c\u8272\u83b7\u53d6\u5668\n    private Color GetHealthColor()\n    {\n        float percentage = HealthPercentage;\n        if (percentage &gt; 0.6f) return Color.green;\n        if (percentage &gt; 0.3f) return Color.yellow;\n        return Color.red;\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#2-\u79fb\u52a8\u63a7\u5236\u7ec4\u4ef6","title":"2. \u79fb\u52a8\u63a7\u5236\u7ec4\u4ef6","text":"<pre><code>// \u2705 \u9075\u5faa SRP\uff1a\u53ea\u8d1f\u8d23\u79fb\u52a8\u63a7\u5236\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\npublic class MovementComponent : MonoBehaviour\n{\n    [Title(\"\u79fb\u52a8\u914d\u7f6e\")]\n    [SerializeField, Range(1, 20)] private float moveSpeed = 5f;\n\n    [ShowInInspector, ReadOnly]\n    private Vector2 currentVelocity;\n\n    private Rigidbody2D rb;\n\n    void Start()\n    {\n        rb = GetComponent&lt;Rigidbody2D&gt;();\n    }\n\n    void Update()\n    {\n        HandleMovementInput();\n    }\n\n    void HandleMovementInput()\n    {\n        float horizontal = Input.GetAxis(\"Horizontal\");\n        float vertical = Input.GetAxis(\"Vertical\");\n\n        Move(new Vector2(horizontal, vertical));\n    }\n\n    [Button(\"\u505c\u6b62\u79fb\u52a8\")]\n    public void Stop()\n    {\n        Move(Vector2.zero);\n    }\n\n    public void Move(Vector2 direction)\n    {\n        currentVelocity = direction.normalized * moveSpeed;\n        rb.velocity = currentVelocity;\n    }\n\n    public void SetSpeed(float newSpeed)\n    {\n        moveSpeed = Mathf.Max(0, newSpeed);\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#3-\u6b66\u5668\u7cfb\u7edf\u7ec4\u4ef6","title":"3. \u6b66\u5668\u7cfb\u7edf\u7ec4\u4ef6","text":"<pre><code>// \u2705 \u9075\u5faa SRP\uff1a\u53ea\u8d1f\u8d23\u6b66\u5668\u5c04\u51fb\nusing Sirenix.OdinInspector;\nusing UnityEngine;\nusing UnityEngine.Events;\n\npublic class WeaponComponent : MonoBehaviour\n{\n    [Title(\"\u6b66\u5668\u914d\u7f6e\")]\n    [SerializeField] private GameObject bulletPrefab;\n    [SerializeField] private Transform firePoint;\n    [SerializeField, Range(0.1f, 5f)] private float fireRate = 0.5f;\n\n    [ShowInInspector, ReadOnly]\n    private float nextFireTime;\n\n    [Title(\"\u4e8b\u4ef6\")]\n    public UnityEvent OnWeaponFired;\n\n    public bool CanFire =&gt; Time.time &gt;= nextFireTime;\n\n    void Update()\n    {\n        if (Input.GetButton(\"Fire1\") &amp;&amp; CanFire)\n        {\n            Fire();\n        }\n    }\n\n    [Button(\"\u5f00\u706b\"), DisableInEditorMode]\n    public void Fire()\n    {\n        if (!CanFire) return;\n\n        Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);\n        nextFireTime = Time.time + fireRate;\n\n        OnWeaponFired?.Invoke();\n    }\n\n    public void SetFireRate(float newFireRate)\n    {\n        fireRate = Mathf.Max(0.1f, newFireRate);\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#4-\u91cd\u6784\u540e\u7684\u73a9\u5bb6\u63a7\u5236\u5668","title":"4. \u91cd\u6784\u540e\u7684\u73a9\u5bb6\u63a7\u5236\u5668","text":"<pre><code>// \u2705 \u9075\u5faa SRP\uff1a\u53ea\u8d1f\u8d23\u7ec4\u4ef6\u534f\u8c03\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\npublic class PlayerController : MonoBehaviour\n{\n    [Title(\"\u7ec4\u4ef6\u5f15\u7528\")]\n    [SerializeField, Required] private HealthComponent healthComponent;\n    [SerializeField, Required] private MovementComponent movementComponent;\n    [SerializeField, Required] private WeaponComponent weaponComponent;\n    [SerializeField, Required] private AudioSource audioSource;\n\n    [Title(\"\u97f3\u6548\u914d\u7f6e\")]\n    [SerializeField] private AudioClip shootSound;\n    [SerializeField] private AudioClip hurtSound;\n\n    void Start()\n    {\n        SetupEventListeners();\n    }\n\n    void SetupEventListeners()\n    {\n        // \u76d1\u542c\u5065\u5eb7\u53d8\u5316\u4e8b\u4ef6\n        healthComponent.OnDamageTaken.AddListener(OnPlayerHurt);\n        healthComponent.OnDeath.AddListener(OnPlayerDeath);\n\n        // \u76d1\u542c\u6b66\u5668\u5c04\u51fb\u4e8b\u4ef6\n        weaponComponent.OnWeaponFired.AddListener(OnWeaponFired);\n    }\n\n    void OnPlayerHurt(float damage)\n    {\n        if (hurtSound != null)\n            audioSource.PlayOneShot(hurtSound);\n    }\n\n    void OnPlayerDeath()\n    {\n        // \u5904\u7406\u73a9\u5bb6\u6b7b\u4ea1\n        movementComponent.Stop();\n        // \u53ef\u4ee5\u89e6\u53d1\u6e38\u620f\u7ed3\u675f\u903b\u8f91\n    }\n\n    void OnWeaponFired()\n    {\n        if (shootSound != null)\n            audioSource.PlayOneShot(shootSound);\n    }\n\n    void OnDestroy()\n    {\n        // \u6e05\u7406\u4e8b\u4ef6\u76d1\u542c\n        if (healthComponent != null)\n        {\n            healthComponent.OnDamageTaken.RemoveListener(OnPlayerHurt);\n            healthComponent.OnDeath.RemoveListener(OnPlayerDeath);\n        }\n\n        if (weaponComponent != null)\n        {\n            weaponComponent.OnWeaponFired.RemoveListener(OnWeaponFired);\n        }\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#SRP-\u7684\u4f18\u52bf","title":"SRP \u7684\u4f18\u52bf","text":"<p>\u91cd\u6784\u540e\u7684\u4ee3\u7801\u5177\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a</p> <ol> <li>\u804c\u8d23\u6e05\u6670\uff1a\u6bcf\u4e2a\u7ec4\u4ef6\u53ea\u8d1f\u8d23\u4e00\u4e2a\u7279\u5b9a\u529f\u80fd</li> <li>\u6613\u4e8e\u6d4b\u8bd5\uff1a\u53ef\u4ee5\u5355\u72ec\u6d4b\u8bd5\u6bcf\u4e2a\u7ec4\u4ef6</li> <li>\u6613\u4e8e\u7ef4\u62a4\uff1a\u4fee\u6539\u67d0\u4e2a\u529f\u80fd\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u529f\u80fd</li> <li>\u53ef\u91cd\u7528\u6027\u9ad8\uff1a\u7ec4\u4ef6\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u590d\u7528</li> <li>\u6613\u4e8e\u6269\u5c55\uff1a\u6dfb\u52a0\u65b0\u529f\u80fd\u53ea\u9700\u8981\u6dfb\u52a0\u65b0\u7ec4\u4ef6</li> </ol> <p>Odin Inspector \u7684 SRP \u652f\u6301</p> <ul> <li>\u4f7f\u7528 <code>[Title]</code> \u548c <code>[BoxGroup]</code> \u6765\u7ec4\u7ec7\u5355\u4e00\u804c\u8d23\u7684\u914d\u7f6e\u9879</li> <li>\u4f7f\u7528 <code>[Required]</code> \u7279\u6027\u786e\u4fdd\u5fc5\u8981\u4f9d\u8d56\u7684\u5b8c\u6574\u6027</li> <li>\u4f7f\u7528 <code>[Button]</code> \u7279\u6027\u63d0\u4f9b\u6d4b\u8bd5\u63a5\u53e3</li> <li>\u4f7f\u7528 <code>[ShowInInspector]</code> \u548c <code>[ReadOnly]</code> \u663e\u793a\u8fd0\u884c\u65f6\u72b6\u6001</li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#O---\u5f00\u95ed\u539f\u5219-Open-Closed-Principle","title":"O - \u5f00\u95ed\u539f\u5219 (Open-Closed Principle)","text":"","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u539f\u7406\u9610\u8ff0_1","title":"\u539f\u7406\u9610\u8ff0","text":"<p>\u5f00\u95ed\u539f\u5219\u8981\u6c42\u8f6f\u4ef6\u5b9e\u4f53\uff08\u7c7b\u3001\u6a21\u5757\u3001\u51fd\u6570\u7b49\uff09\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5c01\u95ed\u3002\u8fd9\u610f\u5473\u7740\u5f53\u9700\u8981\u6dfb\u52a0\u65b0\u529f\u80fd\u65f6\uff0c\u5e94\u8be5\u901a\u8fc7\u6269\u5c55\u73b0\u6709\u4ee3\u7801\u6765\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u8fdd\u53cd-OCP-\u7684\u95ee\u9898\u793a\u4f8b","title":"\u8fdd\u53cd OCP \u7684\u95ee\u9898\u793a\u4f8b","text":"<p>\u8003\u8651\u4e00\u4e2a\u6b66\u5668\u7cfb\u7edf\uff0c\u5982\u679c\u4e0d\u9075\u5faa\u5f00\u95ed\u539f\u5219\uff1a</p> <pre><code>// \u274c \u8fdd\u53cd\u5f00\u95ed\u539f\u5219\u7684\u6b66\u5668\u7cfb\u7edf\npublic enum WeaponType\n{\n    Pistol,\n    Rifle,\n    Shotgun\n    // \u6bcf\u6b21\u6dfb\u52a0\u65b0\u6b66\u5668\u90fd\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u679a\u4e3e\n}\n\npublic class BadWeaponSystem : MonoBehaviour\n{\n    public WeaponType weaponType;\n    public GameObject bulletPrefab;\n    public Transform firePoint;\n\n    public void Fire()\n    {\n        // \u6bcf\u6b21\u6dfb\u52a0\u65b0\u6b66\u5668\u90fd\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u65b9\u6cd5\n        switch (weaponType)\n        {\n            case WeaponType.Pistol:\n                FirePistol();\n                break;\n            case WeaponType.Rifle:\n                FireRifle();\n                break;\n            case WeaponType.Shotgun:\n                FireShotgun();\n                break;\n            // \u9700\u8981\u4e0d\u65ad\u6dfb\u52a0\u65b0\u7684 case\n        }\n    }\n\n    void FirePistol()\n    {\n        // \u624b\u67aa\u5c04\u51fb\u903b\u8f91\n        Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);\n    }\n\n    void FireRifle()\n    {\n        // \u6b65\u67aa\u5c04\u51fb\u903b\u8f91\uff08\u4e09\u8fde\u53d1\uff09\n        for (int i = 0; i &lt; 3; i++)\n        {\n            Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);\n        }\n    }\n\n    void FireShotgun()\n    {\n        // \u9e33\u5f39\u67aa\u5c04\u51fb\u903b\u8f91\uff08\u6563\u5f39\uff09\n        for (int i = 0; i &lt; 5; i++)\n        {\n            float angle = (i - 2) * 15f;\n            Quaternion rotation = Quaternion.Euler(0, 0, angle) * firePoint.rotation;\n            Instantiate(bulletPrefab, firePoint.position, rotation);\n        }\n    }\n}\n</code></pre> <p>\u8fd9\u79cd\u8bbe\u8ba1\u7684\u95ee\u9898\uff1a - \u6bcf\u6b21\u6dfb\u52a0\u65b0\u6b66\u5668\u90fd\u9700\u8981\u4fee\u6539\u73b0\u6709\u4ee3\u7801 - \u4ee3\u7801\u4fee\u6539\u53ef\u80fd\u5f15\u5165\u65b0\u7684 Bug - \u96be\u4ee5\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5 - \u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u9075\u5faa-OCP-\u7684\u91cd\u6784\u65b9\u6848","title":"\u9075\u5faa OCP \u7684\u91cd\u6784\u65b9\u6848","text":"<p>\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u548c\u63a5\u53e3\u6765\u9075\u5faa\u5f00\u95ed\u539f\u5219\uff1a</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#1-\u5b9a\u4e49\u6b66\u5668\u63a5\u53e3","title":"1. \u5b9a\u4e49\u6b66\u5668\u63a5\u53e3","text":"<pre><code>// \u2705 \u6b66\u5668\u63a5\u53e3\uff1a\u5bf9\u6269\u5c55\u5f00\u653e\nusing UnityEngine;\n\npublic interface IWeapon\n{\n    string WeaponName { get; }\n    float Damage { get; }\n    float FireRate { get; }\n    void Fire(Transform firePoint, GameObject bulletPrefab);\n    bool CanFire();\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#2-\u5177\u4f53\u6b66\u5668\u5b9e\u73b0","title":"2. \u5177\u4f53\u6b66\u5668\u5b9e\u73b0","text":"<pre><code>// \u2705 \u624b\u67aa\u5b9e\u73b0\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\n[System.Serializable]\npublic class PistolWeapon : IWeapon\n{\n    [Title(\"\u624b\u67aa\u914d\u7f6e\")]\n    [SerializeField] private string weaponName = \"\u624b\u67aa\";\n    [SerializeField, Range(10, 50)] private float damage = 25f;\n    [SerializeField, Range(0.1f, 2f)] private float fireRate = 0.5f;\n\n    private float lastFireTime;\n\n    public string WeaponName =&gt; weaponName;\n    public float Damage =&gt; damage;\n    public float FireRate =&gt; fireRate;\n\n    public bool CanFire()\n    {\n        return Time.time &gt;= lastFireTime + fireRate;\n    }\n\n    public void Fire(Transform firePoint, GameObject bulletPrefab)\n    {\n        if (!CanFire()) return;\n\n        GameObject bullet = Object.Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);\n        if (bullet.TryGetComponent&lt;Bullet&gt;(out var bulletComponent))\n        {\n            bulletComponent.SetDamage(damage);\n        }\n\n        lastFireTime = Time.time;\n    }\n}\n\n// \u2705 \u6b65\u67aa\u5b9e\u73b0\n[System.Serializable]\npublic class RifleWeapon : IWeapon\n{\n    [Title(\"\u6b65\u67aa\u914d\u7f6e\")]\n    [SerializeField] private string weaponName = \"\u6b65\u67aa\";\n    [SerializeField, Range(15, 40)] private float damage = 20f;\n    [SerializeField, Range(0.05f, 0.3f)] private float fireRate = 0.1f;\n    [SerializeField, Range(1, 5)] private int burstCount = 3;\n\n    private float lastFireTime;\n\n    public string WeaponName =&gt; weaponName;\n    public float Damage =&gt; damage;\n    public float FireRate =&gt; fireRate;\n\n    public bool CanFire()\n    {\n        return Time.time &gt;= lastFireTime + fireRate;\n    }\n\n    public void Fire(Transform firePoint, GameObject bulletPrefab)\n    {\n        if (!CanFire()) return;\n\n        // \u4e09\u8fde\u53d1\u5c04\u51fb\n        for (int i = 0; i &lt; burstCount; i++)\n        {\n            GameObject bullet = Object.Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);\n            if (bullet.TryGetComponent&lt;Bullet&gt;(out var bulletComponent))\n            {\n                bulletComponent.SetDamage(damage);\n            }\n        }\n\n        lastFireTime = Time.time;\n    }\n}\n\n// \u2705 \u9e33\u5f39\u67aa\u5b9e\u73b0\n[System.Serializable]\npublic class ShotgunWeapon : IWeapon\n{\n    [Title(\"\u9e33\u5f39\u67aa\u914d\u7f6e\")]\n    [SerializeField] private string weaponName = \"\u9e33\u5f39\u67aa\";\n    [SerializeField, Range(5, 15)] private float damage = 8f;\n    [SerializeField, Range(0.5f, 3f)] private float fireRate = 1.2f;\n    [SerializeField, Range(3, 8)] private int pelletCount = 5;\n    [SerializeField, Range(5, 30)] private float spreadAngle = 15f;\n\n    private float lastFireTime;\n\n    public string WeaponName =&gt; weaponName;\n    public float Damage =&gt; damage;\n    public float FireRate =&gt; fireRate;\n\n    public bool CanFire()\n    {\n        return Time.time &gt;= lastFireTime + fireRate;\n    }\n\n    public void Fire(Transform firePoint, GameObject bulletPrefab)\n    {\n        if (!CanFire()) return;\n\n        // \u6563\u5f39\u5c04\u51fb\n        for (int i = 0; i &lt; pelletCount; i++)\n        {\n            float angle = (i - (pelletCount - 1) / 2f) * spreadAngle;\n            Quaternion rotation = Quaternion.Euler(0, 0, angle) * firePoint.rotation;\n\n            GameObject bullet = Object.Instantiate(bulletPrefab, firePoint.position, rotation);\n            if (bullet.TryGetComponent&lt;Bullet&gt;(out var bulletComponent))\n            {\n                bulletComponent.SetDamage(damage);\n            }\n        }\n\n        lastFireTime = Time.time;\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#3-\u6b66\u5668\u7cfb\u7edf\u63a7\u5236\u5668","title":"3. \u6b66\u5668\u7cfb\u7edf\u63a7\u5236\u5668","text":"<pre><code>// \u2705 \u9075\u5faa\u5f00\u95ed\u539f\u5219\u7684\u6b66\u5668\u7cfb\u7edf\nusing Sirenix.OdinInspector;\nusing UnityEngine;\nusing UnityEngine.Events;\n\npublic class WeaponSystem : MonoBehaviour\n{\n    [Title(\"\u6b66\u5668\u914d\u7f6e\")]\n    [SerializeReference, Sirenix.OdinInspector.LabelText(\"\u5f53\u524d\u6b66\u5668\")]\n    private IWeapon currentWeapon;\n\n    [SerializeField, Required] private Transform firePoint;\n    [SerializeField, Required] private GameObject bulletPrefab;\n\n    [Title(\"\u9884\u8bbe\u6b66\u5668\")]\n    [SerializeField] private PistolWeapon pistol = new PistolWeapon();\n    [SerializeField] private RifleWeapon rifle = new RifleWeapon();\n    [SerializeField] private ShotgunWeapon shotgun = new ShotgunWeapon();\n\n    [Title(\"\u4e8b\u4ef6\")]\n    public UnityEvent&lt;string&gt; OnWeaponChanged;\n    public UnityEvent OnWeaponFired;\n\n    [ShowInInspector, ReadOnly]\n    public string CurrentWeaponName =&gt; currentWeapon?.WeaponName ?? \"\u65e0\";\n\n    void Start()\n    {\n        // \u9ed8\u8ba4\u6b66\u5668\n        EquipWeapon(pistol);\n    }\n\n    void Update()\n    {\n        HandleInput();\n    }\n\n    void HandleInput()\n    {\n        // \u5c04\u51fb\n        if (Input.GetButton(\"Fire1\"))\n        {\n            Fire();\n        }\n\n        // \u5207\u6362\u6b66\u5668\n        if (Input.GetKeyDown(KeyCode.Alpha1)) EquipWeapon(pistol);\n        if (Input.GetKeyDown(KeyCode.Alpha2)) EquipWeapon(rifle);\n        if (Input.GetKeyDown(KeyCode.Alpha3)) EquipWeapon(shotgun);\n    }\n\n    [Button(\"\u5f00\u706b\"), DisableInEditorMode]\n    public void Fire()\n    {\n        if (currentWeapon != null &amp;&amp; currentWeapon.CanFire())\n        {\n            currentWeapon.Fire(firePoint, bulletPrefab);\n            OnWeaponFired?.Invoke();\n        }\n    }\n\n    [Button(\"\u88c5\u5907\u624b\u67aa\")]\n    public void EquipPistol() =&gt; EquipWeapon(pistol);\n\n    [Button(\"\u88c5\u5907\u6b65\u67aa\")]\n    public void EquipRifle() =&gt; EquipWeapon(rifle);\n\n    [Button(\"\u88c5\u5907\u9e33\u5f39\u67aa\")]\n    public void EquipShotgun() =&gt; EquipWeapon(shotgun);\n\n    public void EquipWeapon(IWeapon weapon)\n    {\n        currentWeapon = weapon;\n        OnWeaponChanged?.Invoke(weapon.WeaponName);\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u6dfb\u52a0\u65b0\u6b66\u5668\u5bf9\u6269\u5c55\u5f00\u653e","title":"\u6dfb\u52a0\u65b0\u6b66\u5668\uff1a\u5bf9\u6269\u5c55\u5f00\u653e","text":"<p>\u73b0\u5728\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u6fc0\u5149\u67aa\uff0c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\uff1a</p> <pre><code>// \u2705 \u65b0\u6b66\u5668\uff1a\u6fc0\u5149\u67aa\uff08\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\uff09\n[System.Serializable]\npublic class LaserWeapon : IWeapon\n{\n    [Title(\"\u6fc0\u5149\u67aa\u914d\u7f6e\")]\n    [SerializeField] private string weaponName = \"\u6fc0\u5149\u67aa\";\n    [SerializeField, Range(30, 100)] private float damage = 50f;\n    [SerializeField, Range(0.3f, 1.5f)] private float fireRate = 0.8f;\n    [SerializeField, Range(5, 20)] private float laserDuration = 2f;\n\n    private float lastFireTime;\n\n    public string WeaponName =&gt; weaponName;\n    public float Damage =&gt; damage;\n    public float FireRate =&gt; fireRate;\n\n    public bool CanFire()\n    {\n        return Time.time &gt;= lastFireTime + fireRate;\n    }\n\n    public void Fire(Transform firePoint, GameObject bulletPrefab)\n    {\n        if (!CanFire()) return;\n\n        // \u521b\u5efa\u6fc0\u5149\u675f\u6548\u679c\n        GameObject laser = Object.Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);\n        if (laser.TryGetComponent&lt;LaserBeam&gt;(out var laserComponent))\n        {\n            laserComponent.SetDamage(damage);\n            laserComponent.SetDuration(laserDuration);\n        }\n\n        lastFireTime = Time.time;\n    }\n}\n</code></pre> <p>\u53ea\u9700\u8981\u5728 <code>WeaponSystem</code> \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5\uff1a</p> <pre><code>[SerializeField] private LaserWeapon laser = new LaserWeapon();\n\n[Button(\"\u88c5\u5907\u6fc0\u5149\u67aa\")]\npublic void EquipLaser() =&gt; EquipWeapon(laser);\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#OCP-\u7684\u4f18\u52bf","title":"OCP \u7684\u4f18\u52bf","text":"<ol> <li>\u6269\u5c55\u6027\uff1a\u6dfb\u52a0\u65b0\u529f\u80fd\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801</li> <li>\u6570\u636e\u7a33\u5b9a\u6027\uff1a\u73b0\u6709\u529f\u80fd\u4e0d\u4f1a\u88ab\u65b0\u529f\u80fd\u5f71\u54cd</li> <li>\u6d4b\u8bd5\u53cb\u597d\uff1a\u6bcf\u4e2a\u6b66\u5668\u53ef\u4ee5\u5355\u72ec\u6d4b\u8bd5</li> <li>\u4ee3\u7801\u590d\u7528\uff1a\u6b66\u5668\u5b9e\u73b0\u53ef\u4ee5\u5728\u5176\u4ed6\u7cfb\u7edf\u4e2d\u590d\u7528</li> </ol> <p>Odin Inspector \u7684 OCP \u652f\u6301</p> <ul> <li>\u4f7f\u7528 <code>[SerializeReference]</code> \u5b9e\u73b0\u63a5\u53e3\u5e8f\u5217\u5316</li> <li>\u4f7f\u7528 <code>[Button]</code> \u63d0\u4f9b\u8fd0\u884c\u65f6\u5207\u6362\u529f\u80fd</li> <li>\u4f7f\u7528 <code>[Title]</code> \u548c <code>[BoxGroup]</code> \u7ec4\u7ec7\u4e0d\u540c\u7684\u6b66\u5668\u914d\u7f6e</li> <li>\u4f7f\u7528 <code>[ShowInInspector]</code> \u663e\u793a\u5f53\u524d\u72b6\u6001</li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#L---\u91cc\u6c0f\u66ff\u6362\u539f\u5219-Liskov-Substitution-Principle","title":"L - \u91cc\u6c0f\u66ff\u6362\u539f\u5219 (Liskov Substitution Principle)","text":"","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u539f\u7406\u9610\u8ff0_2","title":"\u539f\u7406\u9610\u8ff0","text":"<p>\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u8981\u6c42\uff1a\u5b50\u7c7b\u5bf9\u8c61\u5fc5\u987b\u80fd\u591f\u66ff\u6362\u5176\u57fa\u7c7b\u5bf9\u8c61\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u3002\u8fd9\u610f\u5473\u7740\u5b50\u7c7b\u5e94\u8be5\u589e\u5f3a\u800c\u4e0d\u662f\u5220\u5f31\u57fa\u7c7b\u7684\u529f\u80fd\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u8fdd\u53cd-LSP-\u7684\u95ee\u9898\u793a\u4f8b","title":"\u8fdd\u53cd LSP \u7684\u95ee\u9898\u793a\u4f8b","text":"<p>\u8003\u8651\u4e00\u4e2a\u98de\u884c\u7269\u4f53\u7684\u7ee7\u627f\u4f53\u7cfb\uff1a</p> <pre><code>// \u274c \u8fdd\u53cd\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u7684\u8bbe\u8ba1\npublic abstract class FlyingObject : MonoBehaviour\n{\n    public float speed = 10f;\n\n    public virtual void Fly()\n    {\n        transform.Translate(Vector3.forward * speed * Time.deltaTime);\n    }\n\n    public virtual void Land()\n    {\n        // \u9ed8\u8ba4\u7740\u9646\u884c\u4e3a\n        speed = 0;\n    }\n}\n\npublic class Airplane : FlyingObject\n{\n    public override void Fly()\n    {\n        // \u98de\u673a\u6b63\u5e38\u98de\u884c\n        transform.Translate(Vector3.forward * speed * Time.deltaTime);\n    }\n\n    public override void Land()\n    {\n        // \u98de\u673a\u53ef\u4ee5\u7740\u9646\n        speed = 0;\n        Debug.Log(\"\u98de\u673a\u5df2\u7740\u9646\");\n    }\n}\n\n// \u95ee\u9898\uff1a\u4f01\u9e45\u4e0d\u80fd\u98de\u884c\uff0c\u8fdd\u53cd\u4e86 LSP\npublic class Penguin : FlyingObject\n{\n    public override void Fly()\n    {\n        // \u4f01\u9e45\u4e0d\u80fd\u98de\uff01\n        throw new System.NotSupportedException(\"\u4f01\u9e45\u4e0d\u80fd\u98de\u884c\uff01\");\n    }\n\n    public override void Land()\n    {\n        // \u4f01\u9e45\u672c\u6765\u5c31\u5728\u5730\u4e0a\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u610f\u4e49\n        Debug.Log(\"\u4f01\u9e45\u672c\u6765\u5c31\u5728\u5730\u4e0a...\");\n    }\n}\n\n// \u4f7f\u7528\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\npublic class FlightController : MonoBehaviour\n{\n    public FlyingObject[] flyingObjects;\n\n    void Start()\n    {\n        foreach (var obj in flyingObjects)\n        {\n            obj.Fly(); // \u5982\u679c\u6570\u7ec4\u4e2d\u6709\u4f01\u9e45\uff0c\u8fd9\u91cc\u4f1a\u629b\u51fa\u5f02\u5e38\uff01\n        }\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u9075\u5faa-LSP-\u7684\u91cd\u6784\u65b9\u6848","title":"\u9075\u5faa LSP \u7684\u91cd\u6784\u65b9\u6848","text":"<p>\u91cd\u65b0\u8bbe\u8ba1\u7c7b\u5c42\u6b21\u7ed3\u6784\uff0c\u4f7f\u5176\u9075\u5faa\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#1-\u91cd\u65b0\u8bbe\u8ba1\u57fa\u7c7b\u7ed3\u6784","title":"1. \u91cd\u65b0\u8bbe\u8ba1\u57fa\u7c7b\u7ed3\u6784","text":"<pre><code>// \u2705 \u9075\u5faa LSP \u7684\u8bbe\u8ba1\uff1a\u52a8\u7269\u57fa\u7c7b\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\npublic abstract class Animal : MonoBehaviour\n{\n    [Title(\"\u52a8\u7269\u57fa\u672c\u4fe1\u606f\")]\n    [SerializeField, ReadOnly] protected string animalName;\n    [SerializeField, Range(1, 50)] protected float moveSpeed = 5f;\n\n    [ShowInInspector, ReadOnly]\n    public string AnimalName =&gt; animalName;\n\n    [ShowInInspector, ReadOnly]\n    public float MoveSpeed =&gt; moveSpeed;\n\n    protected virtual void Start()\n    {\n        animalName = GetType().Name;\n    }\n\n    // \u6240\u6709\u52a8\u7269\u90fd\u53ef\u4ee5\u79fb\u52a8\n    public abstract void Move(Vector3 direction);\n\n    // \u6240\u6709\u52a8\u7269\u90fd\u53ef\u4ee5\u53d1\u51fa\u58f0\u97f3\n    public abstract void MakeSound();\n}\n\n// \u2705 \u53ef\u98de\u884c\u52a8\u7269\u63a5\u53e3\npublic interface IFlyable\n{\n    float FlySpeed { get; }\n    void Fly(Vector3 direction);\n    void Land();\n    bool IsFlying { get; }\n}\n\n// \u2705 \u53ef\u6e38\u6cf3\u52a8\u7269\u63a5\u53e3\npublic interface ISwimmable\n{\n    float SwimSpeed { get; }\n    void Swim(Vector3 direction);\n    bool IsSwimming { get; }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#2-\u5177\u4f53\u52a8\u7269\u5b9e\u73b0","title":"2. \u5177\u4f53\u52a8\u7269\u5b9e\u73b0","text":"<pre><code>// \u2705 \u4f01\u9e45\uff1a\u53ea\u5b9e\u73b0\u5b83\u80fd\u505a\u7684\u4e8b\u60c5\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\npublic class Penguin : Animal, ISwimmable\n{\n    [Title(\"\u4f01\u9e45\u7279\u6709\u5c5e\u6027\")]\n    [SerializeField, Range(1, 20)] private float swimSpeed = 8f;\n    [SerializeField] private bool isSwimming = false;\n\n    public float SwimSpeed =&gt; swimSpeed;\n    public bool IsSwimming =&gt; isSwimming;\n\n    public override void Move(Vector3 direction)\n    {\n        // \u4f01\u9e45\u5728\u9646\u5730\u4e0a\u8d70\u8def\n        transform.Translate(direction.normalized * moveSpeed * Time.deltaTime);\n        Debug.Log($\"{animalName} \u5728\u9646\u5730\u4e0a\u884c\u8d70\");\n    }\n\n    public void Swim(Vector3 direction)\n    {\n        isSwimming = true;\n        transform.Translate(direction.normalized * swimSpeed * Time.deltaTime);\n        Debug.Log($\"{animalName} \u5728\u6c34\u4e2d\u6e38\u6cf3\");\n    }\n\n    public override void MakeSound()\n    {\n        Debug.Log(\"\u4f01\u9e45\u53eb\uff1a\u5656\u5656\u5656\uff01\");\n    }\n\n    [Button(\"\u5f00\u59cb/\u505c\u6b62\u6e38\u6cf3\")]\n    public void ToggleSwimming()\n    {\n        isSwimming = !isSwimming;\n    }\n}\n\n// \u2705 \u9e70\uff1a\u5b9e\u73b0\u98de\u884c\u80fd\u529b\npublic class Eagle : Animal, IFlyable\n{\n    [Title(\"\u9e70\u7279\u6709\u5c5e\u6027\")]\n    [SerializeField, Range(5, 30)] private float flySpeed = 15f;\n    [SerializeField] private bool isFlying = false;\n\n    public float FlySpeed =&gt; flySpeed;\n    public bool IsFlying =&gt; isFlying;\n\n    public override void Move(Vector3 direction)\n    {\n        if (isFlying)\n        {\n            Fly(direction);\n        }\n        else\n        {\n            // \u5728\u5730\u9762\u884c\u8d70\n            transform.Translate(direction.normalized * moveSpeed * Time.deltaTime);\n            Debug.Log($\"{animalName} \u5728\u5730\u9762\u884c\u8d70\");\n        }\n    }\n\n    public void Fly(Vector3 direction)\n    {\n        isFlying = true;\n        transform.Translate(direction.normalized * flySpeed * Time.deltaTime);\n        Debug.Log($\"{animalName} \u5728\u5929\u7a7a\u98de\u7fd4\");\n    }\n\n    public void Land()\n    {\n        isFlying = false;\n        Debug.Log($\"{animalName} \u5df2\u7740\u9646\");\n    }\n\n    public override void MakeSound()\n    {\n        Debug.Log(\"\u9e70\u53eb\uff1a\u561b\u561b\u561b\uff01\");\n    }\n\n    [Button(\"\u8d77\u98de/\u7740\u9646\")]\n    public void ToggleFlight()\n    {\n        if (isFlying)\n            Land();\n        else\n            isFlying = true;\n    }\n}\n\n// \u2705 \u9e2d\u5b50\uff1a\u5b9e\u73b0\u591a\u79cd\u80fd\u529b\npublic class Duck : Animal, IFlyable, ISwimmable\n{\n    [Title(\"\u9e2d\u5b50\u7279\u6709\u5c5e\u6027\")]\n    [SerializeField, Range(3, 15)] private float flySpeed = 10f;\n    [SerializeField, Range(2, 12)] private float swimSpeed = 6f;\n    [SerializeField] private bool isFlying = false;\n    [SerializeField] private bool isSwimming = false;\n\n    public float FlySpeed =&gt; flySpeed;\n    public float SwimSpeed =&gt; swimSpeed;\n    public bool IsFlying =&gt; isFlying;\n    public bool IsSwimming =&gt; isSwimming;\n\n    public override void Move(Vector3 direction)\n    {\n        if (isFlying)\n        {\n            Fly(direction);\n        }\n        else if (isSwimming)\n        {\n            Swim(direction);\n        }\n        else\n        {\n            // \u5728\u9646\u5730\u884c\u8d70\n            transform.Translate(direction.normalized * moveSpeed * Time.deltaTime);\n            Debug.Log($\"{animalName} \u5728\u9646\u5730\u884c\u8d70\");\n        }\n    }\n\n    public void Fly(Vector3 direction)\n    {\n        isFlying = true;\n        isSwimming = false;\n        transform.Translate(direction.normalized * flySpeed * Time.deltaTime);\n        Debug.Log($\"{animalName} \u5728\u5929\u7a7a\u98de\u7fd4\");\n    }\n\n    public void Land()\n    {\n        isFlying = false;\n        Debug.Log($\"{animalName} \u5df2\u7740\u9646\");\n    }\n\n    public void Swim(Vector3 direction)\n    {\n        isSwimming = true;\n        isFlying = false;\n        transform.Translate(direction.normalized * swimSpeed * Time.deltaTime);\n        Debug.Log($\"{animalName} \u5728\u6c34\u4e2d\u6e38\u6cf3\");\n    }\n\n    public override void MakeSound()\n    {\n        Debug.Log(\"\u9e2d\u5b50\u53eb\uff1a\u5609\u5609\u5609\uff01\");\n    }\n\n    [Button(\"\u8d77\u98de/\u7740\u9646\")]\n    public void ToggleFlight()\n    {\n        if (isFlying)\n            Land();\n        else\n        {\n            isFlying = true;\n            isSwimming = false;\n        }\n    }\n\n    [Button(\"\u5f00\u59cb/\u505c\u6b62\u6e38\u6cf3\")]\n    public void ToggleSwimming()\n    {\n        isSwimming = !isSwimming;\n        if (isSwimming)\n            isFlying = false;\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#3-\u9075\u5faa-LSP-\u7684\u63a7\u5236\u5668","title":"3. \u9075\u5faa LSP \u7684\u63a7\u5236\u5668","text":"<pre><code>// \u2705 \u9075\u5faa LSP \u7684\u63a7\u5236\u5668\nusing Sirenix.OdinInspector;\nusing UnityEngine;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class AnimalController : MonoBehaviour\n{\n    [Title(\"\u52a8\u7269\u96c6\u5408\")]\n    [SerializeField] private Animal[] allAnimals;\n\n    [ShowInInspector, ReadOnly]\n    private List&lt;IFlyable&gt; flyableAnimals = new List&lt;IFlyable&gt;();\n\n    [ShowInInspector, ReadOnly]\n    private List&lt;ISwimmable&gt; swimmableAnimals = new List&lt;ISwimmable&gt;();\n\n    void Start()\n    {\n        CategorizeAnimals();\n    }\n\n    void CategorizeAnimals()\n    {\n        flyableAnimals.Clear();\n        swimmableAnimals.Clear();\n\n        foreach (var animal in allAnimals)\n        {\n            if (animal is IFlyable flyable)\n                flyableAnimals.Add(flyable);\n\n            if (animal is ISwimmable swimmable)\n                swimmableAnimals.Add(swimmable);\n        }\n    }\n\n    [Button(\"\u6240\u6709\u52a8\u7269\u79fb\u52a8\")]\n    public void MoveAllAnimals()\n    {\n        foreach (var animal in allAnimals)\n        {\n            // \u6240\u6709\u52a8\u7269\u90fd\u80fd\u79fb\u52a8\uff0c\u7b26\u5408 LSP\n            animal.Move(Vector3.forward);\n        }\n    }\n\n    [Button(\"\u6240\u6709\u52a8\u7269\u53d1\u58f0\")]\n    public void MakeAllAnimalsSound()\n    {\n        foreach (var animal in allAnimals)\n        {\n            // \u6240\u6709\u52a8\u7269\u90fd\u80fd\u53d1\u58f0\uff0c\u7b26\u5408 LSP\n            animal.MakeSound();\n        }\n    }\n\n    [Button(\"\u6240\u6709\u4f1a\u98de\u7684\u52a8\u7269\u98de\u884c\")]\n    public void MakeAllFlyableAnimalsFly()\n    {\n        foreach (var flyable in flyableAnimals)\n        {\n            flyable.Fly(Vector3.up);\n        }\n    }\n\n    [Button(\"\u6240\u6709\u4f1a\u6e38\u6cf3\u7684\u52a8\u7269\u6e38\u6cf3\")]\n    public void MakeAllSwimmableAnimalsSwim()\n    {\n        foreach (var swimmable in swimmableAnimals)\n        {\n            swimmable.Swim(Vector3.forward);\n        }\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#LSP-\u7684\u5173\u952e\u539f\u5219","title":"LSP \u7684\u5173\u952e\u539f\u5219","text":"<ol> <li>\u5b50\u7c7b\u5fc5\u987b\u80fd\u66ff\u6362\u57fa\u7c7b\uff1a\u5728\u4efb\u4f55\u4f7f\u7528\u57fa\u7c7b\u7684\u5730\u65b9\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b50\u7c7b</li> <li>\u4e0d\u80fd\u5f31\u5316\u57fa\u7c7b\u7684\u529f\u80fd\uff1a\u5b50\u7c7b\u4e0d\u80fd\u629b\u51fa\u57fa\u7c7b\u4e0d\u4f1a\u629b\u51fa\u7684\u5f02\u5e38</li> <li>\u4fdd\u6301\u884c\u4e3a\u4e00\u81f4\u6027\uff1a\u5b50\u7c7b\u7684\u884c\u4e3a\u5e94\u8be5\u4e0e\u57fa\u7c7b\u7684\u671f\u671b\u4e00\u81f4</li> <li>\u5b50\u7c7b\u53ef\u4ee5\u589e\u5f3a\u529f\u80fd\uff1a\u4f46\u4e0d\u80fd\u5220\u5f31\u539f\u6709\u529f\u80fd</li> </ol> <p>Odin Inspector \u7684 LSP \u652f\u6301</p> <ul> <li>\u4f7f\u7528 <code>[ShowInInspector]</code> \u663e\u793a\u7c7b\u578b\u4fe1\u606f\u548c\u72b6\u6001</li> <li>\u4f7f\u7528 <code>[Button]</code> \u63d0\u4f9b\u4e0d\u540c\u884c\u4e3a\u7684\u6d4b\u8bd5\u63a5\u53e3</li> <li>\u4f7f\u7528 <code>[ReadOnly]</code> \u9632\u6b62\u610f\u5916\u4fee\u6539\u5173\u952e\u5c5e\u6027</li> <li>\u4f7f\u7528 <code>[Title]</code> \u6e05\u6670\u533a\u5206\u4e0d\u540c\u7c7b\u578b\u7684\u529f\u80fd</li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#I---\u63a5\u53e3\u9694\u79bb\u539f\u5219-Interface-Segregation-Principle","title":"I - \u63a5\u53e3\u9694\u79bb\u539f\u5219 (Interface Segregation Principle)","text":"","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u539f\u7406\u9610\u8ff0_3","title":"\u539f\u7406\u9610\u8ff0","text":"<p>\u63a5\u53e3\u9694\u79bb\u539f\u5219\u8981\u6c42\uff1a\u4e0d\u5e94\u8be5\u5f3a\u8feb\u5ba2\u6237\u7aef\u4f9d\u8d56\u4e8e\u5b83\u4eec\u4e0d\u4f7f\u7528\u7684\u63a5\u53e3\u3002\u63a5\u53e3\u5e94\u8be5\u7ec6\u7c92\u5ea6\u4e14\u4e13\u95e8\u9488\u5bf9\u7279\u5b9a\u7684\u5ba2\u6237\u7aef\u9700\u6c42\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u8fdd\u53cd-ISP-\u7684\u95ee\u9898\u793a\u4f8b","title":"\u8fdd\u53cd ISP \u7684\u95ee\u9898\u793a\u4f8b","text":"<p>\u8003\u8651\u4e00\u4e2a\u81c3\u80d6\u7684\u6e38\u620f\u5bf9\u8c61\u63a5\u53e3\uff1a</p> <pre><code>// \u274c \u8fdd\u53cd\u63a5\u53e3\u9694\u79bb\u539f\u5219\u7684\u81c3\u80d6\u63a5\u53e3\npublic interface IBloatedGameObject\n{\n    // \u79fb\u52a8\u76f8\u5173\n    void Move(Vector3 direction);\n    void Stop();\n    float GetSpeed();\n\n    // \u6218\u6597\u76f8\u5173\n    void Attack(GameObject target);\n    void TakeDamage(float damage);\n    float GetHealth();\n\n    // \u9053\u5177\u76f8\u5173\n    void UseItem(int itemId);\n    void PickupItem(GameObject item);\n    void DropItem(int itemId);\n\n    // NPC \u5bf9\u8bdd\u76f8\u5173\n    void StartDialogue();\n    void EndDialogue();\n    string GetDialogueText();\n\n    // \u5546\u5e97\u76f8\u5173\n    void OpenShop();\n    void BuyItem(int itemId);\n    void SellItem(int itemId);\n\n    // \u4efb\u52a1\u76f8\u5173\n    void AcceptQuest(int questId);\n    void CompleteQuest(int questId);\n    void GetQuestProgress(int questId);\n}\n\n// \u95ee\u9898\uff1a\u6b66\u5668\u7269\u54c1\u4e0d\u9700\u8981\u5bf9\u8bdd\u548c\u5546\u5e97\u529f\u80fd\npublic class Weapon : MonoBehaviour, IBloatedGameObject\n{\n    public void Move(Vector3 direction) { /* \u6b63\u5e38\u5b9e\u73b0 */ }\n    public void Stop() { /* \u6b63\u5e38\u5b9e\u73b0 */ }\n    public float GetSpeed() { return 0; }\n\n    public void Attack(GameObject target) { /* \u6b63\u5e38\u5b9e\u73b0 */ }\n    public void TakeDamage(float damage) { /* \u6b63\u5e38\u5b9e\u73b0 */ }\n    public float GetHealth() { return 100; }\n\n    // \u4e0d\u9700\u8981\u7684\u65b9\u6cd5\uff0c\u4f46\u88ab\u8feb\u5b9e\u73b0\n    public void UseItem(int itemId) { throw new System.NotImplementedException(); }\n    public void PickupItem(GameObject item) { throw new System.NotImplementedException(); }\n    public void DropItem(int itemId) { throw new System.NotImplementedException(); }\n\n    public void StartDialogue() { throw new System.NotImplementedException(); }\n    public void EndDialogue() { throw new System.NotImplementedException(); }\n    public string GetDialogueText() { throw new System.NotImplementedException(); }\n\n    public void OpenShop() { throw new System.NotImplementedException(); }\n    public void BuyItem(int itemId) { throw new System.NotImplementedException(); }\n    public void SellItem(int itemId) { throw new System.NotImplementedException(); }\n\n    public void AcceptQuest(int questId) { throw new System.NotImplementedException(); }\n    public void CompleteQuest(int questId) { throw new System.NotImplementedException(); }\n    public void GetQuestProgress(int questId) { throw new System.NotImplementedException(); }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u9075\u5faa-ISP-\u7684\u91cd\u6784\u65b9\u6848","title":"\u9075\u5faa ISP \u7684\u91cd\u6784\u65b9\u6848","text":"<p>\u5c06\u81c3\u80d6\u63a5\u53e3\u62c6\u5206\u4e3a\u591a\u4e2a\u7ec6\u7c92\u5ea6\u7684\u63a5\u53e3\uff1a</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#1-\u7ec6\u7c92\u5ea6\u63a5\u53e3\u5b9a\u4e49","title":"1. \u7ec6\u7c92\u5ea6\u63a5\u53e3\u5b9a\u4e49","text":"<pre><code>// \u2705 \u79fb\u52a8\u80fd\u529b\u63a5\u53e3\npublic interface IMoveable\n{\n    void Move(Vector3 direction);\n    void Stop();\n    float Speed { get; set; }\n}\n\n// \u2705 \u6218\u6597\u80fd\u529b\u63a5\u53e3\npublic interface ICombatable\n{\n    void Attack(GameObject target);\n    void TakeDamage(float damage);\n    float Health { get; }\n    float MaxHealth { get; }\n    bool IsAlive { get; }\n}\n\n// \u2705 \u9053\u5177\u4f7f\u7528\u63a5\u53e3\npublic interface IItemUser\n{\n    void UseItem(int itemId);\n    void PickupItem(GameObject item);\n    void DropItem(int itemId);\n    int[] GetInventory();\n}\n\n// \u2705 \u5bf9\u8bdd\u80fd\u529b\u63a5\u53e3\npublic interface IDialogable\n{\n    void StartDialogue();\n    void EndDialogue();\n    string GetDialogueText();\n    bool IsInDialogue { get; }\n}\n\n// \u2705 \u5546\u5e97\u63a5\u53e3\npublic interface IShopkeeper\n{\n    void OpenShop();\n    void BuyItem(int itemId, int quantity);\n    void SellItem(int itemId, int quantity);\n    bool HasItem(int itemId);\n    int GetItemPrice(int itemId);\n}\n\n// \u2705 \u4efb\u52a1\u7cfb\u7edf\u63a5\u53e3\npublic interface IQuestGiver\n{\n    void GiveQuest(int questId);\n    bool CanGiveQuest(int questId);\n}\n\npublic interface IQuestReceiver\n{\n    void AcceptQuest(int questId);\n    void CompleteQuest(int questId);\n    float GetQuestProgress(int questId);\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#2-\u7cbe\u7b80\u7684\u5b9e\u73b0\u7c7b","title":"2. \u7cbe\u7b80\u7684\u5b9e\u73b0\u7c7b","text":"<pre><code>// \u2705 \u6b66\u5668\uff1a\u53ea\u5b9e\u73b0\u9700\u8981\u7684\u63a5\u53e3\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\npublic class Weapon : MonoBehaviour, IMoveable, ICombatable\n{\n    [Title(\"\u6b66\u5668\u5c5e\u6027\")]\n    [SerializeField, Range(1, 20)] private float speed = 5f;\n    [SerializeField, Range(10, 100)] private float health = 50f;\n    [SerializeField, Range(10, 100)] private float maxHealth = 50f;\n    [SerializeField, Range(10, 50)] private float damage = 25f;\n\n    public float Speed \n    { \n        get =&gt; speed; \n        set =&gt; speed = Mathf.Max(0, value); \n    }\n\n    public float Health =&gt; health;\n    public float MaxHealth =&gt; maxHealth;\n    public bool IsAlive =&gt; health &gt; 0;\n\n    public void Move(Vector3 direction)\n    {\n        transform.Translate(direction.normalized * speed * Time.deltaTime);\n    }\n\n    public void Stop()\n    {\n        // \u505c\u6b62\u79fb\u52a8\u903b\u8f91\n    }\n\n    public void Attack(GameObject target)\n    {\n        if (target.TryGetComponent&lt;ICombatable&gt;(out var combatable))\n        {\n            combatable.TakeDamage(damage);\n        }\n    }\n\n    public void TakeDamage(float damage)\n    {\n        health = Mathf.Max(0, health - damage);\n        if (!IsAlive)\n        {\n            Destroy(gameObject);\n        }\n    }\n}\n\n// \u2705 NPC\uff1a\u5b9e\u73b0\u591a\u4e2a\u76f8\u5173\u63a5\u53e3\npublic class NPC : MonoBehaviour, IMoveable, ICombatable, IDialogable, IShopkeeper\n{\n    [Title(\"NPC \u57fa\u672c\u5c5e\u6027\")]\n    [SerializeField, Range(1, 10)] private float speed = 3f;\n    [SerializeField, Range(50, 200)] private float health = 100f;\n    [SerializeField, Range(50, 200)] private float maxHealth = 100f;\n\n    [Title(\"\u5bf9\u8bdd\u7cfb\u7edf\")]\n    [SerializeField] private string[] dialogueLines;\n    [SerializeField] private bool isInDialogue = false;\n\n    [Title(\"\u5546\u5e97\u7cfb\u7edf\")]\n    [SerializeField] private int[] shopItems;\n    [SerializeField] private int[] itemPrices;\n\n    // IMoveable \u5b9e\u73b0\n    public float Speed \n    { \n        get =&gt; speed; \n        set =&gt; speed = Mathf.Max(0, value); \n    }\n\n    public void Move(Vector3 direction)\n    {\n        if (!isInDialogue)\n            transform.Translate(direction.normalized * speed * Time.deltaTime);\n    }\n\n    public void Stop() { }\n\n    // ICombatable \u5b9e\u73b0\n    public float Health =&gt; health;\n    public float MaxHealth =&gt; maxHealth;\n    public bool IsAlive =&gt; health &gt; 0;\n\n    public void Attack(GameObject target)\n    {\n        // NPC \u653b\u51fb\u903b\u8f91\n    }\n\n    public void TakeDamage(float damage)\n    {\n        health = Mathf.Max(0, health - damage);\n    }\n\n    // IDialogable \u5b9e\u73b0\n    public bool IsInDialogue =&gt; isInDialogue;\n\n    public void StartDialogue()\n    {\n        isInDialogue = true;\n        Stop();\n    }\n\n    public void EndDialogue()\n    {\n        isInDialogue = false;\n    }\n\n    public string GetDialogueText()\n    {\n        return dialogueLines[Random.Range(0, dialogueLines.Length)];\n    }\n\n    // IShopkeeper \u5b9e\u73b0\n    public void OpenShop()\n    {\n        Debug.Log(\"NPC \u5546\u5e97\u5f00\u542f\");\n    }\n\n    public void BuyItem(int itemId, int quantity)\n    {\n        // \u8d2d\u4e70\u903b\u8f91\n    }\n\n    public void SellItem(int itemId, int quantity)\n    {\n        // \u51fa\u552e\u903b\u8f91\n    }\n\n    public bool HasItem(int itemId)\n    {\n        return System.Array.Exists(shopItems, item =&gt; item == itemId);\n    }\n\n    public int GetItemPrice(int itemId)\n    {\n        int index = System.Array.IndexOf(shopItems, itemId);\n        return index &gt;= 0 ? itemPrices[index] : 0;\n    }\n}\n\n// \u2705 \u73a9\u5bb6\uff1a\u5b9e\u73b0\u4e0e\u73a9\u5bb6\u76f8\u5173\u7684\u63a5\u53e3\npublic class Player : MonoBehaviour, IMoveable, ICombatable, IItemUser, IQuestReceiver\n{\n    [Title(\"\u73a9\u5bb6\u5c5e\u6027\")]\n    [SerializeField] private float speed = 8f;\n    [SerializeField] private float health = 100f;\n    [SerializeField] private float maxHealth = 100f;\n\n    [Title(\"\u9053\u5177\u7cfb\u7edf\")]\n    [SerializeField] private int[] inventory = new int[10];\n\n    [Title(\"\u4efb\u52a1\u7cfb\u7edf\")]\n    [SerializeField] private int[] activeQuests = new int[5];\n\n    // \u5b9e\u73b0\u6240\u6709\u9700\u8981\u7684\u63a5\u53e3\u65b9\u6cd5...\n    public float Speed { get =&gt; speed; set =&gt; speed = value; }\n    public float Health =&gt; health;\n    public float MaxHealth =&gt; maxHealth;\n    public bool IsAlive =&gt; health &gt; 0;\n\n    public void Move(Vector3 direction)\n    {\n        transform.Translate(direction.normalized * speed * Time.deltaTime);\n    }\n\n    public void Stop() { }\n\n    public void Attack(GameObject target) \n    {\n        // \u73a9\u5bb6\u653b\u51fb\u903b\u8f91\n    }\n\n    public void TakeDamage(float damage)\n    {\n        health = Mathf.Max(0, health - damage);\n    }\n\n    public void UseItem(int itemId) { /* \u4f7f\u7528\u9053\u5177 */ }\n    public void PickupItem(GameObject item) { /* \u62fe\u53d6\u9053\u5177 */ }\n    public void DropItem(int itemId) { /* \u4e22\u5f03\u9053\u5177 */ }\n    public int[] GetInventory() =&gt; inventory;\n\n    public void AcceptQuest(int questId) { /* \u63a5\u53d7\u4efb\u52a1 */ }\n    public void CompleteQuest(int questId) { /* \u5b8c\u6210\u4efb\u52a1 */ }\n    public float GetQuestProgress(int questId) { return 0f; }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#ISP-\u7684\u4f18\u52bf","title":"ISP \u7684\u4f18\u52bf","text":"<ol> <li>\u63a5\u53e3\u7cbe\u7b80\uff1a\u6bcf\u4e2a\u63a5\u53e3\u53ea\u5305\u542b\u76f8\u5173\u7684\u65b9\u6cd5</li> <li>\u964d\u4f4e\u8026\u5408\uff1a\u7c7b\u53ea\u4f9d\u8d56\u4e8e\u5b83\u4eec\u5b9e\u9645\u4f7f\u7528\u7684\u63a5\u53e3</li> <li>\u6613\u4e8e\u7ef4\u62a4\uff1a\u4fee\u6539\u4e00\u4e2a\u63a5\u53e3\u4e0d\u4f1a\u5f71\u54cd\u4e0d\u76f8\u5173\u7684\u7c7b</li> <li>\u63d0\u9ad8\u5355\u5143\u6d4b\u8bd5\u6548\u7387\uff1a\u53ef\u4ee5\u5355\u72ec\u6a21\u62df\u6bcf\u4e2a\u7ec6\u7c92\u5ea6\u63a5\u53e3</li> </ol> <p>Odin Inspector \u7684 ISP \u652f\u6301</p> <ul> <li>\u4f7f\u7528 <code>[Title]</code> \u5c06\u4e0d\u540c\u63a5\u53e3\u7684\u529f\u80fd\u5206\u7ec4\u663e\u793a</li> <li>\u4f7f\u7528 <code>[ShowInInspector]</code> \u9002\u5ea6\u66b4\u9732\u63a5\u53e3\u72b6\u6001</li> <li>\u4f7f\u7528 <code>[Required]</code> \u786e\u4fdd\u63a5\u53e3\u4f9d\u8d56\u7684\u5b8c\u6574\u6027</li> <li>\u4f7f\u7528 <code>[Button]</code> \u4e3a\u6bcf\u4e2a\u63a5\u53e3\u63d0\u4f9b\u6d4b\u8bd5\u5165\u53e3</li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#D---\u4f9d\u8d56\u5012\u7f6e\u539f\u5219-Dependency-Inversion-Principle","title":"D - \u4f9d\u8d56\u5012\u7f6e\u539f\u5219 (Dependency Inversion Principle)","text":"","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u539f\u7406\u9610\u8ff0_4","title":"\u539f\u7406\u9610\u8ff0","text":"<p>\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\u5305\u542b\u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a 1. \u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u4f4e\u5c42\u6a21\u5757\uff0c\u4e24\u8005\u90fd\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61 2. \u62bd\u8c61\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u5b9e\u73b0\uff0c\u5b9e\u73b0\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61</p> <p>\u8fd9\u4e2a\u539f\u5219\u7684\u6838\u5fc3\u662f\u901a\u8fc7\u62bd\u8c61\uff08\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\uff09\u6765\u964d\u4f4e\u6a21\u5757\u95f4\u7684\u8026\u5408\u5ea6\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u8fdd\u53cd-DIP-\u7684\u95ee\u9898\u793a\u4f8b","title":"\u8fdd\u53cd DIP \u7684\u95ee\u9898\u793a\u4f8b","text":"<p>\u8003\u8651\u4e00\u4e2a\u6e38\u620f\u4fdd\u5b58\u7cfb\u7edf\uff1a</p> <pre><code>// \u274c \u8fdd\u53cd\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\u7684\u8bbe\u8ba1\npublic class FileDataStorage\n{\n    public void SaveData(string data, string filename)\n    {\n        System.IO.File.WriteAllText(filename, data);\n        Debug.Log(\"\u6570\u636e\u5df2\u4fdd\u5b58\u5230\u6587\u4ef6: \" + filename);\n    }\n\n    public string LoadData(string filename)\n    {\n        if (System.IO.File.Exists(filename))\n        {\n            return System.IO.File.ReadAllText(filename);\n        }\n        return string.Empty;\n    }\n}\n\n// \u95ee\u9898\uff1a\u9ad8\u5c42\u7684 GameManager \u76f4\u63a5\u4f9d\u8d56\u4e8e\u4f4e\u5c42\u7684 FileDataStorage\npublic class BadGameManager : MonoBehaviour\n{\n    private FileDataStorage fileStorage; // \u76f4\u63a5\u4f9d\u8d56\u5177\u4f53\u5b9e\u73b0\n\n    void Start()\n    {\n        fileStorage = new FileDataStorage(); // \u7d27\u8026\u5408\n    }\n\n    public void SaveGame()\n    {\n        string gameData = GetGameData();\n        fileStorage.SaveData(gameData, \"savegame.json\"); // \u76f4\u63a5\u8c03\u7528\u5177\u4f53\u5b9e\u73b0\n    }\n\n    public void LoadGame()\n    {\n        string gameData = fileStorage.LoadData(\"savegame.json\");\n        ApplyGameData(gameData);\n    }\n\n    // \u8981\u66f4\u6362\u4e3a\u4e91\u5b58\u50a8\uff0c\u5fc5\u987b\u4fee\u6539\u8fd9\u4e2a\u7c7b\n    // \u8981\u652f\u6301\u591a\u79cd\u5b58\u50a8\u65b9\u5f0f\uff0c\u9700\u8981\u5927\u91cf\u4fee\u6539\n\n    private string GetGameData() { return \"{}\"; }\n    private void ApplyGameData(string data) { }\n}\n</code></pre> <p>\u8fd9\u79cd\u8bbe\u8ba1\u7684\u95ee\u9898\uff1a - <code>GameManager</code>\uff08\u9ad8\u5c42\uff09\u76f4\u63a5\u4f9d\u8d56\u4e8e <code>FileDataStorage</code>\uff08\u4f4e\u5c42\uff09 - \u96be\u4ee5\u6269\u5c55\u4e3a\u4e91\u5b58\u50a8\u6216\u5176\u4ed6\u5b58\u50a8\u65b9\u5f0f - \u96be\u4ee5\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff08\u65e0\u6cd5\u6a21\u62df\u5b58\u50a8\uff09</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u9075\u5faa-DIP-\u7684\u91cd\u6784\u65b9\u6848","title":"\u9075\u5faa DIP \u7684\u91cd\u6784\u65b9\u6848","text":"<p>\u901a\u8fc7\u62bd\u8c61\u63a5\u53e3\u548c\u4f9d\u8d56\u6ce8\u5165\u6765\u89e3\u51b3\u95ee\u9898\uff1a</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#1-\u5b9a\u4e49\u62bd\u8c61\u63a5\u53e3","title":"1. \u5b9a\u4e49\u62bd\u8c61\u63a5\u53e3","text":"<pre><code>// \u2705 \u5b58\u50a8\u7cfb\u7edf\u62bd\u8c61\u63a5\u53e3\npublic interface IDataStorage\n{\n    void SaveData(string data, string key);\n    string LoadData(string key);\n    bool HasData(string key);\n    void DeleteData(string key);\n}\n\n// \u2705 \u4e8b\u4ef6\u7cfb\u7edf\u62bd\u8c61\u63a5\u53e3\npublic interface IEventSystem\n{\n    void Subscribe&lt;T&gt;(System.Action&lt;T&gt; handler) where T : class;\n    void Unsubscribe&lt;T&gt;(System.Action&lt;T&gt; handler) where T : class;\n    void Publish&lt;T&gt;(T eventData) where T : class;\n}\n\n// \u2705 \u65e5\u5fd7\u7cfb\u7edf\u62bd\u8c61\u63a5\u53e3\npublic interface ILogger\n{\n    void Log(string message);\n    void LogWarning(string message);\n    void LogError(string message);\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#2-\u5177\u4f53\u5b9e\u73b0\u4f4e\u5c42\u6a21\u5757","title":"2. \u5177\u4f53\u5b9e\u73b0\uff08\u4f4e\u5c42\u6a21\u5757\uff09","text":"<pre><code>// \u2705 \u6587\u4ef6\u5b58\u50a8\u5b9e\u73b0\nusing Sirenix.OdinInspector;\nusing UnityEngine;\nusing System.IO;\n\npublic class FileDataStorage : IDataStorage\n{\n    [Title(\"\u6587\u4ef6\u5b58\u50a8\u914d\u7f6e\")]\n    [SerializeField, FolderPath] private string saveDirectory = \"SaveData\";\n    [SerializeField] private string fileExtension = \".json\";\n\n    public void SaveData(string data, string key)\n    {\n        string fullPath = GetFullPath(key);\n        Directory.CreateDirectory(Path.GetDirectoryName(fullPath));\n        File.WriteAllText(fullPath, data);\n        Debug.Log($\"\u6570\u636e\u5df2\u4fdd\u5b58\u5230: {fullPath}\");\n    }\n\n    public string LoadData(string key)\n    {\n        string fullPath = GetFullPath(key);\n        if (File.Exists(fullPath))\n        {\n            return File.ReadAllText(fullPath);\n        }\n        Debug.LogWarning($\"\u6587\u4ef6\u4e0d\u5b58\u5728: {fullPath}\");\n        return string.Empty;\n    }\n\n    public bool HasData(string key)\n    {\n        return File.Exists(GetFullPath(key));\n    }\n\n    public void DeleteData(string key)\n    {\n        string fullPath = GetFullPath(key);\n        if (File.Exists(fullPath))\n        {\n            File.Delete(fullPath);\n            Debug.Log($\"\u6587\u4ef6\u5df2\u5220\u9664: {fullPath}\");\n        }\n    }\n\n    private string GetFullPath(string key)\n    {\n        return Path.Combine(Application.persistentDataPath, saveDirectory, key + fileExtension);\n    }\n}\n\n// \u2705 PlayerPrefs \u5b58\u50a8\u5b9e\u73b0\npublic class PlayerPrefsDataStorage : IDataStorage\n{\n    public void SaveData(string data, string key)\n    {\n        PlayerPrefs.SetString(key, data);\n        PlayerPrefs.Save();\n        Debug.Log($\"\u6570\u636e\u5df2\u4fdd\u5b58\u5230 PlayerPrefs: {key}\");\n    }\n\n    public string LoadData(string key)\n    {\n        return PlayerPrefs.GetString(key, string.Empty);\n    }\n\n    public bool HasData(string key)\n    {\n        return PlayerPrefs.HasKey(key);\n    }\n\n    public void DeleteData(string key)\n    {\n        PlayerPrefs.DeleteKey(key);\n        PlayerPrefs.Save();\n        Debug.Log($\"PlayerPrefs \u952e\u5df2\u5220\u9664: {key}\");\n    }\n}\n\n// \u2705 Unity \u65e5\u5fd7\u5b9e\u73b0\npublic class UnityLogger : ILogger\n{\n    public void Log(string message)\n    {\n        Debug.Log($\"[INFO] {message}\");\n    }\n\n    public void LogWarning(string message)\n    {\n        Debug.LogWarning($\"[WARNING] {message}\");\n    }\n\n    public void LogError(string message)\n    {\n        Debug.LogError($\"[ERROR] {message}\");\n    }\n}\n\n// \u2705 \u7b80\u5355\u4e8b\u4ef6\u7cfb\u7edf\u5b9e\u73b0\nusing System.Collections.Generic;\nusing System;\n\npublic class SimpleEventSystem : IEventSystem\n{\n    private Dictionary&lt;Type, List&lt;Delegate&gt;&gt; eventHandlers = new Dictionary&lt;Type, List&lt;Delegate&gt;&gt;();\n\n    public void Subscribe&lt;T&gt;(Action&lt;T&gt; handler) where T : class\n    {\n        Type eventType = typeof(T);\n        if (!eventHandlers.ContainsKey(eventType))\n        {\n            eventHandlers[eventType] = new List&lt;Delegate&gt;();\n        }\n        eventHandlers[eventType].Add(handler);\n    }\n\n    public void Unsubscribe&lt;T&gt;(Action&lt;T&gt; handler) where T : class\n    {\n        Type eventType = typeof(T);\n        if (eventHandlers.ContainsKey(eventType))\n        {\n            eventHandlers[eventType].Remove(handler);\n        }\n    }\n\n    public void Publish&lt;T&gt;(T eventData) where T : class\n    {\n        Type eventType = typeof(T);\n        if (eventHandlers.ContainsKey(eventType))\n        {\n            foreach (var handler in eventHandlers[eventType])\n            {\n                (handler as Action&lt;T&gt;)?.Invoke(eventData);\n            }\n        }\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#3-\u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668","title":"3. \u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668","text":"<pre><code>// \u2705 \u7b80\u5355\u7684\u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668\nusing System;\nusing System.Collections.Generic;\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\npublic class ServiceContainer : MonoBehaviour\n{\n    private static ServiceContainer instance;\n    public static ServiceContainer Instance \n    { \n        get\n        {\n            if (instance == null)\n            {\n                instance = FindObjectOfType&lt;ServiceContainer&gt;();\n                if (instance == null)\n                {\n                    GameObject go = new GameObject(\"ServiceContainer\");\n                    instance = go.AddComponent&lt;ServiceContainer&gt;();\n                    DontDestroyOnLoad(go);\n                }\n            }\n            return instance;\n        }\n    }\n\n    [Title(\"\u670d\u52a1\u914d\u7f6e\")]\n    [SerializeField] private bool useFileStorage = true;\n    [SerializeField] private bool useUnityLogger = true;\n\n    private Dictionary&lt;Type, object&gt; services = new Dictionary&lt;Type, object&gt;();\n\n    void Awake()\n    {\n        if (instance == null)\n        {\n            instance = this;\n            DontDestroyOnLoad(gameObject);\n            RegisterServices();\n        }\n        else if (instance != this)\n        {\n            Destroy(gameObject);\n        }\n    }\n\n    void RegisterServices()\n    {\n        // \u6ce8\u518c\u5b58\u50a8\u670d\u52a1\n        if (useFileStorage)\n        {\n            Register&lt;IDataStorage&gt;(new FileDataStorage());\n        }\n        else\n        {\n            Register&lt;IDataStorage&gt;(new PlayerPrefsDataStorage());\n        }\n\n        // \u6ce8\u518c\u65e5\u5fd7\u670d\u52a1\n        if (useUnityLogger)\n        {\n            Register&lt;ILogger&gt;(new UnityLogger());\n        }\n\n        // \u6ce8\u518c\u4e8b\u4ef6\u7cfb\u7edf\n        Register&lt;IEventSystem&gt;(new SimpleEventSystem());\n    }\n\n    public void Register&lt;T&gt;(T service)\n    {\n        services[typeof(T)] = service;\n    }\n\n    public T Get&lt;T&gt;()\n    {\n        Type serviceType = typeof(T);\n        if (services.ContainsKey(serviceType))\n        {\n            return (T)services[serviceType];\n        }\n        throw new InvalidOperationException($\"\u670d\u52a1 {serviceType.Name} \u672a\u6ce8\u518c\");\n    }\n\n    [Button(\"\u663e\u793a\u6240\u6709\u5df2\u6ce8\u518c\u7684\u670d\u52a1\")]\n    public void ShowRegisteredServices()\n    {\n        Debug.Log(\"\u5df2\u6ce8\u518c\u7684\u670d\u52a1:\");\n        foreach (var service in services)\n        {\n            Debug.Log($\"- {service.Key.Name}: {service.Value.GetType().Name}\");\n        }\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#4-\u9075\u5faa-DIP-\u7684\u9ad8\u5c42\u6a21\u5757","title":"4. \u9075\u5faa DIP \u7684\u9ad8\u5c42\u6a21\u5757","text":"<pre><code>// \u2705 \u9075\u5faa\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\u7684 GameManager\nusing Sirenix.OdinInspector;\nusing UnityEngine;\nusing System;\n\npublic class GameManager : MonoBehaviour\n{\n    [Title(\"\u4f9d\u8d56\u670d\u52a1\")]\n    [ShowInInspector, ReadOnly] private IDataStorage dataStorage;\n    [ShowInInspector, ReadOnly] private ILogger logger;\n    [ShowInInspector, ReadOnly] private IEventSystem eventSystem;\n\n    [Title(\"\u6e38\u620f\u72b6\u6001\")]\n    [SerializeField] private int playerLevel = 1;\n    [SerializeField] private float playerHealth = 100f;\n    [SerializeField] private int playerScore = 0;\n\n    void Start()\n    {\n        // \u4f9d\u8d56\u6ce8\u5165\uff1a\u901a\u8fc7\u62bd\u8c61\u63a5\u53e3\u83b7\u53d6\u670d\u52a1\n        InjectDependencies();\n\n        // \u8bbe\u7f6e\u4e8b\u4ef6\u76d1\u542c\n        SetupEventListeners();\n\n        logger.Log(\"GameManager \u5df2\u521d\u59cb\u5316\");\n    }\n\n    void InjectDependencies()\n    {\n        try\n        {\n            dataStorage = ServiceContainer.Instance.Get&lt;IDataStorage&gt;();\n            logger = ServiceContainer.Instance.Get&lt;ILogger&gt;();\n            eventSystem = ServiceContainer.Instance.Get&lt;IEventSystem&gt;();\n        }\n        catch (Exception ex)\n        {\n            Debug.LogError($\"\u4f9d\u8d56\u6ce8\u5165\u5931\u8d25: {ex.Message}\");\n        }\n    }\n\n    void SetupEventListeners()\n    {\n        eventSystem.Subscribe&lt;PlayerLevelUpEvent&gt;(OnPlayerLevelUp);\n        eventSystem.Subscribe&lt;PlayerHealthChangedEvent&gt;(OnPlayerHealthChanged);\n    }\n\n    [Button(\"\u4fdd\u5b58\u6e38\u620f\")]\n    public void SaveGame()\n    {\n        try\n        {\n            var gameData = new GameData\n            {\n                level = playerLevel,\n                health = playerHealth,\n                score = playerScore,\n                saveTime = DateTime.Now.ToString()\n            };\n\n            string jsonData = JsonUtility.ToJson(gameData, true);\n            dataStorage.SaveData(jsonData, \"savegame\");\n\n            logger.Log(\"\u6e38\u620f\u5df2\u4fdd\u5b58\");\n        }\n        catch (Exception ex)\n        {\n            logger.LogError($\"\u4fdd\u5b58\u6e38\u620f\u5931\u8d25: {ex.Message}\");\n        }\n    }\n\n    [Button(\"\u52a0\u8f7d\u6e38\u620f\")]\n    public void LoadGame()\n    {\n        try\n        {\n            if (dataStorage.HasData(\"savegame\"))\n            {\n                string jsonData = dataStorage.LoadData(\"savegame\");\n                var gameData = JsonUtility.FromJson&lt;GameData&gt;(jsonData);\n\n                playerLevel = gameData.level;\n                playerHealth = gameData.health;\n                playerScore = gameData.score;\n\n                logger.Log($\"\u6e38\u620f\u5df2\u52a0\u8f7d\uff08\u4fdd\u5b58\u65f6\u95f4: {gameData.saveTime}\uff09\");\n            }\n            else\n            {\n                logger.LogWarning(\"\u672a\u627e\u5230\u5b58\u6863\u6587\u4ef6\");\n            }\n        }\n        catch (Exception ex)\n        {\n            logger.LogError($\"\u52a0\u8f7d\u6e38\u620f\u5931\u8d25: {ex.Message}\");\n        }\n    }\n\n    [Button(\"\u73a9\u5bb6\u5347\u7ea7\")]\n    public void LevelUp()\n    {\n        playerLevel++;\n        eventSystem.Publish(new PlayerLevelUpEvent { NewLevel = playerLevel });\n    }\n\n    void OnPlayerLevelUp(PlayerLevelUpEvent eventData)\n    {\n        logger.Log($\"\u73a9\u5bb6\u5347\u7ea7\u5230 {eventData.NewLevel} \u7ea7\uff01\");\n    }\n\n    void OnPlayerHealthChanged(PlayerHealthChangedEvent eventData)\n    {\n        logger.Log($\"\u73a9\u5bb6\u8840\u91cf\u53d8\u4e3a {eventData.NewHealth}\");\n    }\n\n    void OnDestroy()\n    {\n        if (eventSystem != null)\n        {\n            eventSystem.Unsubscribe&lt;PlayerLevelUpEvent&gt;(OnPlayerLevelUp);\n            eventSystem.Unsubscribe&lt;PlayerHealthChangedEvent&gt;(OnPlayerHealthChanged);\n        }\n    }\n}\n\n// \u2705 \u4e8b\u4ef6\u6570\u636e\u7c7b\n[System.Serializable]\npublic class GameData\n{\n    public int level;\n    public float health;\n    public int score;\n    public string saveTime;\n}\n\npublic class PlayerLevelUpEvent\n{\n    public int NewLevel { get; set; }\n}\n\npublic class PlayerHealthChangedEvent\n{\n    public float NewHealth { get; set; }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#DIP-\u7684\u4f18\u52bf","title":"DIP \u7684\u4f18\u52bf","text":"<ol> <li>\u964d\u4f4e\u8026\u5408\u5ea6\uff1a\u9ad8\u5c42\u6a21\u5757\u4e0d\u76f4\u63a5\u4f9d\u8d56\u4f4e\u5c42\u5b9e\u73b0</li> <li>\u63d0\u9ad8\u7075\u6d3b\u6027\uff1a\u53ef\u4ee5\u8f7b\u677e\u66ff\u6362\u4e0d\u540c\u7684\u5b9e\u73b0</li> <li>\u4fbf\u4e8e\u6d4b\u8bd5\uff1a\u53ef\u4ee5\u8f7b\u677e\u6a21\u62df\u4f9d\u8d56\u7684\u670d\u52a1</li> <li>\u6613\u4e8e\u6254\u5c55\uff1a\u6dfb\u52a0\u65b0\u7684\u5b9e\u73b0\u65e0\u9700\u4fee\u6539\u9ad8\u5c42\u4ee3\u7801</li> </ol> <p>Odin Inspector \u7684 DIP \u652f\u6301</p> <ul> <li>\u4f7f\u7528 <code>[ShowInInspector]</code> \u663e\u793a\u6ce8\u5165\u7684\u4f9d\u8d56\u670d\u52a1<ul> <li>\u4f7f\u7528 <code>[Button]</code> \u63d0\u4f9b\u670d\u52a1\u6d4b\u8bd5\u529f\u80fd</li> <li>\u4f7f\u7528 <code>[ReadOnly]</code> \u9632\u6b62\u610f\u5916\u4fee\u6539\u6ce8\u5165\u7684\u670d\u52a1</li> <li>\u4f7f\u7528 <code>[Title]</code> \u7ec4\u7ec7\u4e0d\u540c\u7c7b\u578b\u7684\u4f9d\u8d56\u5173\u7cfb</li> </ul> </li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#Unity-\u5b9e\u6218\u5e94\u7528\u6848\u4f8b\u89d2\u8272\u7cfb\u7edf\u91cd\u6784","title":"Unity \u5b9e\u6218\u5e94\u7528\u6848\u4f8b\uff1a\u89d2\u8272\u7cfb\u7edf\u91cd\u6784","text":"<p>\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5b8c\u6574\u7684\u6848\u4f8b\u6765\u770b\u770b\u5982\u4f55\u5c06 SOLID \u539f\u5219\u5e94\u7528\u5230 Unity \u9879\u76ee\u4e2d\u3002\u6211\u4eec\u5c06\u91cd\u6784\u4e00\u4e2a\u4f20\u7edf\u7684\u89d2\u8272\u7cfb\u7edf\uff0c\u4f7f\u5176\u9075\u5faa\u6240\u6709 SOLID \u539f\u5219\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u539f\u59cb\u8bbe\u8ba1\u8fdd\u53cd-SOLID-\u539f\u5219","title":"\u539f\u59cb\u8bbe\u8ba1\uff1a\u8fdd\u53cd SOLID \u539f\u5219","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u201c\u795e\u7c7b\u201d\u8bbe\u8ba1\uff1a</p> <pre><code>// \u274c \u8fdd\u53cd\u591a\u4e2a SOLID \u539f\u5219\u7684\u89d2\u8272\u7cfb\u7edf\npublic class BadCharacter : MonoBehaviour\n{\n    // \u8fdd\u53cd SRP\uff1a\u4e00\u4e2a\u7c7b\u627f\u62c5\u592a\u591a\u804c\u8d23\n    public float health = 100f;\n    public float maxHealth = 100f;\n    public float moveSpeed = 5f;\n    public float attackDamage = 25f;\n    public float attackRange = 2f;\n    public string[] inventory = new string[10];\n    public int level = 1;\n    public int experience = 0;\n\n    // \u5404\u79cd\u7cfb\u7edf\u6df7\u5728\u4e00\u8d77\n    void Update()\n    {\n        HandleMovement();\n        HandleCombat();\n        HandleLevelUp();\n        UpdateUI();\n        HandleInventory();\n    }\n\n    // \u8fdd\u53cd OCP\uff1a\u6dfb\u52a0\u65b0\u89d2\u8272\u7c7b\u578b\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u65b9\u6cd5\n    void HandleMovement()\n    {\n        // \u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u79fb\u52a8\n        if (gameObject.name.Contains(\"Warrior\"))\n        {\n            // \u6218\u58eb\u79fb\u52a8\u903b\u8f91\n        }\n        else if (gameObject.name.Contains(\"Mage\"))\n        {\n            // \u6cd5\u5e08\u79fb\u52a8\u903b\u8f91\n        }\n        // ... \u66f4\u591a\u7c7b\u578b\n    }\n\n    // \u5176\u4ed6\u65b9\u6cd5...\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u91cd\u6784\u540e\u9075\u5faa-SOLID-\u539f\u5219\u7684\u8bbe\u8ba1","title":"\u91cd\u6784\u540e\uff1a\u9075\u5faa SOLID \u539f\u5219\u7684\u8bbe\u8ba1","text":"<p>\u8ba9\u6211\u4eec\u5c06\u8fd9\u4e2a\u7cfb\u7edf\u91cd\u6784\u4e3a\u9075\u5faa SOLID \u539f\u5219\u7684\u67b6\u6784\u3002</p>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#1-\u5e94\u7528-SRP\u804c\u8d23\u5206\u79bb","title":"1. \u5e94\u7528 SRP\uff1a\u804c\u8d23\u5206\u79bb","text":"<pre><code>// \u2705 \u5065\u5eb7\u7cfb\u7edf\uff08\u5355\u4e00\u804c\u8d23\uff09\nusing Sirenix.OdinInspector;\nusing UnityEngine;\nusing UnityEngine.Events;\n\npublic class HealthSystem : MonoBehaviour\n{\n    [Title(\"\u5065\u5eb7\u914d\u7f6e\")]\n    [SerializeField, Range(1, 1000)] private float maxHealth = 100f;\n    [SerializeField] private bool regenerateHealth = true;\n    [SerializeField, ShowIf(\"regenerateHealth\")] private float regenRate = 5f;\n\n    [ShowInInspector, ReadOnly, ProgressBar(0, \"maxHealth\", ColorGetter = \"GetHealthColor\")]\n    private float currentHealth;\n\n    [Title(\"\u4e8b\u4ef6\")]\n    public UnityEvent&lt;float&gt; OnHealthChanged;\n    public UnityEvent&lt;float, float&gt; OnDamageTaken; // damage, remaining health\n    public UnityEvent OnDeath;\n    public UnityEvent OnFullyHealed;\n\n    public float CurrentHealth =&gt; currentHealth;\n    public float MaxHealth =&gt; maxHealth;\n    public float HealthPercentage =&gt; currentHealth / maxHealth;\n    public bool IsAlive =&gt; currentHealth &gt; 0;\n    public bool IsAtFullHealth =&gt; Mathf.Approximately(currentHealth, maxHealth);\n\n    void Start()\n    {\n        currentHealth = maxHealth;\n    }\n\n    void Update()\n    {\n        if (regenerateHealth &amp;&amp; !IsAtFullHealth &amp;&amp; IsAlive)\n        {\n            Heal(regenRate * Time.deltaTime);\n        }\n    }\n\n    public void TakeDamage(float damage)\n    {\n        if (!IsAlive || damage &lt;= 0) return;\n\n        float previousHealth = currentHealth;\n        currentHealth = Mathf.Max(0, currentHealth - damage);\n\n        OnHealthChanged?.Invoke(currentHealth);\n        OnDamageTaken?.Invoke(damage, currentHealth);\n\n        if (!IsAlive)\n        {\n            OnDeath?.Invoke();\n        }\n    }\n\n    public void Heal(float amount)\n    {\n        if (!IsAlive || amount &lt;= 0 || IsAtFullHealth) return;\n\n        currentHealth = Mathf.Min(maxHealth, currentHealth + amount);\n        OnHealthChanged?.Invoke(currentHealth);\n\n        if (IsAtFullHealth)\n        {\n            OnFullyHealed?.Invoke();\n        }\n    }\n\n    public void SetMaxHealth(float newMaxHealth)\n    {\n        float ratio = HealthPercentage;\n        maxHealth = Mathf.Max(1, newMaxHealth);\n        currentHealth = maxHealth * ratio;\n        OnHealthChanged?.Invoke(currentHealth);\n    }\n\n    private Color GetHealthColor()\n    {\n        float percentage = HealthPercentage;\n        if (percentage &gt; 0.6f) return Color.green;\n        if (percentage &gt; 0.3f) return Color.yellow;\n        return Color.red;\n    }\n}\n\n// \u2705 \u7ecf\u9a8c\u7cfb\u7edf\uff08\u5355\u4e00\u804c\u8d23\uff09\npublic class ExperienceSystem : MonoBehaviour\n{\n    [Title(\"\u7ecf\u9a8c\u914d\u7f6e\")]\n    [SerializeField] private int currentLevel = 1;\n    [SerializeField] private int currentExperience = 0;\n    [SerializeField] private int baseExperienceToNext = 100;\n    [SerializeField, Range(1.1f, 2f)] private float experienceMultiplier = 1.5f;\n\n    [ShowInInspector, ReadOnly]\n    private int experienceToNextLevel;\n\n    [Title(\"\u4e8b\u4ef6\")]\n    public UnityEvent&lt;int&gt; OnLevelUp;\n    public UnityEvent&lt;int&gt; OnExperienceGained;\n\n    public int Level =&gt; currentLevel;\n    public int Experience =&gt; currentExperience;\n    public int ExperienceToNext =&gt; experienceToNextLevel;\n    public float ExperienceProgress =&gt; (float)currentExperience / experienceToNextLevel;\n\n    void Start()\n    {\n        CalculateExperienceToNext();\n    }\n\n    public void GainExperience(int amount)\n    {\n        if (amount &lt;= 0) return;\n\n        currentExperience += amount;\n        OnExperienceGained?.Invoke(amount);\n\n        while (currentExperience &gt;= experienceToNextLevel)\n        {\n            LevelUp();\n        }\n    }\n\n    void LevelUp()\n    {\n        currentExperience -= experienceToNextLevel;\n        currentLevel++;\n        CalculateExperienceToNext();\n        OnLevelUp?.Invoke(currentLevel);\n    }\n\n    void CalculateExperienceToNext()\n    {\n        experienceToNextLevel = Mathf.RoundToInt(baseExperienceToNext * Mathf.Pow(experienceMultiplier, currentLevel - 1));\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#2-\u5e94\u7528-OCP\u89d2\u8272\u7c7b\u578b\u7684\u53ef\u6269\u5c55\u8bbe\u8ba1","title":"2. \u5e94\u7528 OCP\uff1a\u89d2\u8272\u7c7b\u578b\u7684\u53ef\u6269\u5c55\u8bbe\u8ba1","text":"<pre><code>// \u2705 \u89d2\u8272\u80fd\u529b\u63a5\u53e3\uff08\u5bf9\u6269\u5c55\u5f00\u653e\uff09\npublic interface IMoveable\n{\n    float MoveSpeed { get; set; }\n    void Move(Vector3 direction);\n    void Stop();\n}\n\npublic interface IAttacker\n{\n    float AttackDamage { get; }\n    float AttackRange { get; }\n    void Attack(GameObject target);\n    bool CanAttack(GameObject target);\n}\n\npublic interface ICaster\n{\n    float ManaPoints { get; }\n    float MaxMana { get; }\n    void CastSpell(string spellName, Vector3 target);\n    bool HasEnoughMana(float cost);\n}\n\n// \u2705 \u57fa\u7840\u89d2\u8272\u7c7b\u5b9a\u4e49\u62bd\u8c61\u884c\u4e3a\nusing Sirenix.OdinInspector;\nusing UnityEngine;\n\npublic abstract class Character : MonoBehaviour\n{\n    [Title(\"\u89d2\u8272\u57fa\u7840\u4fe1\u606f\")]\n    [SerializeField] protected string characterName;\n    [SerializeField] protected int characterLevel = 1;\n\n    [Title(\"\u7ec4\u4ef6\u5f15\u7528\")]\n    [SerializeField, Required] protected HealthSystem healthSystem;\n    [SerializeField, Required] protected ExperienceSystem experienceSystem;\n\n    [ShowInInspector, ReadOnly]\n    public string CharacterName =&gt; characterName;\n\n    [ShowInInspector, ReadOnly]\n    public int Level =&gt; experienceSystem ? experienceSystem.Level : characterLevel;\n\n    protected virtual void Start()\n    {\n        InitializeCharacter();\n        SetupEventListeners();\n    }\n\n    protected virtual void InitializeCharacter()\n    {\n        if (string.IsNullOrEmpty(characterName))\n            characterName = GetType().Name;\n    }\n\n    protected virtual void SetupEventListeners()\n    {\n        if (healthSystem != null)\n        {\n            healthSystem.OnDeath.AddListener(OnCharacterDeath);\n        }\n\n        if (experienceSystem != null)\n        {\n            experienceSystem.OnLevelUp.AddListener(OnCharacterLevelUp);\n        }\n    }\n\n    protected virtual void OnCharacterDeath()\n    {\n        Debug.Log($\"{characterName} \u5df2\u6b7b\u4ea1\");\n    }\n\n    protected virtual void OnCharacterLevelUp(int newLevel)\n    {\n        Debug.Log($\"{characterName} \u5347\u7ea7\u5230 {newLevel} \u7ea7\uff01\");\n    }\n\n    protected virtual void OnDestroy()\n    {\n        if (healthSystem != null)\n        {\n            healthSystem.OnDeath.RemoveListener(OnCharacterDeath);\n        }\n\n        if (experienceSystem != null)\n        {\n            experienceSystem.OnLevelUp.RemoveListener(OnCharacterLevelUp);\n        }\n    }\n}\n\n// \u2705 \u6218\u58eb\u7c7b\uff1a\u6269\u5c55\u800c\u975e\u4fee\u6539\npublic class Warrior : Character, IMoveable, IAttacker\n{\n    [Title(\"\u6218\u58eb\u5c5e\u6027\")]\n    [SerializeField, Range(1, 20)] private float moveSpeed = 5f;\n    [SerializeField, Range(10, 100)] private float attackDamage = 30f;\n    [SerializeField, Range(1, 5)] private float attackRange = 2.5f;\n    [SerializeField, Range(0.5f, 3f)] private float attackCooldown = 1.2f;\n\n    private float lastAttackTime;\n\n    public float MoveSpeed \n    { \n        get =&gt; moveSpeed; \n        set =&gt; moveSpeed = Mathf.Max(0, value); \n    }\n\n    public float AttackDamage =&gt; attackDamage;\n    public float AttackRange =&gt; attackRange;\n\n    public void Move(Vector3 direction)\n    {\n        if (healthSystem &amp;&amp; healthSystem.IsAlive)\n        {\n            transform.Translate(direction.normalized * moveSpeed * Time.deltaTime);\n        }\n    }\n\n    public void Stop()\n    {\n        // \u505c\u6b62\u79fb\u52a8\u903b\u8f91\n    }\n\n    public bool CanAttack(GameObject target)\n    {\n        if (!healthSystem || !healthSystem.IsAlive) return false;\n        if (Time.time &lt; lastAttackTime + attackCooldown) return false;\n\n        float distance = Vector3.Distance(transform.position, target.transform.position);\n        return distance &lt;= attackRange;\n    }\n\n    public void Attack(GameObject target)\n    {\n        if (!CanAttack(target)) return;\n\n        var targetHealth = target.GetComponent&lt;HealthSystem&gt;();\n        if (targetHealth != null)\n        {\n            targetHealth.TakeDamage(attackDamage);\n            lastAttackTime = Time.time;\n            Debug.Log($\"{characterName} \u653b\u51fb\u4e86 {target.name}\uff0c\u9020\u6210 {attackDamage} \u70b9\u4f24\u5bb3\");\n        }\n    }\n}\n\n// \u2705 \u6cd5\u5e08\u7c7b\uff1a\u65b0\u7684\u89d2\u8272\u7c7b\u578b\uff0c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\npublic class Mage : Character, IMoveable, ICaster\n{\n    [Title(\"\u6cd5\u5e08\u5c5e\u6027\")]\n    [SerializeField, Range(1, 15)] private float moveSpeed = 3f;\n    [SerializeField, Range(20, 200)] private float maxMana = 100f;\n    [SerializeField, Range(1, 10)] private float manaRegenRate = 5f;\n\n    [ShowInInspector, ReadOnly, ProgressBar(0, \"maxMana\", r: 0.2f, g: 0.5f, b: 1f)]\n    private float currentMana;\n\n    public float MoveSpeed \n    { \n        get =&gt; moveSpeed; \n        set =&gt; moveSpeed = Mathf.Max(0, value); \n    }\n\n    public float ManaPoints =&gt; currentMana;\n    public float MaxMana =&gt; maxMana;\n\n    protected override void Start()\n    {\n        base.Start();\n        currentMana = maxMana;\n    }\n\n    void Update()\n    {\n        RegenerateMana();\n    }\n\n    public void Move(Vector3 direction)\n    {\n        if (healthSystem &amp;&amp; healthSystem.IsAlive)\n        {\n            transform.Translate(direction.normalized * moveSpeed * Time.deltaTime);\n        }\n    }\n\n    public bool HasEnoughMana(float cost)\n    {\n        return currentMana &gt;= cost;\n    }\n\n    public void CastSpell(string spellName, Vector3 target)\n    {\n        float manaCost = GetSpellCost(spellName);\n        if (!HasEnoughMana(manaCost)) return;\n\n        currentMana -= manaCost;\n\n        switch (spellName.ToLower())\n        {\n            case \"fireball\":\n                CastFireball(target);\n                break;\n            case \"heal\":\n                CastHeal();\n                break;\n            default:\n                Debug.LogWarning($\"\u672a\u77e5\u6cd5\u672f: {spellName}\");\n                break;\n        }\n    }\n\n    void RegenerateMana()\n    {\n        if (currentMana &lt; maxMana)\n        {\n            currentMana = Mathf.Min(maxMana, currentMana + manaRegenRate * Time.deltaTime);\n        }\n    }\n\n    float GetSpellCost(string spellName)\n    {\n        return spellName.ToLower() switch\n        {\n            \"fireball\" =&gt; 20f,\n            \"heal\" =&gt; 30f,\n            _ =&gt; 10f\n        };\n    }\n\n    void CastFireball(Vector3 target)\n    {\n        Debug.Log($\"{characterName} \u91ca\u653e\u4e86\u706b\u7403\u672f\uff01\");\n        // \u706b\u7403\u6cd5\u672f\u903b\u8f91\n    }\n\n    void CastHeal()\n    {\n        if (healthSystem != null)\n        {\n            healthSystem.Heal(50f);\n            Debug.Log($\"{characterName} \u4f7f\u7528\u4e86\u6cbb\u7597\u6cd5\u672f\uff01\");\n        }\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#3-\u5e94\u7528-LSP-\u548c-ISP\u6b63\u786e\u7684\u7ee7\u627f\u548c\u63a5\u53e3\u8bbe\u8ba1","title":"3. \u5e94\u7528 LSP \u548c ISP\uff1a\u6b63\u786e\u7684\u7ee7\u627f\u548c\u63a5\u53e3\u8bbe\u8ba1","text":"<pre><code>// \u2705 \u9075\u5faa LSP\uff1a\u6240\u6709\u5b50\u7c7b\u90fd\u53ef\u4ee5\u66ff\u6362\u57fa\u7c7b\n// \u9075\u5faa ISP\uff1a\u63a5\u53e3\u7cbe\u7b80\u4e14\u4e0d\u5f3a\u5236\u4f9d\u8d56\n\npublic class CharacterManager : MonoBehaviour\n{\n    [Title(\"\u89d2\u8272\u7ba1\u7406\")]\n    [SerializeField] private Character[] allCharacters;\n\n    [ShowInInspector, ReadOnly]\n    private List&lt;IMoveable&gt; moveableCharacters = new List&lt;IMoveable&gt;();\n\n    [ShowInInspector, ReadOnly]\n    private List&lt;IAttacker&gt; attackerCharacters = new List&lt;IAttacker&gt;();\n\n    [ShowInInspector, ReadOnly]\n    private List&lt;ICaster&gt; casterCharacters = new List&lt;ICaster&gt;();\n\n    void Start()\n    {\n        CategorizeCharacters();\n    }\n\n    void CategorizeCharacters()\n    {\n        moveableCharacters.Clear();\n        attackerCharacters.Clear();\n        casterCharacters.Clear();\n\n        foreach (var character in allCharacters)\n        {\n            if (character is IMoveable moveable)\n                moveableCharacters.Add(moveable);\n\n            if (character is IAttacker attacker)\n                attackerCharacters.Add(attacker);\n\n            if (character is ICaster caster)\n                casterCharacters.Add(caster);\n        }\n    }\n\n    [Button(\"\u6240\u6709\u89d2\u8272\u5411\u524d\u79fb\u52a8\")]\n    public void MoveAllCharactersForward()\n    {\n        foreach (var moveable in moveableCharacters)\n        {\n            moveable.Move(Vector3.forward);\n        }\n    }\n\n    [Button(\"\u6240\u6709\u653b\u51fb\u578b\u89d2\u8272\u653b\u51fb\u76ee\u6807\")]\n    public void AllAttackersAttackTarget()\n    {\n        GameObject target = GameObject.FindWithTag(\"Enemy\");\n        if (target != null)\n        {\n            foreach (var attacker in attackerCharacters)\n            {\n                attacker.Attack(target);\n            }\n        }\n    }\n}\n</code></pre>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u603b\u7ed3","title":"\u603b\u7ed3","text":"<p>SOLID \u539f\u5219\u662f\u5efa\u8bbe\u9ad8\u8d28\u91cf Unity \u9879\u76ee\u7684\u57fa\u77f3\u3002\u901a\u8fc7\u672c\u6587\u7684\u5b66\u4e60\uff0c\u4f60\u5e94\u8be5\u638c\u63e1\u4e86\uff1a</p> <ul> <li>SOLID \u4e94\u5927\u539f\u5219\u7684\u6838\u5fc3\u6982\u5ff5\u548c\u5b9e\u7528\u65b9\u6cd5</li> <li>\u5728 Unity \u4e2d\u7684\u5177\u4f53\u5e94\u7528\uff0c\u4ece\u7b80\u5355\u7684\u7ec4\u4ef6\u5206\u79bb\u5230\u590d\u6742\u7684\u67b6\u6784\u8bbe\u8ba1</li> <li>Odin Inspector \u7684\u5f3a\u5927\u652f\u6301\uff0c\u63d0\u5347\u5f00\u53d1\u6548\u7387\u548c\u4ee3\u7801\u8d28\u91cf</li> <li>\u5b9e\u6218\u7ecf\u9a8c\u548c\u6700\u4f73\u5b9e\u8df5\uff0c\u907f\u514d\u5e38\u89c1\u9677\u9631</li> </ul>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u4e0b\u4e00\u6b65\u5b66\u4e60\u5efa\u8bae","title":"\u4e0b\u4e00\u6b65\u5b66\u4e60\u5efa\u8bae","text":"<ol> <li>\u5b9e\u8df5\u7ec3\u4e60\uff1a\u627e\u4e00\u4e2a\u5c0f\u9879\u76ee\u5c1d\u8bd5\u5e94\u7528\u6240\u5b66\u539f\u5219</li> <li>\u6df1\u5165\u5b66\u4e60\uff1a\u7814\u7a76\u8bbe\u8ba1\u6a21\u5f0f\u5982\u4f55\u4f53\u73b0 SOLID \u539f\u5219</li> <li>\u5de5\u5177\u638c\u63e1\uff1a\u5b66\u4e60\u66f4\u591a Odin Inspector \u9ad8\u7ea7\u7279\u6027</li> <li>\u56e2\u961f\u5206\u4eab\uff1a\u5c06\u6240\u5b66\u77e5\u8bc6\u5206\u4eab\u7ed9\u56e2\u961f\u6210\u5458</li> </ol>","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/24/csharp-solid-principles-tutorial/#\u53c2\u8003\u8d44\u6e90","title":"\u53c2\u8003\u8d44\u6e90","text":"<ul> <li>Unity \u5b98\u65b9\u6587\u6863</li> <li>Odin Inspector \u6587\u6863</li> <li>Unity \u5b98\u65b9 Clean Code \u7535\u5b50\u4e66\uff1aC# \u4ee3\u7801\u98ce\u683c\u6307\u5357</li> <li>Unity \u5b98\u65b9\u8bbe\u8ba1\u6a21\u5f0f\u548c SOLID \u539f\u5219\u7535\u5b50\u4e66</li> <li>Martin Fowler \u7684\u8bbe\u8ba1\u6587\u7ae0</li> </ul> <p>\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5e2e\u52a9\u4f60\u5728 Unity \u5f00\u53d1\u4e2d\u66f4\u597d\u5730\u5e94\u7528 SOLID \u539f\u5219\uff01\u5982\u679c\u4f60\u6709\u4efb\u4f55\u95ee\u9898\u6216\u5efa\u8bae\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u4ea4\u6d41\u8ba8\u8bba\u3002</p> 2025-09-242025-10-27","tags":["csharp","SOLID","\u8bbe\u8ba1\u6a21\u5f0f","\u6700\u4f73\u5b9e\u8df5"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/","title":"Odin Toolkits \u7684\u7f16\u7801\u89c4\u8303\u667a\u80fd\u4f53\u63d0\u793a\u8bcd\u53c2\u8003","text":"","tags":["csharp"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/#\u89d2\u8272\u5b9a\u4f4d","title":"\u89d2\u8272\u5b9a\u4f4d","text":"<p>\u4f60\u662f\u4e00\u4f4d\u6df1\u8015 Unity \u5f00\u53d1\u4e0e C# \u7f16\u7a0b\u7684\u8d44\u6df1\u89c4\u8303\u4e13\u5bb6\uff0c\u7cbe\u901a\u884c\u4e1a\u901a\u7528\u6807\u51c6\uff08\u5982 Microsoft C# \u547d\u540d\u89c4\u8303\u3001Unity \u5b98\u65b9\u7f16\u7801\u6307\u5357\uff09\u53ca\u5927\u578b\u9879\u76ee\u5b9e\u8df5\u7ecf\u9a8c\uff0c\u540c\u65f6\u4e5f\u662f Rider IDE \u4f7f\u7528\u8005\uff0c\u4e00\u5207\u4ee5 Rider \u4f7f\u7528\u4e3a\u524d\u63d0\u3002\u4f60\u7684\u6838\u5fc3\u804c\u8d23\u662f\uff1a\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7b26\u5408\u5de5\u7a0b\u5316\u6807\u51c6\u7684\u4ee3\u7801\u89c4\u8303\u5efa\u8bae\u3001\u8bc6\u522b\u6f5c\u5728\u7684\u89c4\u8303\u95ee\u9898\u3001\u4f18\u5316\u4ee3\u7801\u7ed3\u6784\uff0c\u5e76\u7ed3\u5408 Unity \u5f15\u64ce\u7279\u6027\uff08\u5982\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u3001\u8d44\u6e90\u7ba1\u7406\u3001\u6027\u80fd\u4f18\u5316\uff09\u7ed9\u51fa\u9488\u5bf9\u6027\u6307\u5bfc\u3002</p>","tags":["csharp"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/#\u8bed\u6c14\u98ce\u683c","title":"\u8bed\u6c14\u98ce\u683c","text":"<ul> <li>\u4e13\u4e1a\u4e25\u8c28\uff1a\u57fa\u4e8e\u660e\u786e\u7684\u89c4\u8303\u4f9d\u636e\uff08\u5982\u5f15\u7528\u5177\u4f53\u6761\u6b3e\uff09\uff0c\u907f\u514d\u6a21\u7cca\u8868\u8ff0\uff1b</li> <li>\u52a1\u5b9e\u6613\u61c2\uff1a\u7528\u5f00\u53d1\u8005\u719f\u6089\u7684\u672f\u8bed\uff08\u5982 \u201cMonoBehaviour \u751f\u547d\u5468\u671f\u201d\u201c\u534f\u7a0b\u201d\uff09\u89e3\u91ca\u89c4\u8303\uff0c\u800c\u975e\u7eaf\u7406\u8bba\uff1b</li> <li>\u5efa\u8bbe\u6027\uff1a\u6307\u51fa\u95ee\u9898\u65f6\u540c\u6b65\u63d0\u4f9b\u4fee\u6539\u65b9\u6848\uff0c\u4f8b\u5982 \u201c\u6b64\u5904\u5efa\u8bae\u4f7f\u7528 <code>PascalCase</code> \u547d\u540d\u7c7b\uff0c\u6539\u4e3a <code>PlayerController</code> \u66f4\u7b26\u5408\u89c4\u8303\u201d\uff1b</li> </ul>","tags":["csharp"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/#\u5de5\u4f5c\u6d41\u7a0b","title":"\u5de5\u4f5c\u6d41\u7a0b","text":"<ol> <li> <p>\u9700\u6c42\u63a5\u6536\uff1a\u660e\u786e\u5f00\u53d1\u8005\u7684\u8bc9\u6c42\uff08\u5982 \u201c\u68c0\u67e5\u8fd9\u6bb5\u4ee3\u7801\u7684\u89c4\u8303\u95ee\u9898\u201d\u201c\u5236\u5b9a\u56e2\u961f Unity \u4ee3\u7801\u89c4\u8303\u201d\u201c\u4f18\u5316 MonoBehaviour \u811a\u672c\u7ed3\u6784\u201d\uff09\uff1b</p> </li> <li> <p>\u573a\u666f\u5206\u6790\uff1a\u7ed3\u5408\u4e0a\u4e0b\u6587\u5224\u65ad\u4ee3\u7801\u7528\u9014\uff08\u5982\u8fd0\u884c\u65f6\u903b\u8f91 / \u7f16\u8f91\u5668\u5de5\u5177 / \u6570\u636e\u6a21\u578b\uff09\uff0c\u56e0\u573a\u666f\u8c03\u6574\u89c4\u8303\u4fa7\u91cd\uff08\u4f8b\u5982\u7f16\u8f91\u5668\u811a\u672c\u5141\u8bb8\u66f4\u591a <code>static</code> \u65b9\u6cd5\uff0c\u800c\u8fd0\u884c\u65f6\u811a\u672c\u9700\u4e25\u683c\u7ba1\u7406\u751f\u547d\u5468\u671f\uff09\uff1b</p> </li> <li> <p>\u89c4\u8303\u6821\u9a8c\uff1a\u4ece\u4ee5\u4e0b\u7ef4\u5ea6\u9010\u5c42\u68c0\u67e5\uff08\u4f18\u5148\u7ea7\u9012\u51cf\uff09\uff1a</p> </li> <li> <p>\u57fa\u7840\u89c4\u8303\uff1a\u547d\u540d\u89c4\u5219\uff08\u7c7b / \u65b9\u6cd5 / \u53d8\u91cf\u7684\u5927\u5c0f\u5199\uff09\u3001\u4ee3\u7801\u683c\u5f0f\uff08\u7f29\u8fdb\u3001\u7a7a\u884c\uff09\u3001\u6ce8\u91ca\u5b8c\u6574\u6027\uff08XML \u6ce8\u91ca\uff09\uff1b</p> </li> <li>\u9075\u5b88 SOLID \u539f\u5219</li> <li>Unity \u7279\u6027\u89c4\u8303\uff1a\u7ec4\u4ef6\u8bbe\u8ba1\uff08\u5355\u4e00\u804c\u8d23\u539f\u5219\uff09\u3001\u751f\u547d\u5468\u671f\u8c03\u7528\uff08\u5982 <code>Awake</code>/<code>Start</code> \u7684\u5206\u5de5\uff09\u3001\u8d44\u6e90\u91ca\u653e\uff08<code>OnDestroy</code> \u6e05\u7406\u3001\u907f\u514d\u7a7a\u5f15\u7528\uff09\uff1b</li> <li>\u6027\u80fd\u4e0e\u5b89\u5168\u6027\uff1a\u907f\u514d\u95ed\u5305\u5bfc\u81f4\u7684\u5185\u5b58\u6cc4\u6f0f\u3001\u5408\u7406\u4f7f\u7528 <code>[SerializeField]</code> \u800c\u975e public \u5b57\u6bb5\u3001\u51cf\u5c11 <code>Find</code> \u7cfb\u5217\u65b9\u6cd5\u6ee5\u7528\uff1b</li> <li> <p>\u53ef\u6269\u5c55\u6027\uff1a\u63a5\u53e3 / \u62bd\u8c61\u7c7b\u7684\u5408\u7406\u4f7f\u7528\u3001\u907f\u514d\u786c\u7f16\u7801\uff08\u4f7f\u7528 <code>ScriptableObject</code> \u5b58\u50a8\u914d\u7f6e\uff09\uff1b</p> </li> <li> <p>\u5efa\u8bae\u8f93\u51fa\uff1a\u6309 \u201c\u95ee\u9898\u63cf\u8ff0 + \u89c4\u8303\u4f9d\u636e + \u4fee\u6539\u793a\u4f8b\u201d \u7684\u7ed3\u6784\u5448\u73b0\uff0c\u4f8b\u5982\uff1a</p> </li> </ol> <p>\u95ee\u9898\uff1a\u79c1\u6709\u5b57\u6bb5 <code>playerSpeed</code> \u4f7f\u7528\u4e86 <code>camelCase</code> \u4f46\u672a\u52a0\u524d\u7f00\u4f9d\u636e\uff1aUnity \u56e2\u961f\u89c4\u8303\u4e2d\uff0c\u79c1\u6709\u5b57\u6bb5\u5efa\u8bae\u6dfb\u52a0 <code>_</code> \u524d\u7f00\uff08\u5982 <code>_playerSpeed</code>\uff09\u4ee5\u533a\u5206\u5c40\u90e8\u53d8\u91cf\u4fee\u6539\u793a\u4f8b\uff1a<code>private float _playerSpeed = 5f;</code></p> <ol> <li>\u8865\u5145\u8bf4\u660e\uff1a\u5bf9\u6709\u4e89\u8bae\u7684\u89c4\u8303\uff08\u5982 \u201c\u662f\u5426\u5fc5\u987b\u4f7f\u7528 <code>var</code>\u201d\uff09\uff0c\u8bf4\u660e\u4e0d\u540c\u65b9\u6848\u7684\u9002\u7528\u573a\u666f\uff08\u5c0f\u578b\u9879\u76ee\u53ef\u7075\u6d3b\u4f7f\u7528 <code>var</code> \u7b80\u5316\u4ee3\u7801\uff0c\u5927\u578b\u9879\u76ee\u5efa\u8bae\u663e\u5f0f\u58f0\u660e\u7c7b\u578b\u4ee5\u63d0\u5347\u53ef\u8bfb\u6027\uff09\u3002</li> </ol>","tags":["csharp"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/#\u6838\u5fc3\u89c4\u5219\u4e0e\u89c4\u8303","title":"\u6838\u5fc3\u89c4\u5219\u4e0e\u89c4\u8303","text":"","tags":["csharp"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/#1-C-\u57fa\u7840\u89c4\u8303","title":"1. C# \u57fa\u7840\u89c4\u8303","text":"<ul> <li> <p>\u547d\u540d\uff1a</p> </li> <li> <p>\u7c7b / \u7ed3\u6784\u4f53 / \u679a\u4e3e\uff1a<code>PascalCase</code>\uff08\u5982 <code>PlayerData</code> <code>EnemyState</code>\uff09\uff1b</p> </li> <li>\u65b9\u6cd5 / \u5c5e\u6027\uff1a<code>PascalCase</code>\uff08\u5982 <code>MoveToTarget()</code> <code>IsGrounded</code>\uff09\uff1b</li> <li>\u5c40\u90e8\u53d8\u91cf / \u53c2\u6570\uff1a<code>camelCase</code>\uff08\u5982 <code>float damageValue</code>\uff09\uff1b</li> <li>\u79c1\u6709\u5b57\u6bb5\uff1a<code>_camelCase</code>\uff08\u5982 <code>private int _health</code>\uff09\uff0c\u5e38\u91cf\uff1a<code>UPPER_SNAKE_CASE</code>\uff08\u5982 <code>const float MAX_SPEED = 10f</code>\uff09\uff1b</li> <li>\u5e8f\u5217\u5316\u547d\u540d\uff1a\u5e8f\u5217\u5316\u7684\u79c1\u6709\u5b57\u6bb5\uff0c\u91c7\u7528 <code>camelCase</code>\uff08\u5982 <code>float damageValue</code>\uff09</li> <li>\u683c\u5f0f\uff1a\u7f29\u8fdb\u4f7f\u7528 4 \u4e2a\u7a7a\u683c\uff08\u800c\u975e Tab\uff09\uff0c\u8bed\u53e5\u5757 braces \u53e6\u8d77\u4e00\u884c\uff08\u907f\u514d\u884c\u5185 braces\uff09\uff1b</li> <li>\u6ce8\u91ca\uff1a\u7c7b / \u516c\u5171\u65b9\u6cd5\u5fc5\u987b\u6dfb\u52a0 XML \u6ce8\u91ca\uff0c\u590d\u6742\u903b\u8f91\uff08\u5982\u7b97\u6cd5\u3001\u72b6\u6001\u5207\u6362\uff09\u9700\u6dfb\u52a0\u884c\u5185\u6ce8\u91ca\u3002</li> </ul>","tags":["csharp"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/#2-Unity-\u7279\u6709\u89c4\u8303","title":"2. Unity \u7279\u6709\u89c4\u8303","text":"<ul> <li>\u7ec4\u4ef6\u8bbe\u8ba1\uff1a\u4e00\u4e2a <code>MonoBehaviour</code> \u53ea\u8d1f\u8d23\u5355\u4e00\u529f\u80fd\uff08\u5982 <code>PlayerMovement</code> \u4ec5\u5904\u7406\u79fb\u52a8\uff0c<code>PlayerHealth</code> \u5904\u7406\u751f\u547d\u503c\uff09\uff1b</li> <li>\u751f\u547d\u5468\u671f\u7ba1\u7406\uff1a</li> <li><code>Awake</code>\uff1a\u521d\u59cb\u5316\u53d8\u91cf\uff08\u4e0d\u4f9d\u8d56\u5176\u4ed6\u5bf9\u8c61\uff09\uff0c<code>Start</code>\uff1a\u5904\u7406\u4f9d\u8d56\u521d\u59cb\u5316\uff08\u5982\u83b7\u53d6\u5176\u4ed6\u7ec4\u4ef6\u5f15\u7528\uff09\uff1b</li> <li>\u907f\u514d\u5728 <code>Update</code> \u4e2d\u6267\u884c heavy \u64cd\u4f5c\uff0c\u9ad8\u9891\u903b\u8f91\u4f7f\u7528 <code>FixedUpdate</code>\uff1b</li> <li>\u5b57\u6bb5\u5e8f\u5217\u5316\uff1a\u975e\u516c\u5f00\u5b57\u6bb5\u9700\u5e8f\u5217\u5316\u65f6\u4f7f\u7528 <code>[SerializeField]</code>\uff0c\u800c\u975e\u5c06\u5b57\u6bb5\u8bbe\u4e3a public\uff1b</li> <li>\u8d44\u6e90\u4e0e\u5f15\u7528\uff1a\u901a\u8fc7 <code>[RequireComponent]</code> \u58f0\u660e\u4f9d\u8d56\u7ec4\u4ef6\uff0c\u4f7f\u7528 <code>GetComponent</code> \u7f13\u5b58\u5f15\u7528\uff08\u800c\u975e\u6bcf\u5e27\u83b7\u53d6\uff09\u3002</li> </ul>","tags":["csharp"]},{"location":"blog/2025/09/27/odin-toolkits-agent-prompt-reference/#3-XML-\u6ce8\u91ca\u6dfb\u52a0\u89c4\u8303","title":"3. XML \u6ce8\u91ca\u6dfb\u52a0\u89c4\u8303","text":"<ul> <li>\u9ed8\u8ba4\u53ea\u6dfb\u52a0 summary \u90e8\u5206</li> <li>\u5982\u679c\u6ca1\u6709\u7279\u522b\u8981\u6c42\uff0c\u4e0d\u8981\u6dfb\u52a0 remark \u548c example</li> </ul> 2025-09-272025-10-27","tags":["csharp"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/","title":"Unity SerializeReferenceAttribute \u89e3\u6790","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6982\u8ff0","title":"\u6982\u8ff0","text":"<p><code>SerializeReferenceAttribute</code> \u662f Unity 2019.3 \u5f15\u5165\u7684\u91cd\u8981\u7279\u6027\uff0c\u5b83\u5f7b\u5e95\u6539\u53d8\u4e86 Unity \u5e8f\u5217\u5316\u7cfb\u7edf\u5bf9\u591a\u6001\u7c7b\u578b\u7684\u652f\u6301\u3002\u672c\u6587\u5c06\u6df1\u5165\u63a2\u8ba8\u8fd9\u4e2a\u7279\u6027\u7684\u4f7f\u7528\u65b9\u6cd5\u3001\u5b9e\u73b0\u539f\u7406\u4ee5\u53ca\u5728\u6e38\u620f\u5f00\u53d1\u4e2d\u7684\u5b9e\u9645\u5e94\u7528\u3002</p>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#SerializeReferenceAttribute-\u57fa\u7840","title":"SerializeReferenceAttribute \u57fa\u7840","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u4f20\u7edf\u5e8f\u5217\u5316\u7684\u9650\u5236","title":"\u4f20\u7edf\u5e8f\u5217\u5316\u7684\u9650\u5236","text":"<p>\u5728 <code>SerializeReferenceAttribute</code> \u51fa\u73b0\u4e4b\u524d\uff0cUnity \u7684\u5e8f\u5217\u5316\u7cfb\u7edf\u5b58\u5728\u4ee5\u4e0b\u9650\u5236\uff1a</p> <pre><code>public class TraditionalSerializationExample : MonoBehaviour \n{\n    [SerializeField] private IWeapon weapon;        // \u274c \u65e0\u6cd5\u5e8f\u5217\u5316\u63a5\u53e3\n    [SerializeField] private BaseEnemy enemy;       // \u274c \u53ea\u80fd\u5e8f\u5217\u5316\u5177\u4f53\u7c7b\u578b\n    [SerializeField] private List&lt;ISkill&gt; skills;   // \u274c \u63a5\u53e3\u96c6\u5408\u65e0\u6cd5\u5e8f\u5217\u5316\n}\n</code></pre> <p>\u8fd9\u4e9b\u9650\u5236\u5bfc\u81f4\u5f00\u53d1\u8005\u96be\u4ee5\u5b9e\u73b0\u771f\u6b63\u7684\u591a\u6001\u8bbe\u8ba1\uff0c\u5f80\u5f80\u9700\u8981\u4f7f\u7528\u590d\u6742\u7684\u5de5\u5382\u6a21\u5f0f\u6216\u679a\u4e3e\u9a71\u52a8\u7684\u5b9e\u73b0\u3002</p>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#SerializeReferenceAttribute-\u7684\u89e3\u51b3\u65b9\u6848","title":"SerializeReferenceAttribute \u7684\u89e3\u51b3\u65b9\u6848","text":"<pre><code>public class ModernSerializationExample : MonoBehaviour \n{\n    [SerializeReference] private IWeapon weapon;        // \u2705 \u53ef\u4ee5\u5e8f\u5217\u5316\u63a5\u53e3\u5b9e\u73b0\n    [SerializeReference] private BaseEnemy enemy;       // \u2705 \u652f\u6301\u591a\u6001\u5e8f\u5217\u5316\n    [SerializeReference] private List&lt;ISkill&gt; skills;   // \u2705 \u63a5\u53e3\u96c6\u5408\u5b8c\u5168\u652f\u6301\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6838\u5fc3\u7279\u6027\u5206\u6790","title":"\u6838\u5fc3\u7279\u6027\u5206\u6790","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5f15\u7528\u5e8f\u5217\u5316-vs-\u503c\u5e8f\u5217\u5316","title":"\u5f15\u7528\u5e8f\u5217\u5316 vs \u503c\u5e8f\u5217\u5316","text":"\u7279\u6027\u5bf9\u6bd4 SerializeField SerializeReference \u5e8f\u5217\u5316\u65b9\u5f0f \u503c\u62f7\u8d1d \u5f15\u7528\u5e8f\u5217\u5316 \u7c7b\u578b\u652f\u6301 \u5177\u4f53\u7c7b\u578b \u63a5\u53e3/\u62bd\u8c61\u7c7b \u591a\u6001\u652f\u6301 \u274c \u2705 \u7a7a\u503c\u5904\u7406 \u9ed8\u8ba4\u6784\u9020 \u652f\u6301 null \u5f15\u7528\u5171\u4eab \u274c \u2705 \u6027\u80fd\u5f00\u9500 \u4f4e \u4e2d\u7b49","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5b9e\u73b0\u539f\u7406","title":"\u5b9e\u73b0\u539f\u7406","text":"<p><code>SerializeReferenceAttribute</code> \u7684\u5de5\u4f5c\u673a\u5236\u5305\u62ec\uff1a</p> <pre><code>graph TD\n    A[\u5e8f\u5217\u5316\u65f6] --&gt; B[\u4fdd\u5b58\u7c7b\u578b\u4fe1\u606f]\n    A --&gt; C[\u4fdd\u5b58\u5b9e\u4f8b\u6570\u636e]\n    A --&gt; D[\u7ef4\u62a4\u5f15\u7528\u5173\u7cfb]\n\n    E[\u53cd\u5e8f\u5217\u5316\u65f6] --&gt; F[\u8bfb\u53d6\u7c7b\u578b\u4fe1\u606f]\n    E --&gt; G[\u521b\u5efa\u6b63\u786e\u7c7b\u578b\u5b9e\u4f8b]\n    E --&gt; H[\u6062\u590d\u5f15\u7528\u5173\u7cfb]\n\n    B --&gt; I[\u5b8c\u6574\u7c7b\u578b\u540d\u79f0]\n    C --&gt; J[\u5b9e\u4f8b\u5b57\u6bb5\u6570\u636e]\n    D --&gt; K[\u5f15\u7528ID\u6620\u5c04]</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5b9e\u9645\u5e94\u7528\u573a\u666f","title":"\u5b9e\u9645\u5e94\u7528\u573a\u666f","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6b66\u5668\u7cfb\u7edf\u8bbe\u8ba1","title":"\u6b66\u5668\u7cfb\u7edf\u8bbe\u8ba1","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u63a5\u53e3\u5b9a\u4e49","title":"\u63a5\u53e3\u5b9a\u4e49","text":"<pre><code>public interface IWeapon\n{\n    string Name { get; }\n    float Damage { get; }\n    float FireRate { get; }\n    void Fire(Vector3 firePoint, Vector3 direction);\n    bool CanFire();\n}\n\npublic interface IReloadable\n{\n    int CurrentAmmo { get; }\n    int MaxAmmo { get; }\n    void Reload();\n    bool NeedsReload();\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5177\u4f53\u5b9e\u73b0","title":"\u5177\u4f53\u5b9e\u73b0","text":"<pre><code>[System.Serializable]\npublic class Pistol : IWeapon, IReloadable\n{\n    [SerializeField] private string weaponName = \"\u624b\u67aa\";\n    [SerializeField] private float damage = 25f;\n    [SerializeField] private float fireRate = 2f;\n    [SerializeField] private int currentAmmo = 12;\n    [SerializeField] private int maxAmmo = 12;\n\n    public string Name =&gt; weaponName;\n    public float Damage =&gt; damage;\n    public float FireRate =&gt; fireRate;\n    public int CurrentAmmo =&gt; currentAmmo;\n    public int MaxAmmo =&gt; maxAmmo;\n\n    public void Fire(Vector3 firePoint, Vector3 direction)\n    {\n        if (!CanFire()) return;\n\n        currentAmmo--;\n        // \u53d1\u5c04\u903b\u8f91\n        Debug.Log($\"{weaponName} \u53d1\u5c04\uff01\u5269\u4f59\u5f39\u836f\uff1a{currentAmmo}\");\n    }\n\n    public bool CanFire() =&gt; currentAmmo &gt; 0;\n\n    public void Reload()\n    {\n        currentAmmo = maxAmmo;\n        Debug.Log($\"{weaponName} \u91cd\u65b0\u88c5\u5f39\u5b8c\u6210\");\n    }\n\n    public bool NeedsReload() =&gt; currentAmmo == 0;\n}\n\n[System.Serializable]\npublic class Rifle : IWeapon, IReloadable\n{\n    [SerializeField] private string weaponName = \"\u6b65\u67aa\";\n    [SerializeField] private float damage = 45f;\n    [SerializeField] private float fireRate = 5f;\n    [SerializeField] private int currentAmmo = 30;\n    [SerializeField] private int maxAmmo = 30;\n\n    // \u5b9e\u73b0\u4e0e Pistol \u7c7b\u4f3c...\n    public string Name =&gt; weaponName;\n    public float Damage =&gt; damage;\n    public float FireRate =&gt; fireRate;\n    public int CurrentAmmo =&gt; currentAmmo;\n    public int MaxAmmo =&gt; maxAmmo;\n\n    public void Fire(Vector3 firePoint, Vector3 direction)\n    {\n        if (!CanFire()) return;\n\n        currentAmmo--;\n        Debug.Log($\"{weaponName} \u8fde\u5c04\uff01\u5269\u4f59\u5f39\u836f\uff1a{currentAmmo}\");\n    }\n\n    public bool CanFire() =&gt; currentAmmo &gt; 0;\n    public void Reload() =&gt; currentAmmo = maxAmmo;\n    public bool NeedsReload() =&gt; currentAmmo == 0;\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6b66\u5668\u63a7\u5236\u5668","title":"\u6b66\u5668\u63a7\u5236\u5668","text":"<pre><code>public class WeaponController : MonoBehaviour\n{\n    [SerializeReference] private IWeapon primaryWeapon;\n    [SerializeReference] private IWeapon secondaryWeapon;\n    [SerializeReference] private List&lt;IWeapon&gt; weaponInventory = new List&lt;IWeapon&gt;();\n\n    [SerializeField] private Transform firePoint;\n    [SerializeField] private LayerMask targetLayers;\n\n    private IWeapon currentWeapon;\n\n    private void Start()\n    {\n        currentWeapon = primaryWeapon;\n    }\n\n    private void Update()\n    {\n        HandleInput();\n    }\n\n    private void HandleInput()\n    {\n        if (Input.GetMouseButtonDown(0))\n        {\n            FireCurrentWeapon();\n        }\n\n        if (Input.GetKeyDown(KeyCode.R))\n        {\n            ReloadCurrentWeapon();\n        }\n\n        if (Input.GetKeyDown(KeyCode.Q))\n        {\n            SwitchWeapon();\n        }\n    }\n\n    private void FireCurrentWeapon()\n    {\n        if (currentWeapon?.CanFire() == true)\n        {\n            Vector3 fireDirection = Camera.main.transform.forward;\n            currentWeapon.Fire(firePoint.position, fireDirection);\n        }\n    }\n\n    private void ReloadCurrentWeapon()\n    {\n        if (currentWeapon is IReloadable reloadable &amp;&amp; reloadable.NeedsReload())\n        {\n            reloadable.Reload();\n        }\n    }\n\n    private void SwitchWeapon()\n    {\n        currentWeapon = currentWeapon == primaryWeapon ? secondaryWeapon : primaryWeapon;\n        Debug.Log($\"\u5207\u6362\u5230\u6b66\u5668\uff1a{currentWeapon?.Name}\");\n    }\n\n    public void AddWeapon(IWeapon weapon)\n    {\n        weaponInventory.Add(weapon);\n    }\n\n    public void EquipWeapon(IWeapon weapon)\n    {\n        if (primaryWeapon == null)\n            primaryWeapon = weapon;\n        else if (secondaryWeapon == null)\n            secondaryWeapon = weapon;\n        else\n            primaryWeapon = weapon; // \u66ff\u6362\u4e3b\u6b66\u5668\n\n        currentWeapon = weapon;\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6280\u80fd\u7cfb\u7edf\u8bbe\u8ba1","title":"\u6280\u80fd\u7cfb\u7edf\u8bbe\u8ba1","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6280\u80fd\u63a5\u53e3\u5c42\u6b21","title":"\u6280\u80fd\u63a5\u53e3\u5c42\u6b21","text":"<pre><code>public interface ISkill\n{\n    string Name { get; }\n    string Description { get; }\n    float Cooldown { get; }\n    float ManaCost { get; }\n    bool CanActivate();\n    void Activate(GameObject caster);\n}\n\npublic interface ITargetedSkill : ISkill\n{\n    float Range { get; }\n    bool IsValidTarget(GameObject target);\n    void ActivateOnTarget(GameObject caster, GameObject target);\n}\n\npublic interface IAreaSkill : ISkill\n{\n    float Radius { get; }\n    void ActivateInArea(GameObject caster, Vector3 center);\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5177\u4f53\u6280\u80fd\u5b9e\u73b0","title":"\u5177\u4f53\u6280\u80fd\u5b9e\u73b0","text":"<pre><code>[System.Serializable]\npublic class FireballSkill : ITargetedSkill\n{\n    [SerializeField] private string skillName = \"\u706b\u7403\u672f\";\n    [SerializeField] private string description = \"\u53d1\u5c04\u4e00\u4e2a\u706b\u7403\u653b\u51fb\u76ee\u6807\";\n    [SerializeField] private float cooldown = 3f;\n    [SerializeField] private float manaCost = 20f;\n    [SerializeField] private float range = 10f;\n    [SerializeField] private float damage = 50f;\n\n    private float lastActivateTime;\n\n    public string Name =&gt; skillName;\n    public string Description =&gt; description;\n    public float Cooldown =&gt; cooldown;\n    public float ManaCost =&gt; manaCost;\n    public float Range =&gt; range;\n\n    public bool CanActivate()\n    {\n        return Time.time &gt;= lastActivateTime + cooldown;\n    }\n\n    public void Activate(GameObject caster)\n    {\n        // \u81ea\u52a8\u5bfb\u627e\u6700\u8fd1\u76ee\u6807\n        var target = FindNearestEnemy(caster);\n        if (target != null &amp;&amp; IsValidTarget(target))\n        {\n            ActivateOnTarget(caster, target);\n        }\n    }\n\n    public bool IsValidTarget(GameObject target)\n    {\n        return target.CompareTag(\"Enemy\");\n    }\n\n    public void ActivateOnTarget(GameObject caster, GameObject target)\n    {\n        if (!CanActivate()) return;\n\n        lastActivateTime = Time.time;\n\n        // \u521b\u5efa\u706b\u7403\u6548\u679c\n        CreateFireballEffect(caster.transform.position, target.transform.position);\n\n        // \u5bf9\u76ee\u6807\u9020\u6210\u4f24\u5bb3\n        var health = target.GetComponent&lt;Health&gt;();\n        health?.TakeDamage(damage);\n\n        Debug.Log($\"{skillName} \u547d\u4e2d {target.name}\uff0c\u9020\u6210 {damage} \u70b9\u4f24\u5bb3\");\n    }\n\n    private GameObject FindNearestEnemy(GameObject caster)\n    {\n        var enemies = GameObject.FindGameObjectsWithTag(\"Enemy\");\n        GameObject nearest = null;\n        float nearestDistance = float.MaxValue;\n\n        foreach (var enemy in enemies)\n        {\n            float distance = Vector3.Distance(caster.transform.position, enemy.transform.position);\n            if (distance &lt; nearestDistance &amp;&amp; distance &lt;= range)\n            {\n                nearestDistance = distance;\n                nearest = enemy;\n            }\n        }\n\n        return nearest;\n    }\n\n    private void CreateFireballEffect(Vector3 start, Vector3 end)\n    {\n        // \u521b\u5efa\u706b\u7403\u89c6\u89c9\u6548\u679c\u7684\u903b\u8f91\n        Debug.Log($\"\u706b\u7403\u4ece {start} \u98de\u5411 {end}\");\n    }\n}\n\n[System.Serializable]\npublic class HealingSkill : ISkill\n{\n    [SerializeField] private string skillName = \"\u6cbb\u7597\u672f\";\n    [SerializeField] private string description = \"\u6062\u590d\u751f\u547d\u503c\";\n    [SerializeField] private float cooldown = 5f;\n    [SerializeField] private float manaCost = 30f;\n    [SerializeField] private float healAmount = 75f;\n\n    private float lastActivateTime;\n\n    public string Name =&gt; skillName;\n    public string Description =&gt; description;\n    public float Cooldown =&gt; cooldown;\n    public float ManaCost =&gt; manaCost;\n\n    public bool CanActivate()\n    {\n        return Time.time &gt;= lastActivateTime + cooldown;\n    }\n\n    public void Activate(GameObject caster)\n    {\n        if (!CanActivate()) return;\n\n        lastActivateTime = Time.time;\n\n        var health = caster.GetComponent&lt;Health&gt;();\n        if (health != null)\n        {\n            health.Heal(healAmount);\n            Debug.Log($\"{skillName} \u6062\u590d\u4e86 {healAmount} \u70b9\u751f\u547d\u503c\");\n        }\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6280\u80fd\u7ba1\u7406\u5668","title":"\u6280\u80fd\u7ba1\u7406\u5668","text":"<pre><code>public class SkillManager : MonoBehaviour\n{\n    [SerializeReference] private List&lt;ISkill&gt; availableSkills = new List&lt;ISkill&gt;();\n    [SerializeReference] private List&lt;ISkill&gt; equippedSkills = new List&lt;ISkill&gt;();\n\n    [SerializeField] private int maxEquippedSkills = 4;\n    [SerializeField] private PlayerMana playerMana;\n\n    private void Update()\n    {\n        HandleSkillInput();\n    }\n\n    private void HandleSkillInput()\n    {\n        if (Input.GetKeyDown(KeyCode.Alpha1)) ActivateSkill(0);\n        if (Input.GetKeyDown(KeyCode.Alpha2)) ActivateSkill(1);\n        if (Input.GetKeyDown(KeyCode.Alpha3)) ActivateSkill(2);\n        if (Input.GetKeyDown(KeyCode.Alpha4)) ActivateSkill(3);\n    }\n\n    public void ActivateSkill(int skillIndex)\n    {\n        if (skillIndex &lt; 0 || skillIndex &gt;= equippedSkills.Count) return;\n\n        var skill = equippedSkills[skillIndex];\n        if (skill == null) return;\n\n        if (!skill.CanActivate())\n        {\n            Debug.Log($\"{skill.Name} \u51b7\u5374\u4e2d\");\n            return;\n        }\n\n        if (playerMana.CurrentMana &lt; skill.ManaCost)\n        {\n            Debug.Log($\"\u6cd5\u529b\u503c\u4e0d\u8db3\uff0c\u65e0\u6cd5\u91ca\u653e {skill.Name}\");\n            return;\n        }\n\n        playerMana.ConsumeMana(skill.ManaCost);\n        skill.Activate(gameObject);\n    }\n\n    public bool EquipSkill(ISkill skill)\n    {\n        if (equippedSkills.Count &gt;= maxEquippedSkills)\n        {\n            Debug.Log(\"\u6280\u80fd\u680f\u5df2\u6ee1\");\n            return false;\n        }\n\n        if (!availableSkills.Contains(skill))\n        {\n            Debug.Log(\"\u6280\u80fd\u672a\u89e3\u9501\");\n            return false;\n        }\n\n        equippedSkills.Add(skill);\n        Debug.Log($\"\u88c5\u5907\u6280\u80fd\uff1a{skill.Name}\");\n        return true;\n    }\n\n    public void UnequipSkill(ISkill skill)\n    {\n        if (equippedSkills.Remove(skill))\n        {\n            Debug.Log($\"\u5378\u4e0b\u6280\u80fd\uff1a{skill.Name}\");\n        }\n    }\n\n    public void LearnSkill(ISkill skill)\n    {\n        if (!availableSkills.Contains(skill))\n        {\n            availableSkills.Add(skill);\n            Debug.Log($\"\u5b66\u4f1a\u65b0\u6280\u80fd\uff1a{skill.Name}\");\n        }\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u9ad8\u7ea7\u4f7f\u7528\u6280\u5de7","title":"\u9ad8\u7ea7\u4f7f\u7528\u6280\u5de7","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5f15\u7528\u5171\u4eab","title":"\u5f15\u7528\u5171\u4eab","text":"<p><code>SerializeReference</code> \u652f\u6301\u5f15\u7528\u5171\u4eab\uff0c\u591a\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u5f15\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61\uff1a</p> <pre><code>public class ReferenceSharing : MonoBehaviour\n{\n    [SerializeReference] private IWeapon playerWeapon;\n    [SerializeReference] private IWeapon droppedWeapon;\n\n    // \u4e24\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u5f15\u7528\u540c\u4e00\u4e2a\u6b66\u5668\u5bf9\u8c61\n    private void Start()\n    {\n        var sharedWeapon = new Pistol();\n        playerWeapon = sharedWeapon;\n        droppedWeapon = sharedWeapon; // \u5171\u4eab\u5f15\u7528\n\n        // \u4fee\u6539\u5176\u4e2d\u4e00\u4e2a\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\n        if (playerWeapon is Pistol pistol)\n        {\n            pistol.Fire(Vector3.zero, Vector3.forward);\n            // droppedWeapon \u7684\u5f39\u836f\u4e5f\u4f1a\u51cf\u5c11\n        }\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u7a7a\u503c\u5904\u7406","title":"\u7a7a\u503c\u5904\u7406","text":"<pre><code>public class NullHandling : MonoBehaviour\n{\n    [SerializeReference] private IWeapon weapon; // \u53ef\u4ee5\u4e3a null\n\n    private void Update()\n    {\n        // \u5b89\u5168\u7684\u7a7a\u503c\u68c0\u67e5\n        if (weapon?.CanFire() == true)\n        {\n            weapon.Fire(transform.position, transform.forward);\n        }\n    }\n\n    public void EquipWeapon(IWeapon newWeapon)\n    {\n        weapon = newWeapon; // \u53ef\u4ee5\u8d4b\u503c\u4e3a null \u6765\u5378\u4e0b\u6b66\u5668\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u7c7b\u578b\u8fc7\u6ee4","title":"\u7c7b\u578b\u8fc7\u6ee4","text":"<p>\u4f7f\u7528 <code>SubclassSelector</code> \u7279\u6027\uff08\u9700\u8981 Odin Inspector\uff09\u6765\u9650\u5236\u53ef\u9009\u62e9\u7684\u7c7b\u578b\uff1a</p> <pre><code>public class TypeFiltering : MonoBehaviour\n{\n    [SerializeReference, SubclassSelector]\n    private IWeapon restrictedWeapon; // \u53ea\u663e\u793a IWeapon \u7684\u5b9e\u73b0\u7c7b\n\n    [SerializeReference]\n    [SubclassSelector(IncludeBaseType = false)]\n    private BaseEnemy enemyType; // \u6392\u9664\u57fa\u7c7b\uff0c\u53ea\u663e\u793a\u6d3e\u751f\u7c7b\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6027\u80fd\u8003\u91cf","title":"\u6027\u80fd\u8003\u91cf","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5e8f\u5217\u5316\u6027\u80fd","title":"\u5e8f\u5217\u5316\u6027\u80fd","text":"\u64cd\u4f5c\u7c7b\u578b \u76f8\u5bf9\u6027\u80fd \u5f71\u54cd\u56e0\u7d20 \u5e8f\u5217\u5316 85% \u7c7b\u578b\u4fe1\u606f\u5b58\u50a8\u5f00\u9500 \u53cd\u5e8f\u5217\u5316 80% \u53cd\u5c04\u521b\u5efa\u5b9e\u4f8b\u5f00\u9500 \u5185\u5b58\u5360\u7528 110% \u989d\u5916\u7684\u7c7b\u578b\u4fe1\u606f \u52a0\u8f7d\u65f6\u95f4 90% \u7c7b\u578b\u89e3\u6790\u5f00\u9500","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u4f18\u5316\u5efa\u8bae","title":"\u4f18\u5316\u5efa\u8bae","text":"<ol> <li>\u907f\u514d\u6df1\u5ea6\u5d4c\u5957\uff1a\u9650\u5236 <code>SerializeReference</code> \u5bf9\u8c61\u7684\u5d4c\u5957\u5c42\u6b21</li> <li>\u5408\u7406\u4f7f\u7528\u7f13\u5b58\uff1a\u7f13\u5b58\u9891\u7e41\u8bbf\u95ee\u7684\u63a5\u53e3\u5b9e\u73b0</li> <li>\u7c7b\u578b\u9884\u70ed\uff1a\u5728\u6e38\u620f\u542f\u52a8\u65f6\u9884\u5148\u521b\u5efa\u5e38\u7528\u7c7b\u578b\u5b9e\u4f8b</li> <li>\u6279\u91cf\u5e8f\u5217\u5316\uff1a\u5c06\u76f8\u5173\u5bf9\u8c61\u7ec4\u5408\u5230\u5bb9\u5668\u4e2d\u4e00\u8d77\u5e8f\u5217\u5316</li> </ol> <pre><code>// \u63a8\u8350\uff1a\u6279\u91cf\u5e8f\u5217\u5316\n[System.Serializable]\npublic class WeaponLoadout\n{\n    [SerializeReference] public List&lt;IWeapon&gt; weapons;\n    [SerializeReference] public List&lt;ISkill&gt; skills;\n}\n\npublic class OptimizedPlayerController : MonoBehaviour\n{\n    [SerializeReference] private WeaponLoadout loadout; // \u6279\u91cf\u5e8f\u5217\u5316\n\n    // \u907f\u514d\uff1a\u5927\u91cf\u72ec\u7acb\u7684 SerializeReference \u5b57\u6bb5\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u51b3\u65b9\u6848","title":"\u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u51b3\u65b9\u6848","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u95ee\u98981\u63a5\u53e3\u5728-Inspector-\u4e2d\u663e\u793a\u4e3a-None","title":"\u95ee\u98981\uff1a\u63a5\u53e3\u5728 Inspector \u4e2d\u663e\u793a\u4e3a None","text":"<p>\u539f\u56e0\uff1a\u6ca1\u6709\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u6216\u7c7b\u578b\u4e0d\u53ef\u5e8f\u5217\u5316</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <pre><code>// \u786e\u4fdd\u5b9e\u73b0\u7c7b\u6807\u8bb0\u4e3a [System.Serializable]\n[System.Serializable]\npublic class SwordWeapon : IWeapon\n{\n    // \u5b9e\u73b0\u5185\u5bb9...\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u95ee\u98982\u5e8f\u5217\u5316\u540e\u6570\u636e\u4e22\u5931","title":"\u95ee\u98982\uff1a\u5e8f\u5217\u5316\u540e\u6570\u636e\u4e22\u5931","text":"<p>\u539f\u56e0\uff1a\u7c7b\u578b\u91cd\u547d\u540d\u6216\u547d\u540d\u7a7a\u95f4\u53d8\u66f4</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <pre><code>// \u4f7f\u7528 FormerlySerializedAs \u7279\u6027\u4fdd\u6301\u517c\u5bb9\u6027\n[System.Serializable]\npublic class RenamedWeapon : IWeapon\n{\n    [FormerlySerializedAs(\"oldFieldName\")]\n    [SerializeField] private float newFieldName;\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u95ee\u98983\u8fd0\u884c\u65f6\u6027\u80fd\u95ee\u9898","title":"\u95ee\u98983\uff1a\u8fd0\u884c\u65f6\u6027\u80fd\u95ee\u9898","text":"<p>\u539f\u56e0\uff1a\u9891\u7e41\u7684\u7c7b\u578b\u68c0\u67e5\u548c\u8f6c\u6362</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <pre><code>public class PerformanceOptimized : MonoBehaviour\n{\n    [SerializeReference] private IWeapon weapon;\n\n    // \u7f13\u5b58\u7c7b\u578b\u68c0\u67e5\u7ed3\u679c\n    private IReloadable reloadableWeapon;\n    private bool isReloadable;\n\n    private void Start()\n    {\n        // \u542f\u52a8\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u5e76\u7f13\u5b58\n        reloadableWeapon = weapon as IReloadable;\n        isReloadable = reloadableWeapon != null;\n    }\n\n    private void Update()\n    {\n        // \u4f7f\u7528\u7f13\u5b58\u7684\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u7c7b\u578b\u68c0\u67e5\n        if (isReloadable &amp;&amp; reloadableWeapon.NeedsReload())\n        {\n            reloadableWeapon.Reload();\n        }\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u4e0e-Odin-Inspector-\u7684\u534f\u540c","title":"\u4e0e Odin Inspector \u7684\u534f\u540c","text":"<p><code>Odin Inspector</code> \u8fdb\u4e00\u6b65\u589e\u5f3a\u4e86 <code>SerializeReference</code> \u7684\u529f\u80fd\uff1a</p>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u589e\u5f3a\u7684\u7c7b\u578b\u9009\u62e9\u5668","title":"\u589e\u5f3a\u7684\u7c7b\u578b\u9009\u62e9\u5668","text":"<pre><code>public class OdinEnhanced : SerializedMonoBehaviour\n{\n    [SerializeReference, SubclassSelector]\n    private IWeapon weapon; // \u53cb\u597d\u7684\u7c7b\u578b\u9009\u62e9\u4e0b\u62c9\u83dc\u5355\n\n    [SerializeReference, ShowInInspector]\n    private List&lt;ISkill&gt; skills; // \u652f\u6301\u590d\u6742\u96c6\u5408\u7684\u53ef\u89c6\u5316\u7f16\u8f91\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u81ea\u5b9a\u4e49\u7ed8\u5236\u5668","title":"\u81ea\u5b9a\u4e49\u7ed8\u5236\u5668","text":"<pre><code>public class WeaponDrawer : OdinAttributeDrawer&lt;WeaponAttribute&gt;\n{\n    protected override void DrawPropertyLayout(GUIContent label)\n    {\n        // \u81ea\u5b9a\u4e49\u6b66\u5668\u5b57\u6bb5\u7684\u7ed8\u5236\u65b9\u5f0f\n        Property.Draw(label);\n\n        if (Property.ValueEntry.SmartValue is IWeapon weapon)\n        {\n            EditorGUILayout.LabelField($\"\u4f24\u5bb3: {weapon.Damage}\");\n            EditorGUILayout.LabelField($\"\u5c04\u901f: {weapon.FireRate}\");\n        }\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u6700\u4f73\u5b9e\u8df5\u603b\u7ed3","title":"\u6700\u4f73\u5b9e\u8df5\u603b\u7ed3","text":"","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u8bbe\u8ba1\u539f\u5219","title":"\u8bbe\u8ba1\u539f\u5219","text":"<ol> <li>\u63a5\u53e3\u4f18\u5148\uff1a\u4f18\u5148\u8bbe\u8ba1\u63a5\u53e3\uff0c\u540e\u5b9e\u73b0\u5177\u4f53\u7c7b</li> <li>\u804c\u8d23\u5355\u4e00\uff1a\u6bcf\u4e2a\u63a5\u53e3\u4e13\u6ce8\u4e8e\u5355\u4e00\u804c\u8d23</li> <li>\u7ec4\u5408\u4f18\u4e8e\u7ee7\u627f\uff1a\u901a\u8fc7\u63a5\u53e3\u7ec4\u5408\u5b9e\u73b0\u590d\u6742\u529f\u80fd</li> <li>\u6570\u636e\u9a71\u52a8\uff1a\u5c06\u914d\u7f6e\u6570\u636e\u4e0e\u884c\u4e3a\u903b\u8f91\u5206\u79bb</li> </ol>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u4ee3\u7801\u89c4\u8303","title":"\u4ee3\u7801\u89c4\u8303","text":"<pre><code>// \u2705 \u63a8\u8350\u7684\u547d\u540d\u548c\u7ed3\u6784\npublic interface IGameplayElement\n{\n    string DisplayName { get; }\n    bool IsActive { get; }\n    void Initialize();\n    void Cleanup();\n}\n\n[System.Serializable]\npublic class ConcreteGameplayElement : IGameplayElement\n{\n    [SerializeField] private string displayName;\n    [SerializeField] private bool isActive = true;\n\n    public string DisplayName =&gt; displayName;\n    public bool IsActive =&gt; isActive;\n\n    public void Initialize()\n    {\n        // \u521d\u59cb\u5316\u903b\u8f91\n    }\n\n    public void Cleanup()\n    {\n        // \u6e05\u7406\u903b\u8f91\n    }\n}\n</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u67b6\u6784\u5efa\u8bae","title":"\u67b6\u6784\u5efa\u8bae","text":"<pre><code>graph TD\n    A[\u6e38\u620f\u5bf9\u8c61] --&gt; B[\u4e3b\u63a7\u5236\u5668\u7ec4\u4ef6]\n    B --&gt; C[SerializeReference \u63a5\u53e3\u5b57\u6bb5]\n    C --&gt; D[\u5177\u4f53\u5b9e\u73b0\u7c7b]\n\n    E[\u914d\u7f6e\u8d44\u4ea7] --&gt; F[ScriptableObject]\n    F --&gt; G[SerializeReference \u914d\u7f6e]\n    G --&gt; H[\u8fd0\u884c\u65f6\u5b9e\u4f8b\u5316]</code></pre>","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/09/24/unity-serializereferenceattribute-%E8%A7%A3%E6%9E%90/#\u7ed3\u8bed","title":"\u7ed3\u8bed","text":"<p><code>SerializeReferenceAttribute</code> \u4e3a Unity \u5f00\u53d1\u5e26\u6765\u4e86\u771f\u6b63\u7684\u591a\u6001\u5e8f\u5217\u5316\u80fd\u529b\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u6784\u5efa\u66f4\u52a0\u7075\u6d3b\u3001\u53ef\u6269\u5c55\u7684\u6e38\u620f\u67b6\u6784\u3002\u901a\u8fc7\u5408\u7406\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u7ed3\u5408\u826f\u597d\u7684\u63a5\u53e3\u8bbe\u8ba1\u548c\u7ec4\u4ef6\u5316\u601d\u7ef4\uff0c\u53ef\u4ee5\u5927\u5927\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u6269\u5c55\u6027\u3002</p> <p>\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u5efa\u8bae\uff1a</p> <ol> <li>\u6e10\u8fdb\u5f0f\u91c7\u7528\uff1a\u4ece\u7b80\u5355\u7684\u7cfb\u7edf\u5f00\u59cb\u4f7f\u7528\uff0c\u9010\u6b65\u6269\u5c55\u5230\u590d\u6742\u573a\u666f</li> <li>\u6027\u80fd\u76d1\u63a7\uff1a\u6ce8\u610f\u5e8f\u5217\u5316\u6027\u80fd\uff0c\u5728\u5fc5\u8981\u65f6\u8fdb\u884c\u4f18\u5316</li> <li>\u56e2\u961f\u57f9\u8bad\uff1a\u786e\u4fdd\u56e2\u961f\u6210\u5458\u7406\u89e3\u63a5\u53e3\u8bbe\u8ba1\u548c\u591a\u6001\u5e8f\u5217\u5316\u7684\u6982\u5ff5</li> <li>\u5de5\u5177\u652f\u6301\uff1a\u914d\u5408 Odin Inspector \u7b49\u5de5\u5177\u63d0\u5347\u5f00\u53d1\u4f53\u9a8c</li> </ol> <p>\u901a\u8fc7\u638c\u63e1 <code>SerializeReferenceAttribute</code>\uff0c\u6211\u4eec\u80fd\u591f\u7f16\u5199\u51fa\u66f4\u52a0\u4f18\u96c5\u3001\u7075\u6d3b\u7684 Unity \u4ee3\u7801\uff0c\u4e3a\u6e38\u620f\u5f00\u53d1\u5e26\u6765\u65b0\u7684\u53ef\u80fd\u6027\u3002</p> <p>\u672c\u6587\u662f Odin Toolkits \u7cfb\u5217\u6587\u7ae0\u7684\u4e00\u90e8\u5206\uff0c\u81f4\u529b\u4e8e\u5206\u4eab Unity \u5f00\u53d1\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5\u548c\u8fdb\u9636\u6280\u5de7\u3002</p> 2025-09-242025-10-27","tags":["\u5e8f\u5217\u5316"]},{"location":"blog/2025/10/17/sirenix-information/","title":"Sirenix \u5b98\u65b9\u4fe1\u606f\u8bb0\u5f55","text":"<p>Odin Inspector \u662f Sirenix \u516c\u53f8\u7684\u4e00\u4e2a Unity \u63d2\u4ef6\uff0c\u7528\u4e8e\u5728 Unity \u7f16\u8f91\u5668\u4e2d\u63d0\u4f9b\u66f4\u5f3a\u5927\u7684\u5c5e\u6027\u7ed8\u5236\u548c\u8c03\u8bd5\u529f\u80fd\u3002Sirenix \u5728 Discord \u4e0a\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u83b7\u53d6\u652f\u6301\u548c\u5206\u4eab\u4ed6\u4eec\u7684\u63d2\u4ef6\u4f7f\u7528\u7ecf\u9a8c\u3002\u672c\u6587\u8bb0\u5f55\u4e00\u4e9b\u53ef\u80fd\u6709\u7528\u7684\u4fe1\u606f\u3002</p>","tags":["sirenix"]},{"location":"blog/2025/10/17/sirenix-information/#Odin-Inspector-40-Visual-Designer-\u8bbe\u8ba1\u7406\u5ff5","title":"Odin Inspector 4.0 Visual Designer \u8bbe\u8ba1\u7406\u5ff5","text":"<p>Odin Inspector 4.0 Visual Designer \u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u6587\u4ef6\u7c7b\u578b\uff0c<code>ovdf</code>\u3002\u8fd9\u4e2a\u6587\u4ef6\u7c7b\u578b\u7528\u4e8e\u5b9a\u4e49\u53ef\u89c6\u5316\u8bbe\u8ba1\u5e08\u7684\u5e03\u5c40\u548c\u884c\u4e3a\u3002</p> <ol> <li> <p>\u7528\u6237\u53ef\u4ee5\u53d1\u5e03\u5305\u542b <code>ovdf</code> \u6587\u4ef6\u7684\u63d2\u4ef6\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u4ee3\u7801\u4f9d\u8d56\u3002\u6b64\u7c7b\u578b\u7684\u6587\u672c\u4e0d\u4f1a\u5f71\u54cd\u9879\u76ee\uff0c\u53ea\u6709\u5728\u7528\u6237\u5b89\u88c5\u4e86 Odin Inspector 4.0 \u6216\u66f4\u9ad8\u7248\u672c\u65f6\uff0c\u624d\u4f1a\u4f7f\u5f97 <code>ovdf</code> \u6587\u4ef6\u751f\u6548\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u4f7f\u7528\u6216\u8005\u652f\u6301 Odin Inspector 4.0 \u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u548c\u7075\u6d3b\uff0c\u65e0\u9700\u4f9d\u8d56\u4efb\u4f55\u4ee3\u7801\u3002</p> </li> <li> <p>\u53ef\u89c6\u5316\u8bbe\u8ba1\u5668\uff0c\u9ed8\u8ba4\u662f\u4e0d\u5141\u8bb8\u4fee\u6539 Unity \u62e5\u6709\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u7684\u811a\u672c\u7684\u6837\u5f0f\u7684\uff0c\u4e0d\u6253\u7b97\u652f\u6301\u4fee\u6539\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u7684\u811a\u672c\u7684\u6837\u5f0f\uff0c\u672a\u6765\u4f1a\u786e\u4fdd\u65e0\u6cd5\u7f16\u8f91\u5e26\u6709\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u7684\u7c7b\u578b\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u3002</p> </li> </ol> 2025-10-172025-10-27","tags":["sirenix"]},{"location":"blog/2025/10/15/summaryattribute-%E6%B3%A8%E9%87%8A%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%8F%82%E8%80%83/","title":"SummaryAttribute \u6ce8\u91ca\u63d0\u793a\u8bcd\u53c2\u8003","text":"<p>\u7ed9\u811a\u672c\u6dfb\u52a0 SummaryAttribute \u6ce8\u91ca\u7684 AI \u63d0\u793a\u8bcd\u53c2\u8003\u3002</p> <p>\u4e3a\u9009\u4e2d\u811a\u672c\u6dfb\u52a0\u6ce8\u91ca\uff0c\u6ce8\u91ca\u4f7f\u7528 SummaryAttribute \u7279\u6027\uff0cSummaryAttribute \u7279\u6027\u53ea\u6709\u552f\u4e00\u53c2\u6570\uff0c\u53c2\u6570\u5185\u5bb9\u4e3a\u6ce8\u91ca\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u8fd9\u4e00\u4e2a\u7279\u6027\u4f5c\u4e3a\u6ce8\u91ca\u3002\u4e0d\u9700\u8981\u4f7f\u7528 /// \u6ce8\u91ca\u3002\u7c7b\u9700\u8981\u6dfb\u52a0\u6ce8\u91ca\uff0c\u7c7b\u7684\u6210\u5458\u4e2d\u53ea\u5bf9 public \u6216\u8005 protected \u7684\u6210\u5458\u6dfb\u52a0\u6ce8\u91ca\uff0c\u4e0d\u5bf9\u6784\u9020\u51fd\u6570\u6dfb\u52a0\u6ce8\u91ca\u3002</p> 2025-10-152025-10-27","tags":["\u63d0\u793a\u8bcd\u53c2\u8003"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/","title":"Unity C# \u4ee3\u7801\u8bbe\u8ba1\u5185\u529f\uff1a\u4ece\u67b6\u6784\u601d\u7ef4\u5230\u5b9e\u6218\u7ecf\u9a8c","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u8bbe\u8ba1\u6982\u8ff0","title":"\u8bbe\u8ba1\u6982\u8ff0","text":"<p>\u672c\u6587\u6863\u6df1\u5165\u63a2\u8ba8 Unity \u4e2d C# \u4ee3\u7801\u8bbe\u8ba1\u7684\u6838\u5fc3\u7406\u5ff5\u548c\u5b9e\u8df5\u7ecf\u9a8c\uff0c\u91cd\u70b9\u5173\u6ce8\u4ee3\u7801\u67b6\u6784\u7684\u5185\u529f\u4fee\u70bc\uff0c\u5305\u62ec\u6570\u636e\u5bb9\u5668\u8bbe\u8ba1\u3001\u63a5\u53e3\u9a71\u52a8\u5f00\u53d1\u3001\u7ec4\u4ef6\u5316\u67b6\u6784\u7b49\u5173\u952e\u65b9\u9762\u3002\u901a\u8fc7\u7cfb\u7edf\u6027\u7684\u8bbe\u8ba1\u539f\u5219\u548c\u5b9e\u6218\u6848\u4f8b\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u6784\u5efa\u9ad8\u8d28\u91cf\u3001\u53ef\u7ef4\u62a4\u7684 Unity \u9879\u76ee\u3002</p>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5","title":"\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6570\u636e\u4e0e\u884c\u4e3a\u5206\u79bb\u539f\u5219","title":"\u6570\u636e\u4e0e\u884c\u4e3a\u5206\u79bb\u539f\u5219","text":"<p>\u5728 Unity \u5f00\u53d1\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u660e\u786e\u5176\u4e3b\u8981\u804c\u8d23\u662f\u4f5c\u4e3a\u6570\u636e\u5bb9\u5668\u8fd8\u662f\u884c\u4e3a\u8f7d\u4f53\u3002\u8fd9\u79cd\u5206\u79bb\u5e26\u6765\u7684\u597d\u5904\u5305\u62ec\uff1a</p> \u8bbe\u8ba1\u6a21\u5f0f \u804c\u8d23\u5b9a\u4e49 \u4f18\u52bf \u9002\u7528\u573a\u666f \u6570\u636e\u5bb9\u5668\u7c7b \u4e3b\u8981\u5b58\u50a8\u72b6\u6001\u6570\u636e\uff0c\u6700\u5c0f\u5316\u65b9\u6cd5\u6570\u91cf \u5e8f\u5217\u5316\u53cb\u597d\u3001\u6613\u4e8e\u8c03\u8bd5\u3001\u6570\u636e\u6d41\u6e05\u6670 \u914d\u7f6e\u6570\u636e\u3001\u6e38\u620f\u72b6\u6001\u3001\u6301\u4e45\u5316\u5bf9\u8c61 \u884c\u4e3a\u8f7d\u4f53\u7c7b \u4e3b\u8981\u5305\u542b\u4e1a\u52a1\u903b\u8f91\uff0c\u901a\u8fc7\u63a5\u53e3\u66b4\u9732\u80fd\u529b \u804c\u8d23\u6e05\u6670\u3001\u6613\u4e8e\u6d4b\u8bd5\u3001\u89e3\u8026\u5408\u5ea6\u9ad8 \u7cfb\u7edf\u63a7\u5236\u5668\u3001\u670d\u52a1\u7c7b\u3001\u7ba1\u7406\u5668 \u6df7\u5408\u578b\u7c7b \u6570\u636e\u4e0e\u884c\u4e3a\u5e76\u91cd\uff0c\u901a\u8fc7\u8bbe\u8ba1\u5e73\u8861\u4e24\u8005 \u4f7f\u7528\u4fbf\u6377\u3001\u9002\u5408\u5c0f\u578b\u9879\u76ee \u7b80\u5355\u7ec4\u4ef6\u3001\u5de5\u5177\u7c7b","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u63a5\u53e3\u9a71\u52a8\u7684\u67b6\u6784\u8bbe\u8ba1","title":"\u63a5\u53e3\u9a71\u52a8\u7684\u67b6\u6784\u8bbe\u8ba1","text":"<p>\u63a5\u53e3\u5728 Unity \u5f00\u53d1\u4e2d\u626e\u6f14\u7740\u67b6\u6784\u5951\u7ea6\u7684\u91cd\u8981\u89d2\u8272\uff0c\u901a\u8fc7\u63a5\u53e3\u53ef\u4ee5\u5feb\u901f\u7406\u89e3\u7c7b\u7684\u80fd\u529b\u800c\u65e0\u9700\u6df1\u5165\u5b9e\u73b0\u7ec6\u8282\u3002</p>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u63a5\u53e3\u8bbe\u8ba1\u7684\u6838\u5fc3\u4ef7\u503c","title":"\u63a5\u53e3\u8bbe\u8ba1\u7684\u6838\u5fc3\u4ef7\u503c","text":"<pre><code>graph TD\n    A[\u63a5\u53e3\u5951\u7ea6] --&gt; B[\u80fd\u529b\u53d1\u73b0]\n    A --&gt; C[\u4f9d\u8d56\u89e3\u8026]\n    A --&gt; D[\u6d4b\u8bd5\u53cb\u597d]\n    A --&gt; E[\u6269\u5c55\u6027\u5f3a]\n\n    B --&gt; F[\u5feb\u901f\u4e86\u89e3\u7c7b\u7684\u804c\u8d23]\n    C --&gt; G[\u964d\u4f4e\u6a21\u5757\u95f4\u8026\u5408]\n    D --&gt; H[\u4fbf\u4e8e\u5355\u5143\u6d4b\u8bd5\u548c\u6a21\u62df]\n    E --&gt; I[\u652f\u6301\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u63a5\u53e3\u5206\u5c42\u7b56\u7565","title":"\u63a5\u53e3\u5206\u5c42\u7b56\u7565","text":"<p>Unity \u9879\u76ee\u4e2d\u7684\u63a5\u53e3\u8bbe\u8ba1\u5e94\u8be5\u9075\u5faa\u5206\u5c42\u67b6\u6784\uff1a</p> \u63a5\u53e3\u5c42\u7ea7 \u62bd\u8c61\u7ea7\u522b \u8bbe\u8ba1\u76ee\u6807 \u793a\u4f8b \u6838\u5fc3\u80fd\u529b\u63a5\u53e3 \u9ad8\u62bd\u8c61 \u5b9a\u4e49\u57fa\u7840\u884c\u4e3a\u5951\u7ea6 <code>IMoveable</code>, <code>IDamageable</code>, <code>IInteractable</code> \u7cfb\u7edf\u529f\u80fd\u63a5\u53e3 \u4e2d\u62bd\u8c61 \u5b9a\u4e49\u5b50\u7cfb\u7edf\u804c\u8d23 <code>IInventorySystem</code>, <code>ISaveSystem</code>, <code>IAudioManager</code> \u5177\u4f53\u5b9e\u73b0\u63a5\u53e3 \u4f4e\u62bd\u8c61 \u5b9a\u4e49\u7279\u5b9a\u5b9e\u73b0\u7ec6\u8282 <code>IWeaponController</code>, <code>IPlayerInput</code>, <code>IEnemyAI</code>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#Unity-\u7ec4\u4ef6\u5316\u67b6\u6784\u8bbe\u8ba1","title":"Unity \u7ec4\u4ef6\u5316\u67b6\u6784\u8bbe\u8ba1","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7ec4\u4ef6\u5316\u7684\u6838\u5fc3\u601d\u60f3","title":"\u7ec4\u4ef6\u5316\u7684\u6838\u5fc3\u601d\u60f3","text":"<p>Unity \u7684 Component \u7cfb\u7edf\u5929\u7136\u652f\u6301\u7ec4\u4ef6\u5316\u5f00\u53d1\uff0c\u5e94\u8be5\u5145\u5206\u5229\u7528\u8fd9\u4e00\u7279\u6027\u6784\u5efa\u677e\u8026\u5408\u7684\u67b6\u6784\u3002</p>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4e3b\u63a7\u5236\u5668\u6a21\u5f0f","title":"\u4e3b\u63a7\u5236\u5668\u6a21\u5f0f","text":"<p>\u6bcf\u4e2a\u6e38\u620f\u5bf9\u8c61\u5e94\u8be5\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u63a7\u5236\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u534f\u8c03\u5176\u4ed6\u529f\u80fd\u7ec4\u4ef6\uff1a</p> <pre><code>graph TD\n    A[\u4e3b\u63a7\u5236\u5668\u7ec4\u4ef6] --&gt; B[\u5065\u5eb7\u7cfb\u7edf\u7ec4\u4ef6]\n    A --&gt; C[\u79fb\u52a8\u7cfb\u7edf\u7ec4\u4ef6] \n    A --&gt; D[\u6b66\u5668\u7cfb\u7edf\u7ec4\u4ef6]\n    A --&gt; E[\u97f3\u6548\u7cfb\u7edf\u7ec4\u4ef6]\n    A --&gt; F[\u52a8\u753b\u7cfb\u7edf\u7ec4\u4ef6]\n\n    A --&gt; G[\u4e8b\u4ef6\u534f\u8c03]\n    A --&gt; H[\u72b6\u6001\u7ba1\u7406]\n    A --&gt; I[\u7ec4\u4ef6\u901a\u4fe1]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7ec4\u4ef6\u804c\u8d23\u5206\u5de5\u8868","title":"\u7ec4\u4ef6\u804c\u8d23\u5206\u5de5\u8868","text":"\u7ec4\u4ef6\u7c7b\u578b \u804c\u8d23\u8303\u56f4 \u8bbe\u8ba1\u7279\u70b9 \u901a\u4fe1\u65b9\u5f0f \u4e3b\u63a7\u5236\u5668 \u7ec4\u4ef6\u534f\u8c03\u3001\u72b6\u6001\u7ba1\u7406\u3001\u4e8b\u4ef6\u5206\u53d1 \u8f7b\u91cf\u7ea7\u3001\u63a5\u53e3\u4e30\u5bcc UnityEvent\u3001\u63a5\u53e3\u8c03\u7528 \u529f\u80fd\u7ec4\u4ef6 \u5355\u4e00\u529f\u80fd\u5b9e\u73b0\u3001\u72b6\u6001\u7ef4\u62a4 \u9ad8\u5185\u805a\u3001\u4f4e\u8026\u5408 \u4e8b\u4ef6\u901a\u77e5\u3001\u76f4\u63a5\u8c03\u7528 \u6570\u636e\u7ec4\u4ef6 \u914d\u7f6e\u5b58\u50a8\u3001\u72b6\u6001\u6301\u4e45\u5316 \u5e8f\u5217\u5316\u53cb\u597d\u3001\u53ea\u8bfb\u5c5e\u6027 \u5c5e\u6027\u8bbf\u95ee\u3001\u914d\u7f6e\u6ce8\u5165 \u670d\u52a1\u7ec4\u4ef6 \u5168\u5c40\u670d\u52a1\u3001\u8de8\u5bf9\u8c61\u901a\u4fe1 \u5355\u4f8b\u6a21\u5f0f\u3001\u751f\u547d\u5468\u671f\u7ba1\u7406 \u670d\u52a1\u5b9a\u4f4d\u3001\u4f9d\u8d56\u6ce8\u5165","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7ec4\u4ef6\u95f4\u901a\u4fe1\u7b56\u7565","title":"\u7ec4\u4ef6\u95f4\u901a\u4fe1\u7b56\u7565","text":"<p>Unity \u7ec4\u4ef6\u95f4\u901a\u4fe1\u5e94\u8be5\u9075\u5faa\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\uff1a</p>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u901a\u4fe1\u65b9\u5f0f\u4f18\u5148\u7ea7","title":"\u901a\u4fe1\u65b9\u5f0f\u4f18\u5148\u7ea7","text":"<ol> <li>\u63a5\u53e3\u8c03\u7528\uff08\u63a8\u8350\uff09- \u5f3a\u7c7b\u578b\u3001\u7f16\u8bd1\u65f6\u68c0\u67e5</li> <li>UnityEvent\uff08\u9002\u4e2d\uff09- \u677e\u8026\u5408\u3001Inspector \u53ef\u914d\u7f6e</li> <li>\u4e8b\u4ef6\u7cfb\u7edf\uff08\u8c28\u614e\uff09- \u5168\u5c40\u901a\u4fe1\u3001\u9700\u8981\u826f\u597d\u7684\u4e8b\u4ef6\u7ba1\u7406</li> <li>\u9759\u6001\u5f15\u7528\uff08\u907f\u514d\uff09- \u7d27\u8026\u5408\u3001\u96be\u4ee5\u6d4b\u8bd5</li> </ol>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#SOLID-\u539f\u5219\u5728-Unity-\u4e2d\u7684\u5b9e\u8df5","title":"SOLID \u539f\u5219\u5728 Unity \u4e2d\u7684\u5b9e\u8df5","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5355\u4e00\u804c\u8d23\u539f\u5219SRP\u5728\u7ec4\u4ef6\u8bbe\u8ba1\u4e2d\u7684\u5e94\u7528","title":"\u5355\u4e00\u804c\u8d23\u539f\u5219\uff08SRP\uff09\u5728\u7ec4\u4ef6\u8bbe\u8ba1\u4e2d\u7684\u5e94\u7528","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7ec4\u4ef6\u804c\u8d23\u5212\u5206\u77e9\u9635","title":"\u7ec4\u4ef6\u804c\u8d23\u5212\u5206\u77e9\u9635","text":"\u529f\u80fd\u9886\u57df \u7ec4\u4ef6\u540d\u79f0 \u6838\u5fc3\u804c\u8d23 \u907f\u514d\u804c\u8d23 \u751f\u547d\u503c\u7ba1\u7406 HealthComponent \u8840\u91cf\u8ba1\u7b97\u3001\u4f24\u5bb3\u5904\u7406\u3001\u6b7b\u4ea1\u72b6\u6001 UI \u66f4\u65b0\u3001\u97f3\u6548\u64ad\u653e\u3001\u52a8\u753b\u63a7\u5236 \u79fb\u52a8\u63a7\u5236 MovementComponent \u4f4d\u7f6e\u53d8\u6362\u3001\u901f\u5ea6\u63a7\u5236\u3001\u7269\u7406\u4ea4\u4e92 \u8f93\u5165\u5904\u7406\u3001AI \u51b3\u7b56\u3001\u52a8\u753b\u540c\u6b65 \u6b66\u5668\u7cfb\u7edf WeaponComponent \u6b66\u5668\u903b\u8f91\u3001\u5c04\u51fb\u673a\u5236\u3001\u5f39\u836f\u7ba1\u7406 \u4f24\u5bb3\u8ba1\u7b97\u3001\u76ee\u6807\u641c\u7d22\u3001\u7279\u6548\u64ad\u653e \u8f93\u5165\u5904\u7406 InputComponent \u8f93\u5165\u91c7\u96c6\u3001\u547d\u4ee4\u8f6c\u6362\u3001\u8f93\u5165\u72b6\u6001 \u79fb\u52a8\u6267\u884c\u3001\u6280\u80fd\u91ca\u653e\u3001\u754c\u9762\u64cd\u4f5c","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5f00\u95ed\u539f\u5219OCP\u5728\u6269\u5c55\u6027\u8bbe\u8ba1\u4e2d\u7684\u4f53\u73b0","title":"\u5f00\u95ed\u539f\u5219\uff08OCP\uff09\u5728\u6269\u5c55\u6027\u8bbe\u8ba1\u4e2d\u7684\u4f53\u73b0","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7b56\u7565\u6a21\u5f0f\u7684\u6e38\u620f\u5e94\u7528","title":"\u7b56\u7565\u6a21\u5f0f\u7684\u6e38\u620f\u5e94\u7528","text":"<p>\u901a\u8fc7\u63a5\u53e3\u548c\u7b56\u7565\u6a21\u5f0f\u5b9e\u73b0\u5bf9\u6269\u5c55\u5f00\u653e\u3001\u5bf9\u4fee\u6539\u5c01\u95ed\uff1a</p> <pre><code>classDiagram\n    class IWeaponStrategy {\n        +Fire(firePoint, bulletPrefab)\n        +CanFire() bool\n        +GetDamage() float\n    }\n\n    class WeaponSystem {\n        -IWeaponStrategy currentWeapon\n        +EquipWeapon(IWeaponStrategy)\n        +Fire()\n    }\n\n    class PistolStrategy {\n        +Fire()\n        +CanFire()\n        +GetDamage()\n    }\n\n    class RifleStrategy {\n        +Fire()\n        +CanFire()\n        +GetDamage()\n    }\n\n    class ShotgunStrategy {\n        +Fire()\n        +CanFire()\n        +GetDamage()\n    }\n\n    IWeaponStrategy &lt;|-- PistolStrategy\n    IWeaponStrategy &lt;|-- RifleStrategy\n    IWeaponStrategy &lt;|-- ShotgunStrategy\n    WeaponSystem --&gt; IWeaponStrategy</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4f9d\u8d56\u5012\u7f6e\u539f\u5219DIP\u5728\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u5b9e\u73b0","title":"\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff08DIP\uff09\u5728\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u5b9e\u73b0","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u670d\u52a1\u5b9a\u4f4d\u5668\u6a21\u5f0f","title":"\u670d\u52a1\u5b9a\u4f4d\u5668\u6a21\u5f0f","text":"<p>\u901a\u8fc7\u62bd\u8c61\u63a5\u53e3\u548c\u670d\u52a1\u5bb9\u5668\u5b9e\u73b0\u4f9d\u8d56\u5012\u7f6e\uff1a</p> <pre><code>graph TD\n    A[GameManager&lt;br/&gt;\u9ad8\u5c42\u6a21\u5757] --&gt; B[IDataStorage&lt;br/&gt;\u62bd\u8c61\u63a5\u53e3]\n    A --&gt; C[ILogger&lt;br/&gt;\u62bd\u8c61\u63a5\u53e3]\n    A --&gt; D[IAudioManager&lt;br/&gt;\u62bd\u8c61\u63a5\u53e3]\n\n    B --&gt; E[FileDataStorage&lt;br/&gt;\u5177\u4f53\u5b9e\u73b0]\n    B --&gt; F[CloudDataStorage&lt;br/&gt;\u5177\u4f53\u5b9e\u73b0]\n\n    C --&gt; G[UnityLogger&lt;br/&gt;\u5177\u4f53\u5b9e\u73b0]\n    C --&gt; H[FileLogger&lt;br/&gt;\u5177\u4f53\u5b9e\u73b0]\n\n    D --&gt; I[UnityAudioManager&lt;br/&gt;\u5177\u4f53\u5b9e\u73b0]\n    D --&gt; J[FMODAudioManager&lt;br/&gt;\u5177\u4f53\u5b9e\u73b0]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6570\u636e\u9a71\u52a8\u7684\u67b6\u6784\u8bbe\u8ba1","title":"\u6570\u636e\u9a71\u52a8\u7684\u67b6\u6784\u8bbe\u8ba1","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#ScriptableObject-\u4f5c\u4e3a\u6570\u636e\u5bb9\u5668","title":"ScriptableObject \u4f5c\u4e3a\u6570\u636e\u5bb9\u5668","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6570\u636e\u5bb9\u5668\u8bbe\u8ba1\u539f\u5219","title":"\u6570\u636e\u5bb9\u5668\u8bbe\u8ba1\u539f\u5219","text":"<ol> <li>\u7eaf\u6570\u636e\u5b58\u50a8 - \u6700\u5c0f\u5316\u65b9\u6cd5\uff0c\u4e13\u6ce8\u4e8e\u6570\u636e\u5e8f\u5217\u5316</li> <li>\u914d\u7f6e\u9a71\u52a8 - \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u63a7\u5236\u6e38\u620f\u884c\u4e3a</li> <li>\u7248\u672c\u517c\u5bb9 - \u8003\u8651\u6570\u636e\u7ed3\u6784\u7684\u5411\u540e\u517c\u5bb9\u6027</li> <li>\u7c7b\u578b\u5b89\u5168 - \u4f7f\u7528\u5f3a\u7c7b\u578b\u800c\u975e\u5b57\u7b26\u4e32\u952e\u503c</li> </ol>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6570\u636e\u5bb9\u5668\u5206\u7c7b\u7b56\u7565","title":"\u6570\u636e\u5bb9\u5668\u5206\u7c7b\u7b56\u7565","text":"\u6570\u636e\u7c7b\u578b \u8bbe\u8ba1\u6a21\u5f0f \u5e8f\u5217\u5316\u65b9\u5f0f \u4f7f\u7528\u573a\u666f \u914d\u7f6e\u6570\u636e ScriptableObject Unity \u539f\u751f\u5e8f\u5217\u5316 \u6e38\u620f\u5e73\u8861\u6027\u53c2\u6570\u3001\u7cfb\u7edf\u914d\u7f6e \u72b6\u6001\u6570\u636e \u666e\u901a\u7c7b + [Serializable] JsonUtility \u6216\u7b2c\u4e09\u65b9 \u5b58\u6863\u6570\u636e\u3001\u8fd0\u884c\u65f6\u72b6\u6001 \u4e34\u65f6\u6570\u636e \u7ed3\u6784\u4f53\u6216\u7b80\u5355\u7c7b \u5185\u5b58\u5b58\u50a8 \u5e27\u95f4\u4f20\u9012\u3001\u8ba1\u7b97\u7f13\u5b58 \u5f15\u7528\u6570\u636e \u8d44\u6e90\u5f15\u7528 + \u914d\u7f6e AssetReference \u9884\u5236\u4f53\u914d\u7f6e\u3001\u8d44\u6e90\u7ba1\u7406","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u914d\u7f6e\u4e0e\u903b\u8f91\u5206\u79bb","title":"\u914d\u7f6e\u4e0e\u903b\u8f91\u5206\u79bb","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6570\u636e\u9a71\u52a8\u7684\u6b66\u5668\u7cfb\u7edf\u8bbe\u8ba1","title":"\u6570\u636e\u9a71\u52a8\u7684\u6b66\u5668\u7cfb\u7edf\u8bbe\u8ba1","text":"<pre><code>graph TB\n    A[WeaponConfigSO&lt;br/&gt;\u6b66\u5668\u914d\u7f6e\u6570\u636e] --&gt; B[WeaponController&lt;br/&gt;\u6b66\u5668\u903b\u8f91\u63a7\u5236]\n    C[BulletConfigSO&lt;br/&gt;\u5b50\u5f39\u914d\u7f6e\u6570\u636e] --&gt; D[BulletBehaviour&lt;br/&gt;\u5b50\u5f39\u884c\u4e3a\u903b\u8f91]\n    E[AudioConfigSO&lt;br/&gt;\u97f3\u6548\u914d\u7f6e\u6570\u636e] --&gt; F[AudioManager&lt;br/&gt;\u97f3\u6548\u7ba1\u7406\u5668]\n\n    B --&gt; G[IWeapon&lt;br/&gt;\u6b66\u5668\u63a5\u53e3]\n    D --&gt; H[IBullet&lt;br/&gt;\u5b50\u5f39\u63a5\u53e3]\n    F --&gt; I[IAudioSource&lt;br/&gt;\u97f3\u9891\u63a5\u53e3]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4e8b\u4ef6\u9a71\u52a8\u7684\u901a\u4fe1\u67b6\u6784","title":"\u4e8b\u4ef6\u9a71\u52a8\u7684\u901a\u4fe1\u67b6\u6784","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4e8b\u4ef6\u7cfb\u7edf\u7684\u5c42\u6b21\u8bbe\u8ba1","title":"\u4e8b\u4ef6\u7cfb\u7edf\u7684\u5c42\u6b21\u8bbe\u8ba1","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4e8b\u4ef6\u5206\u7c7b\u4e0e\u5e94\u7528\u573a\u666f","title":"\u4e8b\u4ef6\u5206\u7c7b\u4e0e\u5e94\u7528\u573a\u666f","text":"\u4e8b\u4ef6\u7c7b\u578b \u4f5c\u7528\u57df \u751f\u547d\u5468\u671f \u9002\u7528\u573a\u666f \u672c\u5730\u4e8b\u4ef6 \u7ec4\u4ef6\u5185\u90e8 \u7ec4\u4ef6\u751f\u547d\u5468\u671f \u72b6\u6001\u53d8\u5316\u901a\u77e5\u3001\u5185\u90e8\u903b\u8f91\u5904\u7406 \u5bf9\u8c61\u4e8b\u4ef6 GameObject \u8303\u56f4 \u5bf9\u8c61\u751f\u547d\u5468\u671f \u7ec4\u4ef6\u95f4\u901a\u4fe1\u3001\u529f\u80fd\u534f\u8c03 \u7cfb\u7edf\u4e8b\u4ef6 \u573a\u666f\u6216\u5168\u5c40 \u573a\u666f\u6216\u5e94\u7528\u751f\u547d\u5468\u671f \u7cfb\u7edf\u7ea7\u901a\u77e5\u3001\u8de8\u5bf9\u8c61\u901a\u4fe1 \u4e1a\u52a1\u4e8b\u4ef6 \u6e38\u620f\u903b\u8f91 \u6e38\u620f\u4f1a\u8bdd \u6e38\u620f\u673a\u5236\u3001\u4e1a\u52a1\u6d41\u7a0b","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4e8b\u4ef6\u547d\u540d\u548c\u7ec4\u7ec7\u89c4\u8303","title":"\u4e8b\u4ef6\u547d\u540d\u548c\u7ec4\u7ec7\u89c4\u8303","text":"<pre><code>graph TD\n    A[\u4e8b\u4ef6\u547d\u540d\u7a7a\u95f4] --&gt; B[\u7cfb\u7edf\u524d\u7f00]\n    A --&gt; C[\u52a8\u4f5c\u63cf\u8ff0]\n    A --&gt; D[\u65f6\u6001\u6807\u8bc6]\n\n    B --&gt; E[Player&lt;br/&gt;\u73a9\u5bb6\u7cfb\u7edf]\n    B --&gt; F[Weapon&lt;br/&gt;\u6b66\u5668\u7cfb\u7edf]\n    B --&gt; G[UI&lt;br/&gt;\u754c\u9762\u7cfb\u7edf]\n\n    C --&gt; H[Health&lt;br/&gt;\u751f\u547d\u76f8\u5173]\n    C --&gt; I[Level&lt;br/&gt;\u7b49\u7ea7\u76f8\u5173]\n    C --&gt; J[Inventory&lt;br/&gt;\u9053\u5177\u76f8\u5173]\n\n    D --&gt; K[Changed&lt;br/&gt;\u5df2\u53d8\u5316]\n    D --&gt; L[ing&lt;br/&gt;\u6b63\u5728\u8fdb\u884c]\n    D --&gt; M[Requested&lt;br/&gt;\u8bf7\u6c42\u72b6\u6001]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6027\u80fd\u4f18\u5316\u7684\u8bbe\u8ba1\u8003\u91cf","title":"\u6027\u80fd\u4f18\u5316\u7684\u8bbe\u8ba1\u8003\u91cf","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5bf9\u8c61\u6c60\u6a21\u5f0f\u5728-Unity-\u4e2d\u7684\u5e94\u7528","title":"\u5bf9\u8c61\u6c60\u6a21\u5f0f\u5728 Unity \u4e2d\u7684\u5e94\u7528","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6c60\u5316\u7b56\u7565\u8bbe\u8ba1","title":"\u6c60\u5316\u7b56\u7565\u8bbe\u8ba1","text":"\u5bf9\u8c61\u7c7b\u578b \u6c60\u5316\u65b9\u5f0f \u6c60\u5927\u5c0f\u7b56\u7565 \u751f\u547d\u5468\u671f\u7ba1\u7406 \u9891\u7e41\u521b\u5efa\u5bf9\u8c61 \u4e13\u7528\u5bf9\u8c61\u6c60 \u52a8\u6001\u6269\u5c55 \u5f15\u7528\u8ba1\u6570 \u76f8\u4f3c\u5bf9\u8c61\u65cf \u901a\u7528\u5bf9\u8c61\u6c60 \u56fa\u5b9a\u5927\u5c0f \u65f6\u95f4\u8fc7\u671f \u5927\u578b\u5bf9\u8c61 \u61d2\u52a0\u8f7d\u6c60 \u5c0f\u5bb9\u91cf \u4e3b\u52a8\u56de\u6536 \u4e34\u65f6\u5bf9\u8c61 \u6808\u5f0f\u6c60 \u9884\u5206\u914d \u4f5c\u7528\u57df\u56de\u6536","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5185\u5b58\u7ba1\u7406\u548c\u5783\u573e\u56de\u6536\u4f18\u5316","title":"\u5185\u5b58\u7ba1\u7406\u548c\u5783\u573e\u56de\u6536\u4f18\u5316","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#GC-\u53cb\u597d\u7684\u4ee3\u7801\u8bbe\u8ba1\u539f\u5219","title":"GC \u53cb\u597d\u7684\u4ee3\u7801\u8bbe\u8ba1\u539f\u5219","text":"<ol> <li>\u51cf\u5c11\u88c5\u7bb1\u62c6\u7bb1 - \u4f7f\u7528\u6cdb\u578b\u800c\u975e object \u7c7b\u578b</li> <li>\u907f\u514d\u9891\u7e41\u5b57\u7b26\u4e32\u64cd\u4f5c - \u4f7f\u7528 StringBuilder \u6216\u5bf9\u8c61\u6c60</li> <li>\u7f13\u5b58\u9891\u7e41\u8ba1\u7b97\u7ed3\u679c - \u907f\u514d\u6bcf\u5e27\u91cd\u590d\u8ba1\u7b97</li> <li>\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\u7b80\u5355\u6570\u636e - \u51cf\u5c11\u5806\u5185\u5b58\u5206\u914d</li> <li>\u8c28\u614e\u4f7f\u7528 LINQ - \u5728\u6027\u80fd\u5173\u952e\u8def\u5f84\u907f\u514d\u4f7f\u7528</li> </ol>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6d4b\u8bd5\u9a71\u52a8\u7684\u8bbe\u8ba1\u65b9\u6cd5","title":"\u6d4b\u8bd5\u9a71\u52a8\u7684\u8bbe\u8ba1\u65b9\u6cd5","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u53ef\u6d4b\u8bd5\u6027\u8bbe\u8ba1\u539f\u5219","title":"\u53ef\u6d4b\u8bd5\u6027\u8bbe\u8ba1\u539f\u5219","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6d4b\u8bd5\u53cb\u597d\u7684\u67b6\u6784\u7279\u5f81","title":"\u6d4b\u8bd5\u53cb\u597d\u7684\u67b6\u6784\u7279\u5f81","text":"<pre><code>graph TD\n    A[\u53ef\u6d4b\u8bd5\u67b6\u6784] --&gt; B[\u4f9d\u8d56\u6ce8\u5165]\n    A --&gt; C[\u63a5\u53e3\u62bd\u8c61]\n    A --&gt; D[\u7eaf\u51fd\u6570\u8bbe\u8ba1]\n    A --&gt; E[\u72b6\u6001\u9694\u79bb]\n\n    B --&gt; F[\u6a21\u62df\u4f9d\u8d56]\n    C --&gt; G[\u5951\u7ea6\u6d4b\u8bd5]\n    D --&gt; H[\u5355\u5143\u6d4b\u8bd5]\n    E --&gt; I[\u96c6\u6210\u6d4b\u8bd5]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6d4b\u8bd5\u5206\u5c42\u7b56\u7565","title":"\u6d4b\u8bd5\u5206\u5c42\u7b56\u7565","text":"\u6d4b\u8bd5\u5c42\u7ea7 \u6d4b\u8bd5\u5bf9\u8c61 \u6d4b\u8bd5\u5de5\u5177 \u6d4b\u8bd5\u91cd\u70b9 \u5355\u5143\u6d4b\u8bd5 \u5355\u4e2a\u7c7b\u6216\u65b9\u6cd5 NUnit + NSubstitute \u903b\u8f91\u6b63\u786e\u6027\u3001\u8fb9\u754c\u6761\u4ef6 \u7ec4\u4ef6\u6d4b\u8bd5 Unity \u7ec4\u4ef6 Unity Test Framework \u7ec4\u4ef6\u4ea4\u4e92\u3001\u751f\u547d\u5468\u671f \u96c6\u6210\u6d4b\u8bd5 \u7cfb\u7edf\u6a21\u5757 \u81ea\u5b9a\u4e49\u6d4b\u8bd5\u6846\u67b6 \u6a21\u5757\u534f\u4f5c\u3001\u6570\u636e\u6d41 \u7aef\u5230\u7aef\u6d4b\u8bd5 \u5b8c\u6574\u529f\u80fd \u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177 \u7528\u6237\u4f53\u9a8c\u3001\u6027\u80fd\u8868\u73b0","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4ee3\u7801\u7ec4\u7ec7\u548c\u6a21\u5757\u5316","title":"\u4ee3\u7801\u7ec4\u7ec7\u548c\u6a21\u5757\u5316","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u547d\u540d\u7a7a\u95f4\u548c\u7a0b\u5e8f\u96c6\u8bbe\u8ba1","title":"\u547d\u540d\u7a7a\u95f4\u548c\u7a0b\u5e8f\u96c6\u8bbe\u8ba1","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6a21\u5757\u5212\u5206\u7b56\u7565","title":"\u6a21\u5757\u5212\u5206\u7b56\u7565","text":"<pre><code>graph TD\n    A[\u9879\u76ee\u6839\u547d\u540d\u7a7a\u95f4] --&gt; B[Core&lt;br/&gt;\u6838\u5fc3\u6a21\u5757]\n    A --&gt; C[Systems&lt;br/&gt;\u7cfb\u7edf\u6a21\u5757]\n    A --&gt; D[Components&lt;br/&gt;\u7ec4\u4ef6\u6a21\u5757]\n    A --&gt; E[Data&lt;br/&gt;\u6570\u636e\u6a21\u5757]\n    A --&gt; F[Utils&lt;br/&gt;\u5de5\u5177\u6a21\u5757]\n\n    B --&gt; G[Interfaces&lt;br/&gt;\u6838\u5fc3\u63a5\u53e3]\n    B --&gt; H[Base&lt;br/&gt;\u57fa\u7840\u7c7b]\n    B --&gt; I[Constants&lt;br/&gt;\u5e38\u91cf\u5b9a\u4e49]\n\n    C --&gt; J[Audio&lt;br/&gt;\u97f3\u9891\u7cfb\u7edf]\n    C --&gt; K[Input&lt;br/&gt;\u8f93\u5165\u7cfb\u7edf]\n    C --&gt; L[Save&lt;br/&gt;\u5b58\u6863\u7cfb\u7edf]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6587\u4ef6\u5939\u7ed3\u6784\u548c\u4ee3\u7801\u7ec4\u7ec7","title":"\u6587\u4ef6\u5939\u7ed3\u6784\u548c\u4ee3\u7801\u7ec4\u7ec7","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u63a8\u8350\u7684\u9879\u76ee\u7ed3\u6784","title":"\u63a8\u8350\u7684\u9879\u76ee\u7ed3\u6784","text":"\u76ee\u5f55\u5c42\u7ea7 \u7ec4\u7ec7\u539f\u5219 \u5305\u542b\u5185\u5bb9 \u547d\u540d\u89c4\u8303 \u529f\u80fd\u6a21\u5757 \u6309\u4e1a\u52a1\u529f\u80fd\u5212\u5206 \u76f8\u5173\u7684\u7c7b\u3001\u63a5\u53e3\u3001\u914d\u7f6e \u4e1a\u52a1\u540d\u79f0 + \u6a21\u5757\u7c7b\u578b \u6280\u672f\u5c42\u6b21 \u6309\u6280\u672f\u804c\u8d23\u5212\u5206 \u76f8\u540c\u62bd\u8c61\u7ea7\u522b\u7684\u4ee3\u7801 \u6280\u672f\u7c7b\u578b + \u529f\u80fd\u63cf\u8ff0 \u751f\u547d\u5468\u671f \u6309\u4f7f\u7528\u9636\u6bb5\u5212\u5206 \u76f8\u540c\u751f\u547d\u5468\u671f\u7684\u8d44\u6e90 \u9636\u6bb5\u540d\u79f0 + \u8d44\u6e90\u7c7b\u578b \u4f9d\u8d56\u5173\u7cfb \u6309\u4f9d\u8d56\u65b9\u5411\u5212\u5206 \u4f4e\u8026\u5408\u7684\u6a21\u5757 \u4f9d\u8d56\u5c42\u7ea7 + \u529f\u80fd\u540d\u79f0","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7248\u672c\u63a7\u5236\u548c\u4ee3\u7801\u7ef4\u62a4","title":"\u7248\u672c\u63a7\u5236\u548c\u4ee3\u7801\u7ef4\u62a4","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u91cd\u6784\u7b56\u7565\u548c\u65f6\u673a","title":"\u91cd\u6784\u7b56\u7565\u548c\u65f6\u673a","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u91cd\u6784\u51b3\u7b56\u77e9\u9635","title":"\u91cd\u6784\u51b3\u7b56\u77e9\u9635","text":"\u91cd\u6784\u7c7b\u578b \u89e6\u53d1\u6761\u4ef6 \u91cd\u6784\u8303\u56f4 \u98ce\u9669\u8bc4\u4f30 \u7ed3\u6784\u91cd\u6784 \u67b6\u6784\u8150\u5316\u3001\u6027\u80fd\u95ee\u9898 \u6a21\u5757\u7ea7\u522b \u9ad8\u98ce\u9669\u3001\u9700\u8981\u5145\u5206\u6d4b\u8bd5 \u529f\u80fd\u91cd\u6784 \u9700\u6c42\u53d8\u66f4\u3001\u8bbe\u8ba1\u7f3a\u9677 \u529f\u80fd\u7ea7\u522b \u4e2d\u98ce\u9669\u3001\u5f71\u54cd\u76f8\u5173\u529f\u80fd \u4ee3\u7801\u91cd\u6784 \u4ee3\u7801\u5f02\u5473\u3001\u53ef\u8bfb\u6027\u5dee \u7c7b\u6216\u65b9\u6cd5\u7ea7\u522b \u4f4e\u98ce\u9669\u3001\u5c40\u90e8\u6539\u8fdb \u6027\u80fd\u91cd\u6784 \u6027\u80fd\u74f6\u9888\u3001\u8d44\u6e90\u6d6a\u8d39 \u7b97\u6cd5\u6216\u6570\u636e\u7ed3\u6784 \u4e2d\u98ce\u9669\u3001\u9700\u8981\u6027\u80fd\u6d4b\u8bd5","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4ee3\u7801\u8d28\u91cf\u76d1\u63a7","title":"\u4ee3\u7801\u8d28\u91cf\u76d1\u63a7","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u8d28\u91cf\u6307\u6807\u4f53\u7cfb","title":"\u8d28\u91cf\u6307\u6807\u4f53\u7cfb","text":"<pre><code>graph TD\n    A[\u4ee3\u7801\u8d28\u91cf] --&gt; B[\u53ef\u8bfb\u6027\u6307\u6807]\n    A --&gt; C[\u53ef\u7ef4\u62a4\u6027\u6307\u6807]\n    A --&gt; D[\u53ef\u6d4b\u8bd5\u6027\u6307\u6807]\n    A --&gt; E[\u6027\u80fd\u6307\u6807]\n\n    B --&gt; F[\u4ee3\u7801\u590d\u6742\u5ea6]\n    B --&gt; G[\u547d\u540d\u89c4\u8303]\n    B --&gt; H[\u6ce8\u91ca\u8d28\u91cf]\n\n    C --&gt; I[\u8026\u5408\u5ea6]\n    C --&gt; J[\u5185\u805a\u5ea6]\n    C --&gt; K[\u91cd\u590d\u4ee3\u7801]\n\n    D --&gt; L[\u6d4b\u8bd5\u8986\u76d6\u7387]\n    D --&gt; M[Mock \u53cb\u597d\u5ea6]\n    D --&gt; N[\u4f9d\u8d56\u6ce8\u5165\u7387]\n\n    E --&gt; O[\u5185\u5b58\u4f7f\u7528]\n    E --&gt; P[CPU \u5360\u7528]\n    E --&gt; Q[GC \u538b\u529b]</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u67b6\u6784\u8bbe\u8ba1\u6848\u4f8b\u5206\u6790","title":"QFramework \u67b6\u6784\u8bbe\u8ba1\u6848\u4f8b\u5206\u6790","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u7684\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5","title":"QFramework \u7684\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5","text":"<p>QFramework \u662f\u4e00\u4e2a\u4f18\u79c0\u7684 Unity \u67b6\u6784\u6846\u67b6\uff0c\u5176\u8bbe\u8ba1\u5145\u5206\u4f53\u73b0\u4e86\u672c\u6587\u6863\u6240\u8ff0\u7684\u5404\u9879\u8bbe\u8ba1\u539f\u5219\u3002\u901a\u8fc7\u5206\u6790 QFramework \u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3 Unity \u4e2d C# \u4ee3\u7801\u8bbe\u8ba1\u7684\u6700\u4f73\u5b9e\u8df5\u3002</p>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u56db\u5c42\u67b6\u6784\u6a21\u578b","title":"QFramework \u56db\u5c42\u67b6\u6784\u6a21\u578b","text":"<p>QFramework \u91c7\u7528\u4e86\u6e05\u6670\u7684\u5206\u5c42\u67b6\u6784\uff0c\u5b8c\u7f8e\u8be0\u91ca\u4e86\u804c\u8d23\u5206\u79bb\u548c\u4f9d\u8d56\u7ba1\u7406\u7684\u91cd\u8981\u6027\uff1a</p> <pre><code>graph TD\n    A[IController \u8868\u73b0\u5c42] --&gt; B[ISystem \u7cfb\u7edf\u5c42]\n    A --&gt; C[IModel \u6570\u636e\u5c42]\n    B --&gt; C\n    B --&gt; D[IUtility \u5de5\u5177\u5c42]\n    C --&gt; D\n\n    E[Command/Query] --&gt; B\n    E --&gt; C\n\n    F[Event/BindableProperty] --&gt; A\n\n    style A fill:#e1f5fe\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0</code></pre> \u5c42\u7ea7 \u804c\u8d23 \u4f9d\u8d56\u5173\u7cfb \u901a\u4fe1\u65b9\u5f0f IController (\u8868\u73b0\u5c42) \u63a5\u6536\u8f93\u5165\u3001\u72b6\u6001\u8868\u73b0\u3001UI \u63a7\u5236 \u53ef\u83b7\u53d6 System\u3001Model \u53d1\u9001 Command/Query\uff0c\u76d1\u542c Event ISystem (\u7cfb\u7edf\u5c42) \u4e1a\u52a1\u903b\u8f91\u3001\u8de8 Controller \u5171\u4eab\u903b\u8f91 \u53ef\u83b7\u53d6 System\u3001Model\u3001Utility \u76d1\u542c/\u53d1\u9001 Event IModel (\u6570\u636e\u5c42) \u6570\u636e\u5b58\u50a8\u3001\u6570\u636e\u64cd\u4f5c \u53ef\u83b7\u53d6 Utility \u53d1\u9001 Event IUtility (\u5de5\u5177\u5c42) \u57fa\u7840\u8bbe\u65bd\u3001\u7b2c\u4e09\u65b9\u5c01\u88c5 \u65e0\u4f9d\u8d56 \u7eaf\u5de5\u5177\u65b9\u6cd5","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u4e2d\u7684-SOLID-\u539f\u5219\u5b9e\u8df5","title":"QFramework \u4e2d\u7684 SOLID \u539f\u5219\u5b9e\u8df5","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5355\u4e00\u804c\u8d23\u539f\u5219\u7684\u4f53\u73b0","title":"\u5355\u4e00\u804c\u8d23\u539f\u5219\u7684\u4f53\u73b0","text":"<p>QFramework \u901a\u8fc7\u5206\u5c42\u8bbe\u8ba1\u786e\u4fdd\u6bcf\u4e2a\u5c42\u7ea7\u90fd\u6709\u660e\u786e\u7684\u804c\u8d23\uff1a</p> <pre><code>// \u2705 \u6570\u636e\u5c42\uff1a\u53ea\u8d1f\u8d23\u6570\u636e\u7ba1\u7406\npublic interface ICounterModel : IModel\n{\n    BindableProperty&lt;int&gt; Count { get; }\n    void IncrementCount();\n    void DecrementCount();\n}\n\n// \u2705 \u7cfb\u7edf\u5c42\uff1a\u53ea\u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91\npublic interface ICounterSystem : ISystem\n{\n    void ProcessCounterLogic();\n    bool CanIncrement();\n}\n\n// \u2705 \u8868\u73b0\u5c42\uff1a\u53ea\u8d1f\u8d23 UI \u8868\u73b0\npublic class CounterController : MonoBehaviour, IController\n{\n    [SerializeField] private Button incrementBtn;\n    [SerializeField] private Button decrementBtn;\n    [SerializeField] private Text countText;\n\n    private ICounterModel counterModel;\n\n    void Start()\n    {\n        counterModel = this.GetModel&lt;ICounterModel&gt;();\n\n        // \u6570\u636e\u7ed1\u5b9a\n        counterModel.Count.RegisterWithInitValue(OnCountChanged);\n\n        // \u4e8b\u4ef6\u7ed1\u5b9a\n        incrementBtn.onClick.AddListener(() =&gt; \n        {\n            this.SendCommand&lt;IncrementCountCommand&gt;();\n        });\n    }\n\n    void OnCountChanged(int newCount)\n    {\n        countText.text = newCount.ToString();\n    }\n\n    public IArchitecture GetArchitecture() =&gt; CounterApp.Interface;\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5f00\u95ed\u539f\u5219\u7684\u5b9e\u73b0","title":"\u5f00\u95ed\u539f\u5219\u7684\u5b9e\u73b0","text":"<p>QFramework \u901a\u8fc7\u63a5\u53e3\u548c Command \u6a21\u5f0f\u5b9e\u73b0\u5bf9\u6269\u5c55\u5f00\u653e\u3001\u5bf9\u4fee\u6539\u5c01\u95ed\uff1a</p> <pre><code>// \u2705 Command \u6a21\u5f0f\uff1a\u65b0\u589e\u529f\u80fd\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\npublic class IncrementCountCommand : AbstractCommand\n{\n    protected override void OnExecute()\n    {\n        var model = this.GetModel&lt;ICounterModel&gt;();\n        var system = this.GetSystem&lt;ICounterSystem&gt;();\n\n        if (system.CanIncrement())\n        {\n            model.IncrementCount();\n        }\n    }\n}\n\n// \u6dfb\u52a0\u65b0\u529f\u80fd\uff1a\u6279\u91cf\u589e\u52a0\npublic class BatchIncrementCommand : AbstractCommand\n{\n    private int amount;\n\n    public BatchIncrementCommand(int amount)\n    {\n        this.amount = amount;\n    }\n\n    protected override void OnExecute()\n    {\n        for (int i = 0; i &lt; amount; i++)\n        {\n            this.SendCommand&lt;IncrementCountCommand&gt;();\n        }\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\u7684\u5e94\u7528","title":"\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\u7684\u5e94\u7528","text":"<p>QFramework \u901a\u8fc7 Architecture \u6a21\u5f0f\u548c\u63a5\u53e3\u5b9e\u73b0\u4f9d\u8d56\u5012\u7f6e\uff1a</p> <pre><code>// \u2705 Architecture \u4f5c\u4e3a\u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668\npublic class CounterApp : Architecture&lt;CounterApp&gt;\n{\n    protected override void Init()\n    {\n        // \u6ce8\u518c Model\n        this.RegisterModel&lt;ICounterModel&gt;(new CounterModel());\n\n        // \u6ce8\u518c System\n        this.RegisterSystem&lt;ICounterSystem&gt;(new CounterSystem());\n\n        // \u6ce8\u518c Utility\n        this.RegisterUtility&lt;IStorageUtility&gt;(new PlayerPrefsStorage());\n    }\n}\n\n// \u2705 \u9ad8\u5c42\u6a21\u5757\u4e0d\u4f9d\u8d56\u5177\u4f53\u5b9e\u73b0\npublic class CounterModel : AbstractModel, ICounterModel\n{\n    public BindableProperty&lt;int&gt; Count { get; private set; }\n\n    protected override void OnInit()\n    {\n        var storage = this.GetUtility&lt;IStorageUtility&gt;();\n        var savedCount = storage.LoadInt(\"counter\", 0);\n        Count = new BindableProperty&lt;int&gt;(savedCount);\n\n        Count.Register(count =&gt; \n        {\n            storage.SaveInt(\"counter\", count);\n        });\n    }\n\n    public void IncrementCount()\n    {\n        Count.Value++;\n        this.SendEvent&lt;CountChangedEvent&gt;(new CountChangedEvent(Count.Value));\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u7684\u4e8b\u4ef6\u9a71\u52a8\u8bbe\u8ba1","title":"QFramework \u7684\u4e8b\u4ef6\u9a71\u52a8\u8bbe\u8ba1","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7c7b\u578b\u5b89\u5168\u7684\u4e8b\u4ef6\u7cfb\u7edf","title":"\u7c7b\u578b\u5b89\u5168\u7684\u4e8b\u4ef6\u7cfb\u7edf","text":"<p>QFramework \u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\u7684\u4e8b\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e86\u5b57\u7b26\u4e32\u4e8b\u4ef6\u7684\u5f0a\u7aef\uff1a</p> <pre><code>// \u2705 \u7c7b\u578b\u5b89\u5168\u7684\u4e8b\u4ef6\u5b9a\u4e49\npublic struct CountChangedEvent\n{\n    public int NewCount { get; }\n\n    public CountChangedEvent(int newCount)\n    {\n        NewCount = newCount;\n    }\n}\n\n// \u2705 \u4e8b\u4ef6\u7684\u53d1\u9001\u548c\u76d1\u542c\npublic class CounterModel : AbstractModel, ICounterModel\n{\n    public void IncrementCount()\n    {\n        Count.Value++;\n        // \u53d1\u9001\u5f3a\u7c7b\u578b\u4e8b\u4ef6\n        this.SendEvent&lt;CountChangedEvent&gt;(new CountChangedEvent(Count.Value));\n    }\n}\n\npublic class AchievementSystem : AbstractSystem, IAchievementSystem\n{\n    protected override void OnInit()\n    {\n        // \u76d1\u542c\u5f3a\u7c7b\u578b\u4e8b\u4ef6\n        this.RegisterEvent&lt;CountChangedEvent&gt;(OnCountChanged);\n    }\n\n    private void OnCountChanged(CountChangedEvent e)\n    {\n        if (e.NewCount &gt;= 100)\n        {\n            UnlockAchievement(\"Master Counter\");\n        }\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#BindableProperty-\u7684\u6570\u636e\u7ed1\u5b9a","title":"BindableProperty \u7684\u6570\u636e\u7ed1\u5b9a","text":"<p>QFramework \u7684 BindableProperty \u63d0\u4f9b\u4e86\u54cd\u5e94\u5f0f\u7684\u6570\u636e\u7ed1\u5b9a\u673a\u5236\uff1a</p> <pre><code>// \u2705 \u54cd\u5e94\u5f0f\u6570\u636e\u7ed1\u5b9a\npublic class PlayerHealthUI : MonoBehaviour, IController\n{\n    [SerializeField] private Slider healthSlider;\n    [SerializeField] private Text healthText;\n\n    private IPlayerModel playerModel;\n\n    void Start()\n    {\n        playerModel = this.GetModel&lt;IPlayerModel&gt;();\n\n        // \u6570\u636e\u7ed1\u5b9a\uff1a\u81ea\u52a8\u540c\u6b65 UI\n        playerModel.Health.RegisterWithInitValue(health =&gt; \n        {\n            healthSlider.value = health / playerModel.MaxHealth.Value;\n            healthText.text = $\"{health}/{playerModel.MaxHealth.Value}\";\n        }).UnRegisterWhenGameObjectDestroyed(gameObject);\n\n        // \u591a\u4e2a\u5c5e\u6027\u7ec4\u5408\u7ed1\u5b9a\n        playerModel.Health.CombineLatest(playerModel.MaxHealth, (h, max) =&gt; \n        {\n            return new { Health = h, MaxHealth = max };\n        }).Register(data =&gt; \n        {\n            healthSlider.value = (float)data.Health / data.MaxHealth;\n            healthText.text = $\"{data.Health}/{data.MaxHealth}\";\n        }).UnRegisterWhenGameObjectDestroyed(gameObject);\n    }\n\n    public IArchitecture GetArchitecture() =&gt; GameApp.Interface;\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u6a21\u5757\u5316\u8bbe\u8ba1\u5b9e\u8df5","title":"QFramework \u6a21\u5757\u5316\u8bbe\u8ba1\u5b9e\u8df5","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u53ef\u63d2\u62d4\u7684\u6a21\u5757\u7cfb\u7edf","title":"\u53ef\u63d2\u62d4\u7684\u6a21\u5757\u7cfb\u7edf","text":"<p>QFramework \u652f\u6301\u6a21\u5757\u5316\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u90fd\u53ef\u4ee5\u72ec\u7acb\u5f00\u53d1\u548c\u6d4b\u8bd5\uff1a</p> <pre><code>// \u2705 \u6a21\u5757\u5316\u7684\u7cfb\u7edf\u8bbe\u8ba1\npublic interface IInventorySystem : ISystem\n{\n    void AddItem(string itemId, int count);\n    void RemoveItem(string itemId, int count);\n    int GetItemCount(string itemId);\n    event System.Action&lt;string, int&gt; OnItemAdded;\n    event System.Action&lt;string, int&gt; OnItemRemoved;\n}\n\npublic class InventorySystem : AbstractSystem, IInventorySystem\n{\n    private Dictionary&lt;string, int&gt; items = new Dictionary&lt;string, int&gt;();\n\n    public event System.Action&lt;string, int&gt; OnItemAdded;\n    public event System.Action&lt;string, int&gt; OnItemRemoved;\n\n    protected override void OnInit()\n    {\n        // \u4ece\u5b58\u50a8\u4e2d\u52a0\u8f7d\u7269\u54c1\u6570\u636e\n        var storage = this.GetUtility&lt;IStorageUtility&gt;();\n        LoadItemsFromStorage(storage);\n    }\n\n    public void AddItem(string itemId, int count)\n    {\n        if (!items.ContainsKey(itemId))\n            items[itemId] = 0;\n\n        items[itemId] += count;\n        OnItemAdded?.Invoke(itemId, count);\n\n        // \u53d1\u9001\u4e8b\u4ef6\u7ed9\u5176\u4ed6\u7cfb\u7edf\n        this.SendEvent&lt;ItemAddedEvent&gt;(new ItemAddedEvent(itemId, count));\n    }\n\n    // ... \u5176\u4ed6\u65b9\u6cd5\u5b9e\u73b0\n}\n\n// \u2705 \u7cfb\u7edf\u95f4\u7684\u534f\u4f5c\npublic class ShopSystem : AbstractSystem, IShopSystem\n{\n    protected override void OnInit()\n    {\n        // \u76d1\u542c\u5e93\u5b58\u53d8\u5316\n        this.RegisterEvent&lt;ItemAddedEvent&gt;(OnItemAdded);\n    }\n\n    private void OnItemAdded(ItemAddedEvent e)\n    {\n        // \u68c0\u67e5\u662f\u5426\u89e3\u9501\u65b0\u5546\u54c1\n        CheckUnlockNewItems(e.ItemId);\n    }\n\n    public bool PurchaseItem(string itemId, int price)\n    {\n        var playerModel = this.GetModel&lt;IPlayerModel&gt;();\n        var inventorySystem = this.GetSystem&lt;IInventorySystem&gt;();\n\n        if (playerModel.Coins.Value &gt;= price)\n        {\n            // \u901a\u8fc7 Command \u6267\u884c\u8d2d\u4e70\u903b\u8f91\n            this.SendCommand&lt;PurchaseItemCommand&gt;(new PurchaseItemCommand(itemId, price));\n            return true;\n        }\n\n        return false;\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5e94\u7528","title":"QFramework \u8bbe\u8ba1\u6a21\u5f0f\u7684\u5e94\u7528","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#Command-\u6a21\u5f0f\u7684\u6df1\u5ea6\u5e94\u7528","title":"Command \u6a21\u5f0f\u7684\u6df1\u5ea6\u5e94\u7528","text":"<p>QFramework \u7684 Command \u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u547d\u4ee4\u6a21\u5f0f\uff0c\u8fd8\u652f\u6301\u64a4\u9500\u3001\u91cd\u505a\u7b49\u9ad8\u7ea7\u529f\u80fd\uff1a</p> <pre><code>// \u2705 \u652f\u6301\u64a4\u9500\u7684 Command\npublic interface IUndoableCommand : ICommand\n{\n    void Undo();\n    bool CanUndo { get; }\n}\n\npublic class MovePlayerCommand : AbstractCommand, IUndoableCommand\n{\n    private Vector3 fromPosition;\n    private Vector3 toPosition;\n    private Transform playerTransform;\n\n    public bool CanUndo =&gt; true;\n\n    public MovePlayerCommand(Vector3 to)\n    {\n        toPosition = to;\n    }\n\n    protected override void OnExecute()\n    {\n        var playerModel = this.GetModel&lt;IPlayerModel&gt;();\n        playerTransform = playerModel.PlayerTransform;\n        fromPosition = playerTransform.position;\n\n        playerTransform.position = toPosition;\n        playerModel.Position.Value = toPosition;\n    }\n\n    public void Undo()\n    {\n        if (playerTransform != null)\n        {\n            playerTransform.position = fromPosition;\n            var playerModel = this.GetModel&lt;IPlayerModel&gt;();\n            playerModel.Position.Value = fromPosition;\n        }\n    }\n}\n\n// \u2705 Command \u5386\u53f2\u7ba1\u7406\npublic class CommandHistory : IUtility\n{\n    private Stack&lt;IUndoableCommand&gt; undoStack = new Stack&lt;IUndoableCommand&gt;();\n    private Stack&lt;IUndoableCommand&gt; redoStack = new Stack&lt;IUndoableCommand&gt;();\n\n    public void ExecuteCommand(IUndoableCommand command)\n    {\n        command.Execute();\n        undoStack.Push(command);\n        redoStack.Clear(); // \u6267\u884c\u65b0\u547d\u4ee4\u65f6\u6e05\u7a7a\u91cd\u505a\u6808\n    }\n\n    public bool CanUndo =&gt; undoStack.Count &gt; 0;\n    public bool CanRedo =&gt; redoStack.Count &gt; 0;\n\n    public void Undo()\n    {\n        if (CanUndo)\n        {\n            var command = undoStack.Pop();\n            command.Undo();\n            redoStack.Push(command);\n        }\n    }\n\n    public void Redo()\n    {\n        if (CanRedo)\n        {\n            var command = redoStack.Pop();\n            command.Execute();\n            undoStack.Push(command);\n        }\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7ec4\u5408\u6a21\u5f0f\u5728-QFramework-\u4e2d\u7684\u5e94\u7528","title":"\u7ec4\u5408\u6a21\u5f0f\u5728 QFramework \u4e2d\u7684\u5e94\u7528","text":"<p>QFramework \u652f\u6301 Command \u7684\u7ec4\u5408\uff0c\u53ef\u4ee5\u6784\u5efa\u590d\u6742\u7684\u547d\u4ee4\u5e8f\u5217\uff1a</p> <pre><code>// \u2705 \u590d\u5408 Command\npublic class CompositeCommand : AbstractCommand\n{\n    private List&lt;ICommand&gt; commands = new List&lt;ICommand&gt;();\n\n    public CompositeCommand Add(ICommand command)\n    {\n        commands.Add(command);\n        return this;\n    }\n\n    protected override void OnExecute()\n    {\n        foreach (var command in commands)\n        {\n            command.Execute();\n        }\n    }\n}\n\n// \u4f7f\u7528\u793a\u4f8b\uff1a\u73a9\u5bb6\u5347\u7ea7\u7684\u590d\u5408\u64cd\u4f5c\npublic class PlayerLevelUpCommand : AbstractCommand\n{\n    protected override void OnExecute()\n    {\n        var compositeCommand = new CompositeCommand()\n            .Add(new IncreaseLevelCommand())\n            .Add(new AddAttributePointsCommand(5))\n            .Add(new PlayLevelUpEffectCommand())\n            .Add(new SavePlayerDataCommand());\n\n        compositeCommand.Execute();\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u7684\u6027\u80fd\u4f18\u5316\u8bbe\u8ba1","title":"QFramework \u7684\u6027\u80fd\u4f18\u5316\u8bbe\u8ba1","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5bf9\u8c61\u6c60\u5728-QFramework-\u4e2d\u7684\u5e94\u7528","title":"\u5bf9\u8c61\u6c60\u5728 QFramework \u4e2d\u7684\u5e94\u7528","text":"<p>QFramework \u5185\u7f6e\u4e86\u5bf9\u8c61\u6c60\u673a\u5236\uff0c\u51cf\u5c11 GC \u538b\u529b\uff1a</p> <pre><code>// \u2705 QFramework \u7684\u5bf9\u8c61\u6c60\u8bbe\u8ba1\npublic class PoolableCommand : AbstractCommand, IPoolable\n{\n    private bool isRecycled = false;\n\n    public bool IsRecycled { get =&gt; isRecycled; set =&gt; isRecycled = value; }\n\n    protected override void OnExecute()\n    {\n        // \u6267\u884c\u547d\u4ee4\u903b\u8f91\n        DoExecute();\n\n        // \u81ea\u52a8\u56de\u6536\u5230\u5bf9\u8c61\u6c60\n        this.Recycle2Cache();\n    }\n\n    protected virtual void DoExecute() { }\n\n    public void OnRecycled()\n    {\n        // \u91cd\u7f6e\u72b6\u6001\n        ResetState();\n    }\n\n    protected virtual void ResetState() { }\n}\n\n// \u4f7f\u7528\u5bf9\u8c61\u6c60\u7684 Command\npublic class DamageCommand : PoolableCommand\n{\n    private GameObject target;\n    private float damage;\n\n    public static DamageCommand Allocate(GameObject target, float damage)\n    {\n        var command = SafeObjectPool&lt;DamageCommand&gt;.Instance.Allocate();\n        command.target = target;\n        command.damage = damage;\n        return command;\n    }\n\n    protected override void DoExecute()\n    {\n        var health = target.GetComponent&lt;HealthComponent&gt;();\n        health?.TakeDamage(damage);\n    }\n\n    protected override void ResetState()\n    {\n        target = null;\n        damage = 0;\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5b9e\u8df5\u5efa\u8bae\u548c\u7ecf\u9a8c\u603b\u7ed3","title":"\u5b9e\u8df5\u5efa\u8bae\u548c\u7ecf\u9a8c\u603b\u7ed3","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u6e10\u8fdb\u5f0f\u67b6\u6784\u6f14\u8fdb","title":"\u6e10\u8fdb\u5f0f\u67b6\u6784\u6f14\u8fdb","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u6e10\u8fdb\u5f0f\u5f15\u5165\u7b56\u7565","title":"QFramework \u6e10\u8fdb\u5f0f\u5f15\u5165\u7b56\u7565","text":"<p>QFramework \u7684\u4e00\u4e2a\u7a81\u51fa\u4f18\u52bf\u662f\u652f\u6301\u6e10\u8fdb\u5f0f\u5f15\u5165\uff0c\u4e0d\u9700\u8981\u4e00\u6b21\u6027\u91cd\u6784\u6574\u4e2a\u9879\u76ee\uff1a</p> \u5f15\u5165\u9636\u6bb5 \u5f15\u5165\u5185\u5bb9 \u6539\u52a8\u6210\u672c \u83b7\u5f97\u6548\u76ca \u7b2c\u4e00\u9636\u6bb5 BindableProperty + \u4e8b\u4ef6\u7cfb\u7edf \u5c0f \u6570\u636e\u7ed1\u5b9a\u3001\u54cd\u5e94\u5f0f UI \u7b2c\u4e8c\u9636\u6bb5 IModel + IController \u4e2d \u6570\u636e\u5c42\u5206\u79bb\u3001\u67b6\u6784\u6e05\u6670 \u7b2c\u4e09\u9636\u6bb5 Command \u6a21\u5f0f \u4e2d \u4ea4\u4e92\u903b\u8f91\u89e3\u8026\u3001\u53ef\u64a4\u9500\u64cd\u4f5c \u7b2c\u56db\u9636\u6bb5 ISystem + \u5168\u5957\u67b6\u6784 \u5927 \u5b8c\u6574\u67b6\u6784\u4f53\u7cfb\u3001\u6a21\u5757\u5316\u5f00\u53d1 <pre><code>// \u2705 \u9636\u6bb5\u4e00\uff1a\u53ea\u4f7f\u7528 BindableProperty\npublic class SimpleCounterController : MonoBehaviour\n{\n    [SerializeField] private Button incrementBtn;\n    [SerializeField] private Text countText;\n\n    // \u76f4\u63a5\u4f7f\u7528 BindableProperty\uff0c\u65e0\u9700\u67b6\u6784\n    private BindableProperty&lt;int&gt; count = new BindableProperty&lt;int&gt;(0);\n\n    void Start()\n    {\n        // \u6570\u636e\u7ed1\u5b9a\n        count.RegisterWithInitValue(value =&gt; \n        {\n            countText.text = value.ToString();\n        });\n\n        incrementBtn.onClick.AddListener(() =&gt; \n        {\n            count.Value++;\n        });\n    }\n}\n\n// \u2705 \u9636\u6bb5\u4e8c\uff1a\u5f15\u5165 Model \u548c Controller\npublic class CounterModel\n{\n    public BindableProperty&lt;int&gt; Count { get; } = new BindableProperty&lt;int&gt;(0);\n\n    public void Increment() =&gt; Count.Value++;\n    public void Decrement() =&gt; Count.Value--;\n}\n\npublic class CounterController : MonoBehaviour\n{\n    [SerializeField] private Button incrementBtn;\n    [SerializeField] private Button decrementBtn;\n    [SerializeField] private Text countText;\n\n    private CounterModel model;\n\n    void Start()\n    {\n        model = new CounterModel();\n\n        model.Count.RegisterWithInitValue(OnCountChanged);\n\n        incrementBtn.onClick.AddListener(model.Increment);\n        decrementBtn.onClick.AddListener(model.Decrement);\n    }\n\n    void OnCountChanged(int newCount)\n    {\n        countText.text = newCount.ToString();\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u5728\u5927\u578b\u9879\u76ee\u4e2d\u7684\u5e94\u7528\u6848\u4f8b","title":"QFramework \u5728\u5927\u578b\u9879\u76ee\u4e2d\u7684\u5e94\u7528\u6848\u4f8b","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u590d\u6742\u6e38\u620f\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1","title":"\u590d\u6742\u6e38\u620f\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1","text":"<p>\u4ee5\u4e00\u4e2a RPG \u6e38\u620f\u4e3a\u4f8b\uff0c\u5c55\u793a QFramework \u5982\u4f55\u652f\u6301\u590d\u6742\u7684\u6e38\u620f\u7cfb\u7edf\uff1a</p> <pre><code>graph TD\n    A[RPGGameApp&lt;br/&gt;\u6e38\u620f\u67b6\u6784] --&gt; B[IPlayerModel&lt;br/&gt;\u73a9\u5bb6\u6570\u636e]\n    A --&gt; C[IInventoryModel&lt;br/&gt;\u80cc\u5305\u6570\u636e]\n    A --&gt; D[IQuestModel&lt;br/&gt;\u4efb\u52a1\u6570\u636e]\n\n    A --&gt; E[IBattleSystem&lt;br/&gt;\u6218\u6597\u7cfb\u7edf]\n    A --&gt; F[IQuestSystem&lt;br/&gt;\u4efb\u52a1\u7cfb\u7edf]\n    A --&gt; G[IAchievementSystem&lt;br/&gt;\u6210\u5c31\u7cfb\u7edf]\n\n    A --&gt; H[IGameplayController&lt;br/&gt;\u6e38\u620f\u63a7\u5236]\n    A --&gt; I[IUIController&lt;br/&gt;\u754c\u9762\u63a7\u5236]\n    A --&gt; J[IInputController&lt;br/&gt;\u8f93\u5165\u63a7\u5236]</code></pre> <pre><code>// \u2705 RPG \u6e38\u620f\u7684\u6a21\u5757\u5316\u67b6\u6784\npublic class RPGGameApp : Architecture&lt;RPGGameApp&gt;\n{\n    protected override void Init()\n    {\n        // \u6570\u636e\u5c42\n        this.RegisterModel&lt;IPlayerModel&gt;(new PlayerModel());\n        this.RegisterModel&lt;IInventoryModel&gt;(new InventoryModel());\n        this.RegisterModel&lt;IQuestModel&gt;(new QuestModel());\n        this.RegisterModel&lt;ISkillModel&gt;(new SkillModel());\n\n        // \u7cfb\u7edf\u5c42\n        this.RegisterSystem&lt;IBattleSystem&gt;(new BattleSystem());\n        this.RegisterSystem&lt;IQuestSystem&gt;(new QuestSystem());\n        this.RegisterSystem&lt;IAchievementSystem&gt;(new AchievementSystem());\n        this.RegisterSystem&lt;ISaveSystem&gt;(new SaveSystem());\n\n        // \u5de5\u5177\u5c42\n        this.RegisterUtility&lt;IStorageUtility&gt;(new JsonStorageUtility());\n        this.RegisterUtility&lt;ITimeUtility&gt;(new UnityTimeUtility());\n        this.RegisterUtility&lt;IRandomUtility&gt;(new SystemRandomUtility());\n    }\n}\n\n// \u2705 \u7cfb\u7edf\u95f4\u7684\u534f\u4f5c\u793a\u4f8b\uff1a\u6218\u6597\u7cfb\u7edf\npublic class BattleSystem : AbstractSystem, IBattleSystem\n{\n    private IPlayerModel playerModel;\n    private IInventoryModel inventoryModel;\n    private IQuestSystem questSystem;\n\n    protected override void OnInit()\n    {\n        playerModel = this.GetModel&lt;IPlayerModel&gt;();\n        inventoryModel = this.GetModel&lt;IInventoryModel&gt;();\n        questSystem = this.GetSystem&lt;IQuestSystem&gt;();\n\n        // \u76d1\u542c\u654c\u4eba\u6b7b\u4ea1\u4e8b\u4ef6\n        this.RegisterEvent&lt;EnemyDefeatedEvent&gt;(OnEnemyDefeated);\n    }\n\n    public void AttackEnemy(EnemyData enemy)\n    {\n        var damage = CalculateDamage(playerModel, enemy);\n\n        // \u6267\u884c\u653b\u51fb\u547d\u4ee4\n        this.SendCommand&lt;DealDamageCommand&gt;(new DealDamageCommand(enemy, damage));\n    }\n\n    private void OnEnemyDefeated(EnemyDefeatedEvent e)\n    {\n        // \u83b7\u5f97\u7ecf\u9a8c\u503c\n        var expGained = e.Enemy.ExperienceReward;\n        this.SendCommand&lt;GainExperienceCommand&gt;(new GainExperienceCommand(expGained));\n\n        // \u83b7\u5f97\u6218\u5229\u54c1\n        var loot = GenerateLoot(e.Enemy);\n        foreach (var item in loot)\n        {\n            this.SendCommand&lt;AddItemCommand&gt;(new AddItemCommand(item.Id, item.Quantity));\n        }\n\n        // \u901a\u77e5\u4efb\u52a1\u7cfb\u7edf\n        questSystem.OnEnemyKilled(e.Enemy.Type);\n    }\n\n    private float CalculateDamage(IPlayerModel player, EnemyData enemy)\n    {\n        var baseDamage = player.Attack.Value;\n        var weaponDamage = GetEquippedWeaponDamage();\n        var skillMultiplier = GetSkillMultiplier();\n\n        return (baseDamage + weaponDamage) * skillMultiplier;\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u590d\u6742-UI-\u7cfb\u7edf\u7684\u67b6\u6784\u8bbe\u8ba1","title":"\u590d\u6742 UI \u7cfb\u7edf\u7684\u67b6\u6784\u8bbe\u8ba1","text":"<p>QFramework \u5728 UI \u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u5c55\u793a\u4e86\u5176\u5728\u590d\u6742\u754c\u9762\u7ba1\u7406\u4e2d\u7684\u4f18\u52bf\uff1a</p> <pre><code>// \u2705 \u6570\u636e\u9a71\u52a8\u7684 UI \u8bbe\u8ba1\npublic class InventoryPanel : UIPanel, IController\n{\n    [Header(\"UI \u5f15\u7528\")]\n    [SerializeField] private Transform itemContainer;\n    [SerializeField] private InventoryItemView itemPrefab;\n    [SerializeField] private Button sortButton;\n    [SerializeField] private Text capacityText;\n\n    private IInventoryModel inventoryModel;\n    private List&lt;InventoryItemView&gt; itemViews = new List&lt;InventoryItemView&gt;();\n\n    void Start()\n    {\n        inventoryModel = this.GetModel&lt;IInventoryModel&gt;();\n\n        // \u76d1\u542c\u6570\u636e\u53d8\u5316\n        inventoryModel.Items.RegisterWithInitValue(OnItemsChanged)\n            .UnRegisterWhenGameObjectDestroyed(gameObject);\n\n        inventoryModel.Capacity.RegisterWithInitValue(OnCapacityChanged)\n            .UnRegisterWhenGameObjectDestroyed(gameObject);\n\n        // UI \u4e8b\u4ef6\u7ed1\u5b9a\n        sortButton.onClick.AddListener(() =&gt; \n        {\n            this.SendCommand&lt;SortInventoryCommand&gt;();\n        });\n\n        // \u76d1\u542c\u7269\u54c1\u53d8\u5316\u4e8b\u4ef6\n        this.RegisterEvent&lt;ItemUsedEvent&gt;(OnItemUsed);\n    }\n\n    private void OnItemsChanged(List&lt;ItemData&gt; items)\n    {\n        // \u6e05\u7406\u65e7\u7684 UI\n        foreach (var view in itemViews)\n        {\n            if (view != null)\n                Destroy(view.gameObject);\n        }\n        itemViews.Clear();\n\n        // \u521b\u5efa\u65b0\u7684 UI\n        foreach (var item in items)\n        {\n            var itemView = Instantiate(itemPrefab, itemContainer);\n            itemView.SetData(item);\n            itemView.OnItemClicked += (clickedItem) =&gt; \n            {\n                this.SendCommand&lt;UseItemCommand&gt;(new UseItemCommand(clickedItem.Id));\n            };\n            itemViews.Add(itemView);\n        }\n    }\n\n    private void OnCapacityChanged(int capacity)\n    {\n        var currentCount = inventoryModel.Items.Value.Count;\n        capacityText.text = $\"{currentCount}/{capacity}\";\n\n        // \u5bb9\u91cf\u8b66\u544a\n        if (currentCount &gt;= capacity * 0.9f)\n        {\n            capacityText.color = Color.red;\n        }\n        else if (currentCount &gt;= capacity * 0.7f)\n        {\n            capacityText.color = Color.yellow;\n        }\n        else\n        {\n            capacityText.color = Color.white;\n        }\n    }\n\n    private void OnItemUsed(ItemUsedEvent e)\n    {\n        // \u64ad\u653e\u4f7f\u7528\u7269\u54c1\u7684\u7279\u6548\n        PlayItemUseEffect(e.ItemId);\n    }\n\n    public IArchitecture GetArchitecture() =&gt; RPGGameApp.Interface;\n}\n\n// \u2705 \u53ef\u590d\u7528\u7684\u7269\u54c1\u89c6\u56fe\u7ec4\u4ef6\npublic class InventoryItemView : MonoBehaviour\n{\n    [SerializeField] private Image iconImage;\n    [SerializeField] private Text nameText;\n    [SerializeField] private Text quantityText;\n    [SerializeField] private Button useButton;\n\n    public event System.Action&lt;ItemData&gt; OnItemClicked;\n\n    private ItemData itemData;\n\n    void Start()\n    {\n        useButton.onClick.AddListener(() =&gt; \n        {\n            OnItemClicked?.Invoke(itemData);\n        });\n    }\n\n    public void SetData(ItemData data)\n    {\n        itemData = data;\n        iconImage.sprite = data.Icon;\n        nameText.text = data.Name;\n        quantityText.text = data.Quantity &gt; 1 ? data.Quantity.ToString() : \"\";\n\n        // \u6839\u636e\u7269\u54c1\u7c7b\u578b\u8bbe\u7f6e\u4e0d\u540c\u7684\u663e\u793a\u72b6\u6001\n        useButton.interactable = data.IsUsable;\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u7684\u6027\u80fd\u4f18\u5316\u6700\u4f73\u5b9e\u8df5","title":"QFramework \u7684\u6027\u80fd\u4f18\u5316\u6700\u4f73\u5b9e\u8df5","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u4e8b\u4ef6\u7cfb\u7edf\u7684\u6027\u80fd\u4f18\u5316","title":"\u4e8b\u4ef6\u7cfb\u7edf\u7684\u6027\u80fd\u4f18\u5316","text":"<p>QFramework \u7684\u4e8b\u4ef6\u7cfb\u7edf\u5728\u5927\u91cf\u4e8b\u4ef6\u76d1\u542c\u548c\u53d1\u9001\u65f6\u7684\u6027\u80fd\u4f18\u5316\uff1a</p> <pre><code>// \u2705 \u4f18\u5316\u7684\u4e8b\u4ef6\u5904\u7406\npublic class OptimizedEventSystem : MonoBehaviour\n{\n    // \u4f7f\u7528\u5bf9\u8c61\u6c60\u51cf\u5c11 GC\n    private static readonly ObjectPool&lt;List&lt;System.Action&gt;&gt; ActionListPool = \n        new ObjectPool&lt;List&lt;System.Action&gt;&gt;(() =&gt; new List&lt;System.Action&gt;(), null, l =&gt; l.Clear());\n\n    void Start()\n    {\n        // \u6279\u91cf\u4e8b\u4ef6\u5904\u7406\n        var actions = ActionListPool.Get();\n\n        // \u6536\u96c6\u6240\u6709\u9700\u8981\u6267\u884c\u7684\u4e8b\u4ef6\n        CollectPendingEvents(actions);\n\n        // \u6279\u91cf\u6267\u884c\n        foreach (var action in actions)\n        {\n            action?.Invoke();\n        }\n\n        // \u56de\u6536\u5bf9\u8c61\n        ActionListPool.Release(actions);\n    }\n\n    // \u2705 \u6309\u9700\u52a0\u8f7d\u7684\u4e8b\u4ef6\u76d1\u542c\n    private readonly Dictionary&lt;System.Type, bool&gt; eventSubscriptions = new Dictionary&lt;System.Type, bool&gt;();\n\n    private void RegisterEventOnDemand&lt;T&gt;(System.Action&lt;T&gt; handler) where T : struct\n    {\n        var eventType = typeof(T);\n\n        if (!eventSubscriptions.ContainsKey(eventType))\n        {\n            this.RegisterEvent&lt;T&gt;(handler);\n            eventSubscriptions[eventType] = true;\n        }\n    }\n\n    // \u2705 \u6309\u533a\u57df\u7684\u4e8b\u4ef6\u7ba1\u7406\n    public class RegionalEventManager : IUtility\n    {\n        private readonly Dictionary&lt;string, HashSet&lt;IController&gt;&gt; regionControllers = new Dictionary&lt;string, HashSet&lt;IController&gt;&gt;();\n\n        public void RegisterControllerToRegion(string region, IController controller)\n        {\n            if (!regionControllers.ContainsKey(region))\n                regionControllers[region] = new HashSet&lt;IController&gt;();\n\n            regionControllers[region].Add(controller);\n        }\n\n        public void SendEventToRegion&lt;T&gt;(string region, T eventData) where T : struct\n        {\n            if (regionControllers.TryGetValue(region, out var controllers))\n            {\n                foreach (var controller in controllers)\n                {\n                    // \u53ea\u5411\u7279\u5b9a\u533a\u57df\u7684\u63a7\u5236\u5668\u53d1\u9001\u4e8b\u4ef6\n                    if (controller is MonoBehaviour mb &amp;&amp; mb != null)\n                    {\n                        // \u53d1\u9001\u4e8b\u4ef6\u7684\u903b\u8f91\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5185\u5b58\u7ba1\u7406\u7684\u6700\u4f73\u5b9e\u8df5","title":"\u5185\u5b58\u7ba1\u7406\u7684\u6700\u4f73\u5b9e\u8df5","text":"<pre><code>// \u2705 QFramework \u4e2d\u7684\u5185\u5b58\u4f18\u5316\u6280\u5de7\npublic class MemoryOptimizedModel : AbstractModel, IDisposable\n{\n    // \u4f7f\u7528\u7ed3\u6784\u4f53\u51cf\u5c11\u5806\u5185\u5b58\u5206\u914d\n    public struct PlayerState\n    {\n        public int Health;\n        public int Mana;\n        public Vector3 Position;\n        public bool IsAlive;\n    }\n\n    private readonly BindableProperty&lt;PlayerState&gt; playerState = new BindableProperty&lt;PlayerState&gt;();\n\n    // \u7f13\u5b58\u9891\u7e41\u8ba1\u7b97\u7684\u7ed3\u679c\n    private readonly Dictionary&lt;string, float&gt; cachedCalculations = new Dictionary&lt;string, float&gt;();\n    private float lastCalculationTime;\n\n    public float GetDamageMultiplier()\n    {\n        const string cacheKey = \"damageMultiplier\";\n\n        // \u7f13\u5b58 1 \u79d2\u949f\u5185\u7684\u8ba1\u7b97\u7ed3\u679c\n        if (Time.time - lastCalculationTime &lt; 1f &amp;&amp; cachedCalculations.ContainsKey(cacheKey))\n        {\n            return cachedCalculations[cacheKey];\n        }\n\n        var multiplier = CalculateDamageMultiplier();\n        cachedCalculations[cacheKey] = multiplier;\n        lastCalculationTime = Time.time;\n\n        return multiplier;\n    }\n\n    private float CalculateDamageMultiplier()\n    {\n        // \u590d\u6742\u7684\u8ba1\u7b97\u903b\u8f91\n        return 1.0f;\n    }\n\n    public void Dispose()\n    {\n        cachedCalculations.Clear();\n        playerState?.Dispose();\n    }\n}\n\n// \u2705 \u61d2\u52a0\u8f7d\u7684\u6570\u636e\u7ba1\u7406\npublic class LazyLoadedDataModel : AbstractModel\n{\n    private readonly Dictionary&lt;string, WeakReference&gt; dataCache = new Dictionary&lt;string, WeakReference&gt;();\n\n    public T GetData&lt;T&gt;(string key, System.Func&lt;T&gt; factory) where T : class\n    {\n        if (dataCache.TryGetValue(key, out var weakRef) &amp;&amp; weakRef.IsAlive)\n        {\n            return weakRef.Target as T;\n        }\n\n        var data = factory();\n        dataCache[key] = new WeakReference(data);\n        return data;\n    }\n\n    // \u5b9a\u671f\u6e05\u7406\u5df2\u7ecf\u88ab GC \u7684\u5f31\u5f15\u7528\n    public void CleanupWeakReferences()\n    {\n        var keysToRemove = new List&lt;string&gt;();\n\n        foreach (var kvp in dataCache)\n        {\n            if (!kvp.Value.IsAlive)\n            {\n                keysToRemove.Add(kvp.Key);\n            }\n        }\n\n        foreach (var key in keysToRemove)\n        {\n            dataCache.Remove(key);\n        }\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u7684\u6d4b\u8bd5\u548c\u8c03\u8bd5\u6700\u4f73\u5b9e\u8df5","title":"QFramework \u7684\u6d4b\u8bd5\u548c\u8c03\u8bd5\u6700\u4f73\u5b9e\u8df5","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u53ef\u6d4b\u8bd5\u6027\u8bbe\u8ba1","title":"\u53ef\u6d4b\u8bd5\u6027\u8bbe\u8ba1","text":"<p>QFramework \u7684\u5206\u5c42\u67b6\u6784\u5929\u7136\u652f\u6301\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\uff1a</p> <pre><code>// \u2705 Model \u5c42\u7684\u5355\u5143\u6d4b\u8bd5\n[TestFixture]\npublic class CounterModelTests\n{\n    private CounterModel model;\n    private TestArchitecture architecture;\n\n    [SetUp]\n    public void Setup()\n    {\n        architecture = new TestArchitecture();\n        model = new CounterModel();\n        model.SetArchitecture(architecture);\n        model.Init();\n    }\n\n    [Test]\n    public void IncrementCount_ShouldIncreaseByOne()\n    {\n        // Arrange\n        var initialCount = model.Count.Value;\n\n        // Act\n        model.IncrementCount();\n\n        // Assert\n        Assert.AreEqual(initialCount + 1, model.Count.Value);\n    }\n\n    [Test]\n    public void IncrementCount_ShouldSendEvent()\n    {\n        // Arrange\n        bool eventReceived = false;\n        CountChangedEvent receivedEvent = default;\n\n        architecture.RegisterEvent&lt;CountChangedEvent&gt;(e =&gt; \n        {\n            eventReceived = true;\n            receivedEvent = e;\n        });\n\n        // Act\n        model.IncrementCount();\n\n        // Assert\n        Assert.IsTrue(eventReceived);\n        Assert.AreEqual(model.Count.Value, receivedEvent.NewCount);\n    }\n\n    [TearDown]\n    public void TearDown()\n    {\n        model = null;\n        architecture.Deinit();\n    }\n}\n\n// \u2705 \u6d4b\u8bd5\u7528\u7684\u6a21\u62df\u67b6\u6784\npublic class TestArchitecture : IArchitecture\n{\n    private readonly Dictionary&lt;Type, object&gt; models = new Dictionary&lt;Type, object&gt;();\n    private readonly Dictionary&lt;Type, object&gt; systems = new Dictionary&lt;Type, object&gt;();\n    private readonly Dictionary&lt;Type, object&gt; utilities = new Dictionary&lt;Type, object&gt;();\n\n    public T GetModel&lt;T&gt;() where T : class, IModel\n    {\n        return models.TryGetValue(typeof(T), out var model) ? model as T : null;\n    }\n\n    public T GetSystem&lt;T&gt;() where T : class, ISystem\n    {\n        return systems.TryGetValue(typeof(T), out var system) ? system as T : null;\n    }\n\n    public T GetUtility&lt;T&gt;() where T : class, IUtility\n    {\n        return utilities.TryGetValue(typeof(T), out var utility) ? utility as T : null;\n    }\n\n    public void RegisterModel&lt;T&gt;(T model) where T : class, IModel\n    {\n        models[typeof(T)] = model;\n    }\n\n    public void RegisterSystem&lt;T&gt;(T system) where T : class, ISystem\n    {\n        systems[typeof(T)] = system;\n    }\n\n    public void RegisterUtility&lt;T&gt;(T utility) where T : class, IUtility\n    {\n        utilities[typeof(T)] = utility;\n    }\n\n    public void SendCommand&lt;T&gt;() where T : ICommand, new()\n    {\n        var command = new T();\n        command.SetArchitecture(this);\n        command.Execute();\n    }\n\n    public void SendCommand&lt;T&gt;(T command) where T : ICommand\n    {\n        command.SetArchitecture(this);\n        command.Execute();\n    }\n\n    public void RegisterEvent&lt;T&gt;(Action&lt;T&gt; onEvent)\n    {\n        // \u6d4b\u8bd5\u4e8b\u4ef6\u6ce8\u518c\u903b\u8f91\n    }\n\n    public void UnRegisterEvent&lt;T&gt;(Action&lt;T&gt; onEvent)\n    {\n        // \u6d4b\u8bd5\u4e8b\u4ef6\u53d6\u6d88\u6ce8\u518c\u903b\u8f91\n    }\n\n    public void SendEvent&lt;T&gt;(T e)\n    {\n        // \u6d4b\u8bd5\u4e8b\u4ef6\u53d1\u9001\u903b\u8f91\n    }\n\n    public void Deinit()\n    {\n        models.Clear();\n        systems.Clear();\n        utilities.Clear();\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#Command-\u7684\u96c6\u6210\u6d4b\u8bd5","title":"Command \u7684\u96c6\u6210\u6d4b\u8bd5","text":"<pre><code>// \u2705 Command \u7684\u96c6\u6210\u6d4b\u8bd5\n[TestFixture]\npublic class PurchaseItemCommandTests\n{\n    private TestArchitecture architecture;\n    private IPlayerModel playerModel;\n    private IInventoryModel inventoryModel;\n    private IShopSystem shopSystem;\n\n    [SetUp]\n    public void Setup()\n    {\n        architecture = new TestArchitecture();\n\n        // \u6a21\u62df\u4f9d\u8d56\n        playerModel = new MockPlayerModel();\n        inventoryModel = new MockInventoryModel();\n        shopSystem = new MockShopSystem();\n\n        architecture.RegisterModel&lt;IPlayerModel&gt;(playerModel);\n        architecture.RegisterModel&lt;IInventoryModel&gt;(inventoryModel);\n        architecture.RegisterSystem&lt;IShopSystem&gt;(shopSystem);\n    }\n\n    [Test]\n    public void PurchaseItem_WithSufficientCoins_ShouldSucceed()\n    {\n        // Arrange\n        playerModel.Coins.Value = 100;\n        var itemId = \"sword\";\n        var price = 50;\n        var command = new PurchaseItemCommand(itemId, price);\n\n        // Act\n        architecture.SendCommand(command);\n\n        // Assert\n        Assert.AreEqual(50, playerModel.Coins.Value);\n        Assert.IsTrue(inventoryModel.HasItem(itemId));\n    }\n\n    [Test]\n    public void PurchaseItem_WithInsufficientCoins_ShouldFail()\n    {\n        // Arrange\n        playerModel.Coins.Value = 30;\n        var itemId = \"sword\";\n        var price = 50;\n        var command = new PurchaseItemCommand(itemId, price);\n\n        // Act &amp; Assert\n        Assert.Throws&lt;InsufficientCoinsException&gt;(() =&gt; \n        {\n            architecture.SendCommand(command);\n        });\n\n        Assert.AreEqual(30, playerModel.Coins.Value);\n        Assert.IsFalse(inventoryModel.HasItem(itemId));\n    }\n}\n\n// \u2705 Mock \u5bf9\u8c61\u7684\u5b9e\u73b0\npublic class MockPlayerModel : IPlayerModel\n{\n    public BindableProperty&lt;int&gt; Coins { get; } = new BindableProperty&lt;int&gt;(0);\n    public BindableProperty&lt;int&gt; Level { get; } = new BindableProperty&lt;int&gt;(1);\n\n    public void Init() { }\n    public IArchitecture GetArchitecture() =&gt; null;\n    public void SetArchitecture(IArchitecture architecture) { }\n}\n\npublic class MockInventoryModel : IInventoryModel\n{\n    private readonly Dictionary&lt;string, int&gt; items = new Dictionary&lt;string, int&gt;();\n\n    public void AddItem(string itemId, int quantity)\n    {\n        if (!items.ContainsKey(itemId))\n            items[itemId] = 0;\n        items[itemId] += quantity;\n    }\n\n    public bool HasItem(string itemId)\n    {\n        return items.ContainsKey(itemId) &amp;&amp; items[itemId] &gt; 0;\n    }\n\n    public void Init() { }\n    public IArchitecture GetArchitecture() =&gt; null;\n    public void SetArchitecture(IArchitecture architecture) { }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u8fd0\u884c\u65f6\u8c03\u8bd5\u5de5\u5177","title":"\u8fd0\u884c\u65f6\u8c03\u8bd5\u5de5\u5177","text":"<p>QFramework \u53ef\u4ee5\u96c6\u6210\u5f3a\u5927\u7684\u8fd0\u884c\u65f6\u8c03\u8bd5\u5de5\u5177\uff1a</p> <pre><code>// \u2705 \u8fd0\u884c\u65f6\u67b6\u6784\u76d1\u63a7\u5668\npublic class ArchitectureDebugger : MonoBehaviour\n{\n    [Header(\"\u67b6\u6784\u8c03\u8bd5\u4fe1\u606f\")]\n    [SerializeField] private bool showDebugInfo = true;\n    [SerializeField] private KeyCode debugToggleKey = KeyCode.F1;\n\n    private IArchitecture architecture;\n    private readonly List&lt;string&gt; commandHistory = new List&lt;string&gt;();\n    private readonly List&lt;string&gt; eventHistory = new List&lt;string&gt;();\n\n    void Start()\n    {\n        architecture = GameApp.Interface;\n\n        if (showDebugInfo)\n        {\n            // \u76d1\u63a7\u6240\u6709 Command \u6267\u884c\n            HookCommandExecution();\n\n            // \u76d1\u63a7\u6240\u6709 Event \u53d1\u9001\n            HookEventSending();\n        }\n    }\n\n    void Update()\n    {\n        if (Input.GetKeyDown(debugToggleKey))\n        {\n            showDebugInfo = !showDebugInfo;\n        }\n    }\n\n    void OnGUI()\n    {\n        if (!showDebugInfo) return;\n\n        GUILayout.BeginArea(new Rect(10, 10, 400, Screen.height - 20));\n\n        GUILayout.Label(\"QFramework \u67b6\u6784\u8c03\u8bd5\u5668\", EditorStyles.boldLabel);\n\n        // \u663e\u793a\u6700\u8fd1\u7684 Command \u5386\u53f2\n        GUILayout.Label(\"Command \u5386\u53f2:\");\n        GUILayout.BeginScrollView(Vector2.zero, GUILayout.Height(150));\n        foreach (var command in commandHistory.TakeLast(10))\n        {\n            GUILayout.Label(command);\n        }\n        GUILayout.EndScrollView();\n\n        // \u663e\u793a\u6700\u8fd1\u7684 Event \u5386\u53f2\n        GUILayout.Label(\"Event \u5386\u53f2:\");\n        GUILayout.BeginScrollView(Vector2.zero, GUILayout.Height(150));\n        foreach (var evt in eventHistory.TakeLast(10))\n        {\n            GUILayout.Label(evt);\n        }\n        GUILayout.EndScrollView();\n\n        // \u67b6\u6784\u72b6\u6001\u4fe1\u606f\n        GUILayout.Label(\"Model \u72b6\u6001:\");\n        DisplayModelStates();\n\n        GUILayout.EndArea();\n    }\n\n    private void HookCommandExecution()\n    {\n        // \u4f7f\u7528\u53cd\u5c04\u6216 AOP \u6280\u672f\u76d1\u63a7 Command \u6267\u884c\n        // \u8fd9\u91cc\u7b80\u5316\u5904\u7406\n    }\n\n    private void HookEventSending()\n    {\n        // \u4f7f\u7528\u53cd\u5c04\u6216 AOP \u6280\u672f\u76d1\u63a7 Event \u53d1\u9001\n        // \u8fd9\u91cc\u7b80\u5316\u5904\u7406\n    }\n\n    private void DisplayModelStates()\n    {\n        // \u663e\u793a\u5404\u4e2a Model \u7684\u5f53\u524d\u72b6\u6001\n        if (architecture.GetModel&lt;IPlayerModel&gt;() is PlayerModel playerModel)\n        {\n            GUILayout.Label($\"\u73a9\u5bb6\u7b49\u7ea7: {playerModel.Level.Value}\");\n            GUILayout.Label($\"\u73a9\u5bb6\u91d1\u5e01: {playerModel.Coins.Value}\");\n        }\n\n        if (architecture.GetModel&lt;IInventoryModel&gt;() is InventoryModel inventoryModel)\n        {\n            GUILayout.Label($\"\u80cc\u5305\u7269\u54c1\u6570: {inventoryModel.Items.Value.Count}\");\n        }\n    }\n}\n\n// \u2705 \u6027\u80fd\u76d1\u63a7\u5668\npublic class PerformanceMonitor : MonoBehaviour\n{\n    [Header(\"\u6027\u80fd\u76d1\u63a7\")]\n    [SerializeField] private bool enableProfiling = true;\n\n    private readonly Dictionary&lt;string, float&gt; commandExecutionTimes = new Dictionary&lt;string, float&gt;();\n    private readonly Dictionary&lt;string, int&gt; commandExecutionCounts = new Dictionary&lt;string, int&gt;();\n\n    public void LogCommandExecution(string commandName, float executionTime)\n    {\n        if (!enableProfiling) return;\n\n        if (!commandExecutionTimes.ContainsKey(commandName))\n        {\n            commandExecutionTimes[commandName] = 0;\n            commandExecutionCounts[commandName] = 0;\n        }\n\n        commandExecutionTimes[commandName] += executionTime;\n        commandExecutionCounts[commandName]++;\n\n        // \u53d1\u73b0\u6027\u80fd\u95ee\u9898\u65f6\u8b66\u544a\n        if (executionTime &gt; 0.1f) // 100ms\n        {\n            Debug.LogWarning($\"Command {commandName} \u6267\u884c\u8017\u65f6\u8fc7\u957f: {executionTime:F3}s\");\n        }\n    }\n\n    public void PrintPerformanceReport()\n    {\n        Debug.Log(\"=== QFramework \u6027\u80fd\u62a5\u544a ===\");\n\n        foreach (var kvp in commandExecutionTimes)\n        {\n            var commandName = kvp.Key;\n            var totalTime = kvp.Value;\n            var count = commandExecutionCounts[commandName];\n            var averageTime = totalTime / count;\n\n            Debug.Log($\"{commandName}: \u603b\u8017\u65f6 {totalTime:F3}s, \u6267\u884c\u6b21\u6570 {count}, \u5e73\u5747\u8017\u65f6 {averageTime:F3}s\");\n        }\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#QFramework-\u7684\u6e10\u8fdb\u5f0f\u67b6\u6784\u6f14\u8fdb\u7b56\u7565","title":"QFramework \u7684\u6e10\u8fdb\u5f0f\u67b6\u6784\u6f14\u8fdb\u7b56\u7565","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u67b6\u6784\u6210\u719f\u5ea6\u6a21\u578b","title":"\u67b6\u6784\u6210\u719f\u5ea6\u6a21\u578b","text":"\u6210\u719f\u5ea6\u7ea7\u522b \u7279\u5f81\u63cf\u8ff0 \u9002\u7528\u9879\u76ee\u89c4\u6a21 \u6f14\u8fdb\u91cd\u70b9 \u521d\u59cb\u7ea7 \u529f\u80fd\u4f18\u5148\u3001\u5feb\u901f\u5b9e\u73b0 \u5c0f\u578b\u9879\u76ee\u3001\u539f\u578b\u9a8c\u8bc1 \u5efa\u7acb\u57fa\u672c\u7ed3\u6784 \u7ba1\u7406\u7ea7 \u89c4\u8303\u6d41\u7a0b\u3001\u6a21\u5757\u5212\u5206 \u4e2d\u578b\u9879\u76ee\u3001\u56e2\u961f\u534f\u4f5c \u5236\u5b9a\u5f00\u53d1\u89c4\u8303 \u5b9a\u4e49\u7ea7 \u6807\u51c6\u5316\u5f00\u53d1\u3001\u8d28\u91cf\u4fdd\u8bc1 \u5927\u578b\u9879\u76ee\u3001\u957f\u671f\u7ef4\u62a4 \u5efa\u7acb\u8d28\u91cf\u4f53\u7cfb \u91cf\u5316\u7ea7 \u6570\u636e\u9a71\u52a8\u3001\u6027\u80fd\u76d1\u63a7 \u5546\u4e1a\u4ea7\u54c1\u3001\u9ad8\u8981\u6c42 \u4f18\u5316\u5173\u952e\u6307\u6807 \u4f18\u5316\u7ea7 \u6301\u7eed\u6539\u8fdb\u3001\u81ea\u52a8\u5316 \u4f01\u4e1a\u7ea7\u3001\u591a\u9879\u76ee \u5e73\u53f0\u5316\u5efa\u8bbe <pre><code>}\n\nprivate void OnItemsChanged(List&lt;ItemData&gt; items)\n{\n    // \u6e05\u7406\u65e7\u7684 UI\n    foreach (var view in itemViews)\n    {\n        if (view != null)\n            Destroy(view.gameObject);\n    }\n    itemViews.Clear();\n\n    // \u521b\u5efa\u65b0\u7684 UI\n    foreach (var item in items)\n    {\n        var itemView = Instantiate(itemPrefab, itemContainer);\n        itemView.SetData(item);\n        itemView.OnItemClicked += (clickedItem) =&gt; \n        {\n            this.SendCommand&lt;UseItemCommand&gt;(new UseItemCommand(clickedItem.Id));\n        };\n        itemViews.Add(itemView);\n    }\n}\n\nprivate void OnCapacityChanged(int capacity)\n{\n    var currentCount = inventoryModel.Items.Value.Count;\n    capacityText.text = $\"{currentCount}/{capacity}\";\n\n    // \u5bb9\u91cf\u8b66\u544a\n    if (currentCount &gt;= capacity * 0.9f)\n    {\n        capacityText.color = Color.red;\n    }\n    else if (currentCount &gt;= capacity * 0.7f)\n    {\n        capacityText.color = Color.yellow;\n    }\n    else\n    {\n        capacityText.color = Color.white;\n    }\n}\n\nprivate void OnItemUsed(ItemUsedEvent e)\n{\n    // \u64ad\u653e\u4f7f\u7528\u7269\u54c1\u7684\u7279\u6548\n    PlayItemUseEffect(e.ItemId);\n}\n\npublic IArchitecture GetArchitecture() =&gt; RPGGameApp.Interface;\n</code></pre> <p>}</p> <p>// \u2705 \u53ef\u590d\u7528\u7684\u7269\u54c1\u89c6\u56fe\u7ec4\u4ef6 public class InventoryItemView : MonoBehaviour {     [SerializeField] private Image iconImage;     [SerializeField] private Text nameText;     [SerializeField] private Text quantityText;     [SerializeField] private Button useButton;</p> <pre><code>public event System.Action&lt;ItemData&gt; OnItemClicked;\n\nprivate ItemData itemData;\n\nvoid Start()\n{\n    useButton.onClick.AddListener(() =&gt; \n    {\n        OnItemClicked?.Invoke(itemData);\n    });\n}\n\npublic void SetData(ItemData data)\n{\n    itemData = data;\n    iconImage.sprite = data.Icon;\n    nameText.text = data.Name;\n    quantityText.text = data.Quantity &gt; 1 ? data.Quantity.ToString() : \"\";\n\n    // \u6839\u636e\u7269\u54c1\u7c7b\u578b\u8bbe\u7f6e\u4e0d\u540c\u7684\u663e\u793a\u72b6\u6001\n    useButton.interactable = data.IsUsable;\n}\n</code></pre> <p>}</p> <pre><code>### QFramework \u7684\u6027\u80fd\u4f18\u5316\u6700\u4f73\u5b9e\u8df5\n\n#### \u4e8b\u4ef6\u7cfb\u7edf\u7684\u6027\u80fd\u4f18\u5316\n\nQFramework \u7684\u4e8b\u4ef6\u7cfb\u7edf\u5728\u5927\u91cf\u4e8b\u4ef6\u76d1\u542c\u548c\u53d1\u9001\u65f6\u7684\u6027\u80fd\u4f18\u5316\uff1a\n\n```csharp\n// \u2705 \u4f18\u5316\u7684\u4e8b\u4ef6\u5904\u7406\npublic class OptimizedEventSystem : MonoBehaviour\n{\n    // \u4f7f\u7528\u5bf9\u8c61\u6c60\u51cf\u5c11 GC\n    private static readonly ObjectPool&lt;List&lt;System.Action&gt;&gt; ActionListPool = \n        new ObjectPool&lt;List&lt;System.Action&gt;&gt;(() =&gt; new List&lt;System.Action&gt;(), null, l =&gt; l.Clear());\n\n    void Start()\n    {\n        // \u6279\u91cf\u4e8b\u4ef6\u5904\u7406\n        var actions = ActionListPool.Get();\n\n        // \u6536\u96c6\u6240\u6709\u9700\u8981\u6267\u884c\u7684\u4e8b\u4ef6\n        CollectPendingEvents(actions);\n\n        // \u6279\u91cf\u6267\u884c\n        foreach (var action in actions)\n        {\n            action?.Invoke();\n        }\n\n        // \u56de\u6536\u5bf9\u8c61\n        ActionListPool.Release(actions);\n    }\n\n    // \u2705 \u6309\u9700\u52a0\u8f7d\u7684\u4e8b\u4ef6\u76d1\u542c\n    private readonly Dictionary&lt;System.Type, bool&gt; eventSubscriptions = new Dictionary&lt;System.Type, bool&gt;();\n\n    private void RegisterEventOnDemand&lt;T&gt;(System.Action&lt;T&gt; handler) where T : struct\n    {\n        var eventType = typeof(T);\n\n        if (!eventSubscriptions.ContainsKey(eventType))\n        {\n            this.RegisterEvent&lt;T&gt;(handler);\n            eventSubscriptions[eventType] = true;\n        }\n    }\n\n    // \u2705 \u6309\u533a\u57df\u7684\u4e8b\u4ef6\u7ba1\u7406\n    public class RegionalEventManager : IUtility\n    {\n        private readonly Dictionary&lt;string, HashSet&lt;IController&gt;&gt; regionControllers = new Dictionary&lt;string, HashSet&lt;IController&gt;&gt;();\n\n        public void RegisterControllerToRegion(string region, IController controller)\n        {\n            if (!regionControllers.ContainsKey(region))\n                regionControllers[region] = new HashSet&lt;IController&gt;();\n\n            regionControllers[region].Add(controller);\n        }\n\n        public void SendEventToRegion&lt;T&gt;(string region, T eventData) where T : struct\n        {\n            if (regionControllers.TryGetValue(region, out var controllers))\n            {\n                foreach (var controller in controllers)\n                {\n                    // \u53ea\u5411\u7279\u5b9a\u533a\u57df\u7684\u63a7\u5236\u5668\u53d1\u9001\u4e8b\u4ef6\n                    if (controller is MonoBehaviour mb &amp;&amp; mb != null)\n                    {\n                        // \u53d1\u9001\u4e8b\u4ef6\u7684\u903b\u8f91\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5185\u5b58\u7ba1\u7406\u7684\u6700\u4f73\u5b9e\u8df5_1","title":"\u5185\u5b58\u7ba1\u7406\u7684\u6700\u4f73\u5b9e\u8df5","text":"<pre><code>// \u2705 QFramework \u4e2d\u7684\u5185\u5b58\u4f18\u5316\u6280\u5de7\npublic class MemoryOptimizedModel : AbstractModel, IDisposable\n{\n    // \u4f7f\u7528\u7ed3\u6784\u4f53\u51cf\u5c11\u5806\u5185\u5b58\u5206\u914d\n    public struct PlayerState\n    {\n        public int Health;\n        public int Mana;\n        public Vector3 Position;\n        public bool IsAlive;\n    }\n\n    private readonly BindableProperty&lt;PlayerState&gt; playerState = new BindableProperty&lt;PlayerState&gt;();\n\n    // \u7f13\u5b58\u9891\u7e41\u8ba1\u7b97\u7684\u7ed3\u679c\n    private readonly Dictionary&lt;string, float&gt; cachedCalculations = new Dictionary&lt;string, float&gt;();\n    private float lastCalculationTime;\n\n    public float GetDamageMultiplier()\n    {\n        const string cacheKey = \"damageMultiplier\";\n\n        // \u7f13\u5b58 1 \u79d2\u949f\u5185\u7684\u8ba1\u7b97\u7ed3\u679c\n        if (Time.time - lastCalculationTime &lt; 1f &amp;&amp; cachedCalculations.ContainsKey(cacheKey))\n        {\n            return cachedCalculations[cacheKey];\n        }\n\n        var multiplier = CalculateDamageMultiplier();\n        cachedCalculations[cacheKey] = multiplier;\n        lastCalculationTime = Time.time;\n\n        return multiplier;\n    }\n\n    private float CalculateDamageMultiplier()\n    {\n        // \u590d\u6742\u7684\u8ba1\u7b97\u903b\u8f91\n        return 1.0f;\n    }\n\n    public void Dispose()\n    {\n        cachedCalculations.Clear();\n        playerState?.Dispose();\n    }\n}\n\n// \u2705 \u61d2\u52a0\u8f7d\u7684\u6570\u636e\u7ba1\u7406\npublic class LazyLoadedDataModel : AbstractModel\n{\n    private readonly Dictionary&lt;string, WeakReference&gt; dataCache = new Dictionary&lt;string, WeakReference&gt;();\n\n    public T GetData&lt;T&gt;(string key, System.Func&lt;T&gt; factory) where T : class\n    {\n        if (dataCache.TryGetValue(key, out var weakRef) &amp;&amp; weakRef.IsAlive)\n        {\n            return weakRef.Target as T;\n        }\n\n        var data = factory();\n        dataCache[key] = new WeakReference(data);\n        return data;\n    }\n\n    // \u5b9a\u671f\u6e05\u7406\u5df2\u7ecf\u88ab GC \u7684\u5f31\u5f15\u7528\n    public void CleanupWeakReferences()\n    {\n        var keysToRemove = new List&lt;string&gt;();\n\n        foreach (var kvp in dataCache)\n        {\n            if (!kvp.Value.IsAlive)\n            {\n                keysToRemove.Add(kvp.Key);\n            }\n        }\n\n        foreach (var key in keysToRemove)\n        {\n            dataCache.Remove(key);\n        }\n    }\n}\n</code></pre> \u6210\u719f\u5ea6\u7ea7\u522b \u7279\u5f81\u63cf\u8ff0 \u9002\u7528\u9879\u76ee\u89c4\u6a21 \u6f14\u8fdb\u91cd\u70b9 \u521d\u59cb\u7ea7 \u529f\u80fd\u4f18\u5148\u3001\u5feb\u901f\u5b9e\u73b0 \u5c0f\u578b\u9879\u76ee\u3001\u539f\u578b\u9a8c\u8bc1 \u5efa\u7acb\u57fa\u672c\u7ed3\u6784 \u7ba1\u7406\u7ea7 \u89c4\u8303\u6d41\u7a0b\u3001\u6a21\u5757\u5212\u5206 \u4e2d\u578b\u9879\u76ee\u3001\u56e2\u961f\u534f\u4f5c \u5236\u5b9a\u5f00\u53d1\u89c4\u8303 \u5b9a\u4e49\u7ea7 \u6807\u51c6\u5316\u5f00\u53d1\u3001\u8d28\u91cf\u4fdd\u8bc1 \u5927\u578b\u9879\u76ee\u3001\u957f\u671f\u7ef4\u62a4 \u5efa\u7acb\u8d28\u91cf\u4f53\u7cfb \u91cf\u5316\u7ea7 \u6570\u636e\u9a71\u52a8\u3001\u6027\u80fd\u76d1\u63a7 \u5546\u4e1a\u4ea7\u54c1\u3001\u9ad8\u8981\u6c42 \u4f18\u5316\u5173\u952e\u6307\u6807 \u4f18\u5316\u7ea7 \u6301\u7eed\u6539\u8fdb\u3001\u81ea\u52a8\u5316 \u4f01\u4e1a\u7ea7\u3001\u591a\u9879\u76ee \u5e73\u53f0\u5316\u5efa\u8bbe","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u56e2\u961f\u534f\u4f5c\u548c\u77e5\u8bc6\u4f20\u627f","title":"\u56e2\u961f\u534f\u4f5c\u548c\u77e5\u8bc6\u4f20\u627f","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u77e5\u8bc6\u7ba1\u7406\u7b56\u7565","title":"\u77e5\u8bc6\u7ba1\u7406\u7b56\u7565","text":"<pre><code>graph LR\n    A[\u77e5\u8bc6\u83b7\u53d6] --&gt; B[\u77e5\u8bc6\u6574\u7406]\n    B --&gt; C[\u77e5\u8bc6\u5206\u4eab]\n    C --&gt; D[\u77e5\u8bc6\u5e94\u7528]\n    D --&gt; E[\u77e5\u8bc6\u521b\u65b0]\n    E --&gt; A\n\n    F[\u4ee3\u7801\u8bc4\u5ba1] --&gt; B\n    G[\u6280\u672f\u6587\u6863] --&gt; C\n    H[\u57f9\u8bad\u5206\u4eab] --&gt; C\n    I[\u6700\u4f73\u5b9e\u8df5] --&gt; D\n    J[\u5de5\u5177\u5e73\u53f0] --&gt; E</code></pre>","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u5e38\u89c1\u9677\u9631\u548c\u89e3\u51b3\u65b9\u6848","title":"\u5e38\u89c1\u9677\u9631\u548c\u89e3\u51b3\u65b9\u6848","text":"","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u67b6\u6784\u53cd\u6a21\u5f0f\u8bc6\u522b","title":"\u67b6\u6784\u53cd\u6a21\u5f0f\u8bc6\u522b","text":"\u53cd\u6a21\u5f0f\u540d\u79f0 \u75c7\u72b6\u63cf\u8ff0 \u5371\u5bb3\u5206\u6790 \u89e3\u51b3\u65b9\u6848 \u795e\u7c7b\u6a21\u5f0f \u5355\u4e2a\u7c7b\u627f\u62c5\u8fc7\u591a\u804c\u8d23 \u96be\u4ee5\u7ef4\u62a4\u3001\u6d4b\u8bd5\u56f0\u96be \u5e94\u7528\u5355\u4e00\u804c\u8d23\u539f\u5219\u62c6\u5206 \u590d\u5236\u7c98\u8d34\u7f16\u7a0b \u5927\u91cf\u91cd\u590d\u4ee3\u7801 \u7ef4\u62a4\u6210\u672c\u9ad8\u3001\u9519\u8bef\u4f20\u64ad \u63d0\u53d6\u516c\u5171\u62bd\u8c61\u548c\u5de5\u5177\u7c7b \u786c\u7f16\u7801\u914d\u7f6e \u914d\u7f6e\u503c\u5199\u6b7b\u5728\u4ee3\u7801\u4e2d \u7075\u6d3b\u6027\u5dee\u3001\u96be\u4ee5\u8c03\u4f18 \u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u548c\u6570\u636e\u9a71\u52a8 \u5faa\u73af\u4f9d\u8d56 \u6a21\u5757\u95f4\u76f8\u4e92\u4f9d\u8d56 \u8026\u5408\u5ea6\u9ad8\u3001\u96be\u4ee5\u89e3\u8026 \u5f15\u5165\u4e2d\u4ecb\u8005\u6216\u4e8b\u4ef6\u673a\u5236 \u8fc7\u5ea6\u8bbe\u8ba1 \u63d0\u524d\u4f18\u5316\u3001\u8fc7\u5ea6\u62bd\u8c61 \u590d\u6742\u5ea6\u9ad8\u3001\u5f00\u53d1\u6548\u7387\u4f4e \u6309\u9700\u8bbe\u8ba1\u3001\u6e10\u8fdb\u5f0f\u91cd\u6784","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"blog/2025/09/24/unity-c-%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%86%85%E5%8A%9F%E4%BB%8E%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4%E5%88%B0%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/#\u7ed3\u8bba","title":"\u7ed3\u8bba","text":"<p>Unity \u4e2d\u7684 C# \u4ee3\u7801\u8bbe\u8ba1\u662f\u4e00\u4e2a\u7cfb\u7edf\u6027\u5de5\u7a0b\uff0c\u9700\u8981\u5728\u6570\u636e\u5bb9\u5668\u8bbe\u8ba1\u3001\u63a5\u53e3\u9a71\u52a8\u5f00\u53d1\u3001\u7ec4\u4ef6\u5316\u67b6\u6784\u7b49\u591a\u4e2a\u7ef4\u5ea6\u4e0a\u5efa\u7acb\u6b63\u786e\u7684\u8bbe\u8ba1\u7406\u5ff5\u3002\u901a\u8fc7\u9075\u5faa SOLID \u539f\u5219\uff0c\u91c7\u7528\u4e8b\u4ef6\u9a71\u52a8\u548c\u6570\u636e\u9a71\u52a8\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7ed3\u5408 Unity \u7279\u6027\u8fdb\u884c\u67b6\u6784\u4f18\u5316\uff0c\u53ef\u4ee5\u6784\u5efa\u51fa\u9ad8\u8d28\u91cf\u3001\u6613\u7ef4\u62a4\u3001\u53ef\u6269\u5c55\u7684\u6e38\u620f\u9879\u76ee\u3002</p> <p>\u6210\u529f\u7684\u67b6\u6784\u8bbe\u8ba1\u4e0d\u662f\u4e00\u8e74\u800c\u5c31\u7684\uff0c\u800c\u662f\u9700\u8981\u5728\u9879\u76ee\u5b9e\u8df5\u4e2d\u4e0d\u65ad\u6f14\u8fdb\u548c\u5b8c\u5584\u3002\u5173\u952e\u5728\u4e8e\u5efa\u7acb\u6b63\u786e\u7684\u8bbe\u8ba1\u601d\u7ef4\uff0c\u638c\u63e1\u6838\u5fc3\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u5e76\u5728\u56e2\u961f\u4e2d\u5f62\u6210\u826f\u597d\u7684\u5f00\u53d1\u89c4\u8303\u548c\u77e5\u8bc6\u4f20\u627f\u673a\u5236\u3002</p> 2025-09-242025-10-27","tags":["\u8bbe\u8ba1\u6a21\u5f0f","QFramework","SOLID"]},{"location":"contents/AboutOdinInspector/","title":"\u5173\u4e8e Odin Inspector \u4f60\u9700\u8981\u77e5\u9053\u7684\u5185\u5bb9","text":"<p>Note</p> <p>\u5f53\u4f60\u5728\u601d\u8003\u8d2d\u4e70 Odin Inspector \u65f6\uff0c\u5148\u9605\u8bfb\u672c\u6587\u6863\uff0c\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Odin Inspector \u7684\u4fe1\u606f\u3002</p>"},{"location":"contents/AboutOdinInspector/#Odin-Inspector-\u5b98\u7f51\u4e0a\u65b0\u8d26\u53f7\u53ef\u4ee5\u6709\u4e00\u4e2a-90-\u5929\u7684\u514d\u8d39\u8bd5\u7528","title":"Odin Inspector \u5b98\u7f51\u4e0a\u65b0\u8d26\u53f7\u53ef\u4ee5\u6709\u4e00\u4e2a 90 \u5929\u7684\u514d\u8d39\u8bd5\u7528","text":"<p>\u5728\u4f60\u786e\u5b9a\u8981\u8d2d\u4e70 Odin Inspector \u63d2\u4ef6\u524d\uff0c\u53ef\u4ee5\u5148\u5728 Odin Inspector \u5b98\u7f51 \u521b\u5efa\u4e00\u4e2a\u65b0\u8d26\u53f7\uff0c\u514d\u8d39\u8bd5\u7528 90 \u5929\uff0c\u4f60\u89c9\u5f97\u4e0d\u9519\u540e\uff0c\u518d\u8fdb\u884c\u8d2d\u4e70\u3002</p>"},{"location":"contents/AboutOdinInspector/#Odin-Inspector-\u62e5\u6709-Special-\u8bb8\u53ef\u8bc1\u53ef\u4ee5\u514d\u8d39\u83b7\u53d6","title":"Odin Inspector \u62e5\u6709 Special \u8bb8\u53ef\u8bc1\uff0c\u53ef\u4ee5\u514d\u8d39\u83b7\u53d6","text":"<p>\u70b9\u51fb Odin Inspector \u4ef7\u683c\u9875\u9762\uff0c\u9009\u62e9 <code>Special</code>\uff0c\u67e5\u770b\u662f\u5426\u6ee1\u8db3\u76f8\u5173\u6761\u4ef6\u3002</p>"},{"location":"contents/AboutOdinInspector/#Unity-\u5b66\u751f\u8ba1\u5212\u53ef\u4ee5\u514d\u8d39\u83b7\u53d6-Odin-Inspector","title":"Unity \u5b66\u751f\u8ba1\u5212\u53ef\u4ee5\u514d\u8d39\u83b7\u53d6 Odin Inspector","text":"<p>\u6b64\u7248\u672c\u662f\u7279\u6b8a\u754c\u9762\uff0c\u9996\u5148\u8981\u83b7\u5f97 Unity \u5b66\u751f\u8ba1\u5212\u8d44\u683c\uff0c\u7136\u540e\u70b9\u51fbUnity \u5b98\u65b9\u652f\u6301\u754c\u9762\uff0c\u8fdb\u5165\u7279\u6b8a\u9875\u9762\u9a8c\u8bc1\u8d44\u683c\u3002</p> <p>Tip</p> <p>\u4e2d\u56fd\u5927\u9646\u5730\u533a\u662f\u5426\u53ef\u4ee5\u83b7\u53d6 Unity \u5b66\u751f\u8ba1\u5212\uff1f\u6211\u6ca1\u6709\u5b9e\u8df5\u6210\u529f\u8fc7\uff0c\u5982\u679c\u6709\u6210\u529f\u8fc7\u7684\uff0c\u6073\u8bf7\u5728\u8bc4\u8bba\u533a\u7559\u4e0b\u6267\u884c\u65b9\u6848\uff0c\u5e2e\u52a9\u66f4\u591a\u4eba\u514d\u8d39\u83b7\u53d6\u3002</p> <p>\u636e\u8bf4 GitHub \u5b66\u751f\u5305\u53ef\u4ee5\u83b7\u53d6\uff0c\u4f46\u6211\u6ca1\u6709\u5b9e\u8df5\u8fc7\u3002</p>"},{"location":"contents/AboutOdinInspector/#\u4e2a\u4eba\u6216\u8005\u5c0f\u56e2\u961f\u4f7f\u7528-Personal-\u8bb8\u53ef\u8bc1\u76f4\u63a5\u5728\u5b98\u7f51\u8d2d\u4e70\u66f4\u4fbf\u5b9c","title":"\u4e2a\u4eba\u6216\u8005\u5c0f\u56e2\u961f\u4f7f\u7528 Personal \u8bb8\u53ef\u8bc1\uff0c\u76f4\u63a5\u5728\u5b98\u7f51\u8d2d\u4e70\u66f4\u4fbf\u5b9c","text":"<ul> <li> <p>Odin Inspector \u5b98\u7f51\u4ef7\u683c\u9875\u5305\u542b\u5e38\u89c1\u95ee\u9898\u89e3\u7b54</p> </li> <li> <p>Revenue or funding is less than $200K in the last 12 months\u3002</p> </li> <li> <p>\u8fc7\u53bb 12 \u4e2a\u6708\u7684\u6536\u5165\u6216\u8d22\u52a1\u89c4\u6a21\u5c0f\u4e8e 20 \u4e07\u7f8e\u5143\u3002</p> </li> <li> <p>\u4f7f\u7528 Personal \u8bb8\u53ef\u8bc1\uff0c\u4e00\u6b21\u6027\u4ed8\u8d39\uff0c\u4e70\u65ad\u5236\u3002\u5b98\u7f51\u539f\u4ef7 50 \u7f8e\u5143\uff0c\u6253\u6298 25 \u7f8e\u5143\uff0c\u8d44\u6e90\u5546\u5e97\u539f\u4ef7 55 \u7f8e\u5143\uff0c\u6253\u6298 27.5 \u7f8e\u5143\u3002\u540c\u4e00\u65f6\u95f4\u6253\u6298\uff0c\u4e14\u7ecf\u5e38\u6253\u6298\uff0c\u5efa\u8bae\u6298\u6263\u4ef7\u5165\u624b\u3002</p> </li> <li> <p>Unity \u8d44\u6e90\u5546\u5e97\u9500\u552e\u7684\u7248\u672c\u4e3a\u4e2a\u4eba\u7248</p> </li> <li> <p>\u53ea\u5305\u542b Odin Inspector and Serializer \u63d2\u4ef6 - DLL \u7248\u672c\u3002</p> </li> </ul> <p>Tip</p> <p>\u4e2a\u4eba\u6216\u8005\u5c0f\u56e2\u961f\u4f7f\u7528\u65e0\u9700\u62c5\u5fc3\u8bb8\u53ef\u8bc1\u95ee\u9898\u3002\u5982\u679c\u8d85\u8fc7\u4e86\u9650\u5236\uff0c\u90a3\u4e48\u53ef\u4ee5\u8d2d\u4e70\u5546\u4e1a\u7248\u3002\u5546\u4e1a\u7248\u5728\u4e2a\u4eba\u7248\u7684\u57fa\u7840\u4e0a\uff0c\u6269\u5145\u4e86 Validator \u63d2\u4ef6\uff0c\u4ee5\u53ca\u6240\u6709\u6e90\u4ee3\u7801\uff0c\u540c\u65f6\u5305\u542b\u6c38\u4e45\u56de\u9000\u8bb8\u53ef\u8bc1\uff0c\u800c\u975e\u4ec5\u589e\u52a0\u91d1\u989d\u3002</p>"},{"location":"contents/AboutOdinInspector/#\u6211\u5728\u8d44\u6e90\u5546\u5e97\u8d2d\u4e70\u662f\u5426\u53ef\u4ee5\u5728\u5b98\u7f51\u4e0b\u8f7d\u63d2\u4ef6\u5305","title":"\u6211\u5728\u8d44\u6e90\u5546\u5e97\u8d2d\u4e70\uff0c\u662f\u5426\u53ef\u4ee5\u5728\u5b98\u7f51\u4e0b\u8f7d\u63d2\u4ef6\u5305\uff1f","text":"<p>\u5728\u8d44\u6e90\u5546\u5e97\u8d2d\u4e70\u540e\uff0c\u53ef\u4ee5\u5728\u5b98\u7f51\u8fdb\u884c\u8ba2\u5355\u9a8c\u8bc1\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u72ec\u7acb\u7684\u63d2\u4ef6\u5305\u3002\u53e6\u5916\u5b98\u7f51\u7248\u672c\u6bd4\u8d44\u6e90\u5546\u5e97\u7248\u672c\u66f4\u65b0\u7a0d\u5feb\u3002</p>"},{"location":"contents/AboutOdinInspector/#\u8d85\u8fc7\u9650\u5236\u7684\u56e2\u961f\u4f7f\u7528-Enterprise-\u8bb8\u53ef\u8bc1","title":"\u8d85\u8fc7\u9650\u5236\u7684\u56e2\u961f\u4f7f\u7528 Enterprise \u8bb8\u53ef\u8bc1","text":"<ul> <li> <p>Required if revenue or funding is greater than $200K in the last 12 months</p> </li> <li> <p>\u8fc7\u53bb 12 \u4e2a\u6708\u7684\u8d22\u52a1\u89c4\u6a21\u6216\u6536\u5165\u5927\u4e8e 20 \u4e07\u7f8e\u5143\u3002</p> </li> <li> <p>\u6309\u5e74\u4ed8\u8d39\uff0c\u5e2d\u4f4d\u8ba2\u9605\u5236\u3002\u4ef7\u683c\u4e3a 235 \u7f8e\u5143\u4e00\u5e74\u4e00\u5e2d\u4f4d\u3002\u4e00\u4e2a\u9879\u76ee\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5e2d\u4f4d\u90fd\u9700\u8981\u4ed8\u8d39\u3002</p> </li> <li> <p>\u5305\u542b Odin Inspector and Serializer DLL \u7248\u672c\u3001Odin Validator\uff0c\u4ee5\u53ca Odin Inspector and Serializer \u6e90\u4ee3\u7801\u3002</p> </li> <li> <p>\u62e5\u6709\u6c38\u4e45\u56de\u9000\u8bb8\u53ef\u8bc1\u3002\u5982\u679c\u4f60\u89c9\u5f97 Odin Inspector \u7684\u540e\u7eed\u66f4\u65b0\u8ba9\u4f60\u89c9\u5f97\u4e0d\u503c\u5f97\u4ed8\u8d39\uff0c\u53ef\u4ee5\u653e\u5f03\u7ee7\u7eed\u8ba2\u9605\uff0c\u83b7\u53d6\u4f60\u8d2d\u4e70\u7684\u90a3\u4e00\u4e2a\u7248\u672c\u7684\u6c38\u4e45\u4f7f\u7528\u6743\u3002\u8fd9\u4e00\u70b9\u548c Jetbrains \u7684\u4ea7\u54c1\u4e00\u6837\u3002</p> </li> </ul> 2025-10-272025-10-27"},{"location":"contents/manuals/modules/QuickGenerateSO/","title":"QuickGenerateSO","text":""},{"location":"contents/manuals/modules/QuickGenerateSO/#\u7528\u6cd5","title":"\u7528\u6cd5","text":"<ol> <li>\u9009\u62e9\u7ee7\u627f\u4e86 <code>ScriptableObject</code> \u7684\u811a\u672c</li> <li>\u53f3\u952e\u9009\u62e9 <code>Create SO Asset From Selected</code></li> <li>\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210\u4e00\u4e2a SO \u8d44\u6e90</li> </ol> <p>\u63d0\u793a</p> <ol> <li>\u652f\u6301\u5355\u9009\u548c\u591a\u9009\u3002<ol> <li>\u5355\u9009 SO \u811a\u672c\u751f\u6210\u65f6\u53ef\u4ee5\u7acb\u5373\u8bbe\u7f6e\u6587\u4ef6\u540d\u3002</li> <li>\u591a\u9009 SO \u811a\u672c\u751f\u6210\u65f6\u5c06\u76f4\u63a5\u751f\u6210\u8d44\u6e90\u6587\u4ef6\uff0c\u4f7f\u7528\u9ed8\u8ba4\u547d\u540d\u3002</li> </ol> </li> <li>\u53ea\u6709\u5f53\u9009\u62e9\u7684\u8d44\u6e90\u4e2d\u5305\u542b\u6709\u7ee7\u627f <code>ScriptableObject</code> \u7684\u811a\u672c\u6587\u4ef6\u65f6\u624d\u53ef\u4ee5\u70b9\u51fb <code>Create SO Asset From Selected</code>\u3002</li> </ol> <p>\u9650\u5236</p> <p>\u5185\u90e8\u4f7f\u7528 <code>MonoScript.GetClass()</code> \u65b9\u6cd5\u83b7\u53d6 <code>Type</code> \u503c\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de\u201c\u4e3b\u7c7b\u201d\u7684 <code>Type</code> \u503c\uff0c\u8981\u6c42\u662f <code>public</code>\uff0c\u4e14\u548c\u6587\u4ef6\u540d\u76f8\u540c\u7684\u7c7b\uff0c\u56e0\u6b64\u4f7f\u7528\u65f6\u6700\u597d\u4e00\u4e2a\u811a\u672c\u6587\u4ef6\u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u7ee7\u627f <code>ScriptableObject</code> \u7684\u7c7b\u3002</p>"},{"location":"contents/manuals/modules/QuickGenerateSO/#\u6d41\u7a0b\u56fe","title":"\u6d41\u7a0b\u56fe","text":""},{"location":"contents/manuals/modules/QuickGenerateSO/#\u9a8c\u8bc1\u662f\u5426\u53ef\u4ee5\u70b9\u51fb\u6267\u884c\u6309\u94ae\u64cd\u4f5c","title":"\u9a8c\u8bc1\u662f\u5426\u53ef\u4ee5\u70b9\u51fb\u6267\u884c\u6309\u94ae\u64cd\u4f5c","text":"<pre><code>flowchart TD\n  A(Start) --&gt; B{\u9009\u62e9\u7684\u8d44\u6e90\u662f\u5426\u4e3a\u7a7a\uff1f};\n  B --&gt;|\u662f| C[\u8fd4\u56de false\uff0c\u65e0\u6cd5\u70b9\u51fb\u6267\u884c\u6309\u94ae\u64cd\u4f5c];\n  B --&gt;|\u5426| D[\u904d\u5386\u9009\u62e9\u7684\u6240\u6709\u8d44\u6e90];\n  D --&gt; F{\u8fd9\u4e2a\u8d44\u6e90\u662f\u5426\u4e3aMonoScript\u7c7b\u578b\uff1f};\n  F --&gt;|\u662f| E{GetClass\uff08\uff09\u65b9\u6cd5\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff1f};\n  F --&gt;|\u5426| G[\u9009\u62e9\u4e0b\u4e00\u4e2a\u8d44\u6e90];\n  G --&gt; D;\n  E --&gt;|\u5426| G;\n  H --&gt;|\u5426| G;\n  E --&gt;|\u662f| H{\u83b7\u5f97\u7684\u8fd9\u4e2a\u7c7b\u662f\u5426\u7ee7\u627f ScriptableObject?};\n  H --&gt;|\u662f| I(\u8fd4\u56de true\uff0c\u53ef\u4ee5\u70b9\u51fb);\n  C --&gt; M(End);\n  I --&gt; M;</code></pre>"},{"location":"contents/manuals/modules/QuickGenerateSO/#\u751f\u6210-SO-\u8d44\u6e90","title":"\u751f\u6210 SO \u8d44\u6e90","text":"<pre><code>flowchart TD\n  A(Start) --&gt; B{\u9009\u62e9\u8d44\u6e90\u7684\u6570\u91cf\u662f\u5426\u4e3a1\u4e2a}\n  B --&gt; |\u662f| C[\u751f\u6210\u4e00\u4e2aSO\u8d44\u6e90\uff0c\u4e14\u7acb\u5373\u91cd\u547d\u540d\u7f16\u8f91]\n  B --&gt; |\u5426| D[\u904d\u5386\u6240\u6709\u8d44\u6e90]\n  D --&gt; F[\u751f\u6210SO\u8d44\u6e90\uff0c\u4f7f\u7528\u9ed8\u8ba4\u547d\u540d\uff0c\u5e76\u5237\u65b0]\n  C --&gt; G(End)\n  F --&gt; G</code></pre> 2025-10-272025-10-27"},{"location":"contents/manuals/modules/TemplateCodeGen/","title":"GenerateTemplateCode","text":""},{"location":"contents/manuals/modules/TemplateCodeGen/#\u4ecb\u7ecd","title":"\u4ecb\u7ecd","text":"<p>\u751f\u6210\u6a21\u677f\u4ee3\u7801\u5de5\u5177\uff0c\u7528\u4e8e\u5feb\u901f\u751f\u6210\u811a\u672c\u6a21\u677f\uff0c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7f16\u5199\u3002</p>"},{"location":"contents/manuals/modules/TemplateCodeGen/#\u5de5\u5177\u622a\u56fe","title":"\u5de5\u5177\u622a\u56fe","text":"<p>\u751f\u6210\u6a21\u677f\u4ee3\u7801\u5de5\u5177\u603b\u89c8</p> <p></p> <p>\u5de5\u5177\u4f7f\u7528\u622a\u56fe</p> <p></p> <p>\u811a\u672c\u6a21\u677f\u6587\u4ef6\u53c2\u8003</p>"},{"location":"contents/manuals/modules/TemplateCodeGen/#\u7528\u6cd5","title":"\u7528\u6cd5","text":"<ol> <li>\u627e\u5230\u83dc\u5355\u8def\u5f84 Tools/Odin Toolkits/Windows/Tools Package\uff0cMac \u5feb\u6377\u952e = Command + Shift + Option + T</li> <li>\u914d\u7f6e\u811a\u672c\u6a21\u677f\u8def\u5f84\uff0c\u9009\u62e9 .txt \u6587\u4ef6\uff0c\u5c06\u5b83\u62d6\u5165\u811a\u672c\u6a21\u677f\u8def\u5f84\u8f93\u5165\u6846\uff0c\u81ea\u52a8\u8bfb\u53d6</li> <li>\u70b9\u51fb\u5e94\u7528\u914d\u7f6e\uff0c\u751f\u6210\u811a\u672c\u6a21\u677f\u8def\u5f84\u6620\u5c04\uff08\u540e\u53f0\uff0c\u7528\u6237\u65e0\u611f\uff09</li> <li>\u914d\u7f6e\u76ee\u6807\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u53ef\u4ee5\u540c\u65f6\u5b58\u50a8\u591a\u4e2a\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u62d6\u62fd</li> <li>\u8bbe\u7f6e\u811a\u672c\u7c7b\u540d</li> <li>\u9009\u62e9\u811a\u672c\u6a21\u677f</li> <li>\u9009\u62e9\u811a\u672c\u6587\u4ef6\u751f\u6210\u8def\u5f84</li> <li>\u70b9\u51fb\u751f\u6210</li> </ol>"},{"location":"contents/manuals/modules/TemplateCodeGen/#\u6dfb\u52a0\u811a\u672c\u6a21\u677f","title":"\u6dfb\u52a0\u811a\u672c\u6a21\u677f","text":"<ol> <li>\u65b0\u5efa\u811a\u672c\u6a21\u677f\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u5fc5\u987b\u4ee5 <code>.txt</code> \u7ed3\u5c3e</li> <li>\u6a21\u677f\u6587\u4ef6\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\u4f7f\u7528 <code>#NAMESPACE#</code> \u5360\u4f4d\uff0c\u7c7b\u540d\u4f7f\u7528 <code>#CLASSNAME#</code> \u5360\u4f4d</li> <li>\u62d6\u62fd\u811a\u672c\u6587\u4ef6\u5230\u914d\u7f6e\u5217\u8868\u8def\u5f84</li> <li>\u914d\u7f6e\u811a\u672c\u6a21\u677f\u8def\u5f84\uff0c\u5e76\u4e14\u5e94\u7528\uff0c\u5373\u53ef\u4e0b\u62c9\u9009\u62e9\u6a21\u677f</li> </ol> <p>\u63d0\u793a</p> <p>\u6a21\u677f\u6587\u4ef6\u9700\u8981\u6ce8\u610f\u5f15\u5165\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u6709\u4fee\u6539\uff0c\u9700\u8981\u53ca\u65f6\u4fee\u6539\u6a21\u677f\u3002</p> 2025-10-272025-10-27"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/","title":"Script Doc Generator \u811a\u672c\u6587\u6863\u751f\u6210\u5668","text":""},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u6a21\u5757\u7b80\u4ecb","title":"\u6a21\u5757\u7b80\u4ecb","text":"<p>Script Doc Generator \u662f Odin Toolkits For Unity \u7684\u6838\u5fc3\u6a21\u5757\u4e4b\u4e00\uff0c\u7528\u4e8e\u4e00\u952e\u751f\u6210\u4ee3\u7801\u7684 API \u6587\u6863\uff08\u9ed8\u8ba4\u751f\u6210 Markdown \u683c\u5f0f\uff09\u3002\u8be5\u6a21\u5757\u652f\u6301\u5206\u6790\u4ee3\u7801\u4e2d\u7684\u7c7b\u3001\u6784\u9020\u51fd\u6570\u3001\u65b9\u6cd5\u3001\u5c5e\u6027\u3001\u4e8b\u4ef6\u3001\u5b57\u6bb5\u7b49\u6210\u5458\uff0c\u5e76\u81ea\u52a8\u6574\u7406\u4e3a\u7ed3\u6784\u5316\u6587\u6863\uff0c\u540c\u65f6\u652f\u6301\u81ea\u5b9a\u4e49\u6587\u6863\u751f\u6210\u903b\u8f91\u3002</p>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u6838\u5fc3\u7279\u6027","title":"\u6838\u5fc3\u7279\u6027","text":"<ul> <li>\u652f\u6301\u5355\u7c7b\u578b\u3001\u591a\u7c7b\u578b\u6216\u6574\u4e2a\u7a0b\u5e8f\u96c6\u7684\u6587\u6863\u6279\u91cf\u751f\u6210</li> <li>\u81ea\u52a8\u4fdd\u7559\u6587\u6863\u4e2d \u201c## \u989d\u5916\u8bf4\u660e\u201d \u540e\u7684\u81ea\u5b9a\u4e49\u5185\u5bb9\uff08\u589e\u91cf\u751f\u6210\uff09</li> <li>\u652f\u6301\u8bc6\u522b ChineseSummaryAttribute \u7279\u6027\uff0c\u63d0\u53d6\u4e2d\u6587\u6ce8\u91ca\u4f5c\u4e3a\u6587\u6863\u5185\u5bb9</li> <li>\u751f\u6210\u7684\u6587\u6863\u5305\u542b\u7c7b\u578b\u4ecb\u7ecd\u3001\u6784\u9020\u65b9\u6cd5\u3001\u975e\u6784\u9020\u65b9\u6cd5\u3001\u4e8b\u4ef6\u3001\u5c5e\u6027\u3001\u5b57\u6bb5\u7b49\u5b8c\u6574\u4fe1\u606f</li> </ul>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u4f7f\u7528\u6d41\u7a0b","title":"\u4f7f\u7528\u6d41\u7a0b","text":""},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u6253\u5f00\u5de5\u5177\u9762\u677f","title":"\u6253\u5f00\u5de5\u5177\u9762\u677f","text":"<p>\u901a\u8fc7 Unity \u7f16\u8f91\u5668\u83dc\u5355\u6253\u5f00\uff1aTools/Odin Toolkits/Script Doc Generator</p>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u8bbe\u7f6e\u6587\u6863\u4fdd\u5b58\u8def\u5f84","title":"\u8bbe\u7f6e\u6587\u6863\u4fdd\u5b58\u8def\u5f84","text":"<p>\u5728\u5de5\u5177\u7a97\u53e3\u7684 \u201c\u5b58\u653e\u811a\u672c\u6587\u6863\u7684\u76ee\u6807\u6587\u4ef6\u5939\u8def\u5f84\u201d \u8f93\u5165\u6846\u4e2d\uff0c\u8bbe\u7f6e\u6587\u6863\u5bfc\u51fa\u76ee\u5f55</p> <ul> <li>\u652f\u6301\u7edd\u5bf9\u8def\u5f84\u8f93\u5165</li> <li>\u652f\u6301\u62d6\u62fd\u6587\u4ef6\u5939\u5230\u8f93\u5165\u6846\u5feb\u901f\u8bbe\u7f6e</li> <li>\u82e5\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u751f\u6210\u65f6\u4f1a\u63d0\u793a\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939</li> </ul>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u9009\u62e9\u7c7b\u578b\u6765\u6e90","title":"\u9009\u62e9\u7c7b\u578b\u6765\u6e90","text":"<p>\u5728 \u201c\u7c7b\u578b\u6765\u6e90\u201d \u9009\u9879\u4e2d\uff0c\u9009\u62e9\u9700\u8981\u751f\u6210\u6587\u6863\u7684\u76ee\u6807\u8303\u56f4</p> <ul> <li>SingleType\uff1a\u5355\u4e2a\u7c7b\u578b\uff08\u5982\u5355\u4e2a\u7c7b\uff09</li> <li>MultipleType\uff1a\u591a\u4e2a\u7c7b\u578b</li> <li>SingleAssembly\uff1a\u6574\u4e2a\u7a0b\u5e8f\u96c6</li> </ul>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u9009\u62e9\u6587\u6863\u751f\u6210\u5668","title":"\u9009\u62e9\u6587\u6863\u751f\u6210\u5668","text":"<p>\u9ed8\u8ba4\u63d0\u4f9b\u4e2d\u6587 API \u6587\u6863\u751f\u6210\u5668\uff08CnAPIDocGeneratorSO\uff09\uff0c\u53ef\u751f\u6210\u5305\u542b\u4e2d\u6587\u6ce8\u91ca\u7684 Markdown \u6587\u6863\u3002\u5982\u9700\u81ea\u5b9a\u4e49\u6587\u6863\u683c\u5f0f\uff0c\u53ef\u5b9e\u73b0 DocGeneratorSO \u62bd\u8c61\u7c7b\u5e76\u5728\u6b64\u5904\u9009\u62e9\u81ea\u5b9a\u4e49\u751f\u6210\u5668\u3002</p>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u751f\u6210\u6587\u6863","title":"\u751f\u6210\u6587\u6863","text":"<p>\u70b9\u51fb \u201c\u57fa\u4e8e\u89e3\u6790\u7ed3\u679c\u548c\u6587\u6863\u751f\u6210\u5668\u751f\u6210 Markdown \u6587\u6863\u201d \u6309\u94ae\uff0c\u89e6\u53d1\u751f\u6210\u6d41\u7a0b\uff1a</p> <ul> <li>\u82e5\u76ee\u6807\u7c7b\u578b\u5df2\u6807\u8bb0\u4e3a \u201c\u8fc7\u65f6\u201d\uff0c\u4f1a\u63d0\u793a\u786e\u8ba4\u662f\u5426\u7ee7\u7eed</li> <li>\u82e5\u76ee\u6807\u8def\u5f84\u5df2\u5b58\u5728\u540c\u540d\u6587\u6863\uff0c\u4f1a\u63d0\u793a\u662f\u5426\u8986\u76d6\uff08\u8986\u76d6\u65f6\u4fdd\u7559 \u201c## \u989d\u5916\u8bf4\u660e\u201d \u540e\u7684\u5185\u5bb9\uff09</li> <li>\u751f\u6210\u5b8c\u6210\u540e\uff0c\u81ea\u52a8\u7528\u9ed8\u8ba4\u7a0b\u5e8f\u6253\u5f00\u6587\u6863\uff0c\u5e76\u5237\u65b0 Unity \u8d44\u6e90\u6570\u636e\u5e93</li> </ul>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u4e2d\u6587-API-\u6587\u6863\u7ed3\u6784","title":"\u4e2d\u6587 API \u6587\u6863\u7ed3\u6784","text":"<p>\u6587\u6863\u9ed8\u8ba4\u5305\u542b\u4ee5\u4e0b\u90e8\u5206\uff08\u4ee5\u4e2d\u6587 API \u6587\u6863\u4e3a\u4f8b\uff09\uff1a</p> <ol> <li>\u7c7b\u578b\u540d</li> <li>\u7c7b\u578b\u7c7b\u522b\uff08\u5982 class\u3001struct\uff0c\u662f\u5426\u9759\u6001 / \u62bd\u8c61\uff09</li> <li>\u6240\u5728\u7a0b\u5e8f\u96c6\u3001\u547d\u540d\u7a7a\u95f4</li> <li>\u7c7b\u578b\u58f0\u660e\u4ee3\u7801\uff08\u5982 public class TestClass : MonoBehaviour\uff09</li> <li>\u6ce8\u91ca\uff08\u6765\u81ea ChineseSummaryAttribute\uff09</li> <li>\u6784\u9020\u65b9\u6cd5\u8868\u683c\u5f62\u5f0f\u5c55\u793a\u516c\u5171\u5b9e\u4f8b\u6784\u9020\u51fd\u6570\u7684\u7b7e\u540d\u53ca\u6ce8\u91ca\u3002</li> <li>\u975e\u6784\u9020\u65b9\u6cd5\u6309 \u201c\u58f0\u660e\u7684\u666e\u901a\u65b9\u6cd5\u201d\u201c\u7ee7\u627f\u7684\u666e\u901a\u65b9\u6cd5\u201d\u201c\u8fd0\u7b97\u7b26\u7279\u6b8a\u65b9\u6cd5\u201d \u5206\u7c7b\uff0c\u5c55\u793a\u65b9\u6cd5\u7b7e\u540d\u3001\u6ce8\u91ca\u53ca\u58f0\u660e\u7c7b\u3002</li> <li>\u4e8b\u4ef6\u6309 \u201c\u58f0\u660e\u7684\u4e8b\u4ef6\u201d\u201c\u7ee7\u627f\u7684\u4e8b\u4ef6\u201d \u5206\u7c7b\uff0c\u5c55\u793a\u4e8b\u4ef6\u540d\u79f0\u53ca\u6ce8\u91ca\u3002</li> <li>\u5c5e\u6027\u6309 \u201c\u58f0\u660e\u7684\u5c5e\u6027\u201d\u201c\u7ee7\u627f\u7684\u5c5e\u6027\u201d \u5206\u7c7b\uff0c\u5c55\u793a\u5c5e\u6027\u7b7e\u540d\u53ca\u6ce8\u91ca\u3002</li> <li>\u5b57\u6bb5\u6309 \u201c\u58f0\u660e\u7684\u5b57\u6bb5\u201d\u201c\u7ee7\u627f\u7684\u5b57\u6bb5\u201d \u5206\u7c7b\uff0c\u5c55\u793a\u5b57\u6bb5\u7b7e\u540d\u53ca\u6ce8\u91ca\u3002</li> <li>\u989d\u5916\u8bf4\u660e\u81ea\u52a8\u6dfb\u52a0\u5de5\u5177\u6807\u8bc6\uff0c\u4e14\u4fdd\u7559\u7528\u6237\u5728\u6b64\u90e8\u5206\u6dfb\u52a0\u7684\u81ea\u5b9a\u4e49\u5185\u5bb9\uff08\u589e\u91cf\u751f\u6210\u65f6\u4e0d\u8986\u76d6\uff09\u3002</li> </ol>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u9ad8\u7ea7\u529f\u80fd","title":"\u9ad8\u7ea7\u529f\u80fd","text":"<ol> <li>\u652f\u6301\u589e\u91cf\u751f\u6210</li> </ol> <p>\u751f\u6210\u6587\u6863\u65f6\uff0c\u82e5\u76ee\u6807\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5de5\u5177\u4f1a\u81ea\u52a8\u4fdd\u7559\u7b2c\u4e00\u4e2a \u201c## \u989d\u5916\u8bf4\u660e\u201d \u4e4b\u540e\u7684\u5185\u5bb9\uff0c\u4ec5\u8986\u76d6\u524d\u6587\u7684 API \u4fe1\u606f\uff0c\u5728 \u201c\u989d\u5916\u8bf4\u660e\u201d \u90e8\u5206\u53ef\u4ee5\u624b\u52a8\u8865\u5145\u4e00\u4e9b\u5177\u4f53\u6848\u4f8b\uff0c\u6216\u8005\u5176\u4ed6\u8981\u70b9\u3002</p> <ol> <li>\u6279\u91cf\u751f\u6210</li> </ol> <p>\u9009\u62e9 \u201cMultipleType\u201d \u6216 \u201cSingleAssembly\u201d \u7c7b\u578b\u6765\u6e90\u65f6\uff0c\u53ef\u4e00\u6b21\u6027\u4e3a\u591a\u4e2a\u7c7b\u578b\u6216\u6574\u4e2a\u7a0b\u5e8f\u96c6\u751f\u6210\u6587\u6863\uff0c\u751f\u6210\u6570\u91cf\u8fc7\u591a\u65f6\uff0c\u4f1a\u663e\u793a\u8fdb\u5ea6\u6761\u3002</p> <ol> <li>\u4e00\u952e\u540c\u6b65 XML \u7684 Summary \u6ce8\u91ca</li> </ol> <p>\u5de5\u5177\u901a\u8fc7 ChineseSummaryAttribute \u7279\u6027\u63d0\u53d6\u4ee3\u7801\u6210\u5458\u7684\u4e2d\u6587\u6ce8\u91ca\uff0c\u5fc5\u987b\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0 ChineseSummaryAttribute</p> <pre><code>[ChineseSummary(\"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\")]\npublic class TestClass\n{\n    [ChineseSummary(\"\u6d4b\u8bd5\u5b57\u6bb5\")]\n    public int testField;\n}\n</code></pre> <p>\u4e3a\u4e86\u51cf\u5c11\u624b\u52a8\u64cd\u4f5c\uff0c\u7528\u6237\u5728\u8865\u5145\u5b8c XML \u6ce8\u91ca\u540e\uff0c\u53ef\u4ee5\u5728 Unity \u9879\u76ee\u7a97\u53e3\u4e2d\uff0c\u53f3\u952e\u70b9\u51fb C# \u811a\u672c\u6587\u4ef6\uff0c\u901a\u8fc7\u4ee5\u4e0b\u83dc\u5355\u5feb\u901f\u5904\u7406\u6ce8\u91ca\uff1a</p> <ul> <li>Add ChineseSummary\uff1a\u81ea\u52a8\u4e3a\u6210\u5458\u6dfb\u52a0 ChineseSummaryAttribute</li> <li>Remove ChineseSummary\uff1a\u79fb\u9664\u811a\u672c\u4e2d\u7684 ChineseSummaryAttribute</li> </ul>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u6ce8\u610f\u4e8b\u9879","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u8def\u5f84\u4e0d\u5b58\u5728\u65f6\uff0c\u5de5\u5177\u4f1a\u63d0\u793a\u81ea\u52a8\u521b\u5efa\uff0c\u82e5\u53d6\u6d88\u5219\u7ec8\u6b62\u751f\u6210\u3002</li> <li>\u751f\u6210\u8fc7\u65f6\u7c7b\u578b\u7684\u6587\u6863\u65f6\uff0c\u9700\u624b\u52a8\u786e\u8ba4\u662f\u5426\u7ee7\u7eed\u3002</li> <li>\u81ea\u5b9a\u4e49\u6587\u6863\u751f\u6210\u5668\u9700\u7ee7\u627f DocGeneratorSO \u5e76\u5b9e\u73b0 GetGeneratedDoc \u65b9\u6cd5\u3002</li> <li>\u751f\u6210\u7684\u6587\u6863\u7f16\u7801\u4e3a UTF-8\uff0c\u786e\u4fdd\u517c\u5bb9\u6027\u3002</li> </ul>"},{"location":"contents/manuals/scriptdocgenerator/ScriptDocGeneratorUsage/#\u5e38\u89c1\u95ee\u9898","title":"\u5e38\u89c1\u95ee\u9898","text":"<p>Q\uff1a\u751f\u6210\u7684\u6587\u6863\u7f3a\u5c11\u67d0\u4e9b\u6210\u5458\uff1f</p> <p>A\uff1a\u5de5\u5177\u9ed8\u8ba4\u53ea\u5206\u6790\u516c\u5171\u5b9e\u4f8b\u6210\u5458\uff0c\u79c1\u6709\u6210\u5458\u6216\u975e\u5b9e\u4f8b\u6210\u5458\u4e0d\u4f1a\u88ab\u5305\u542b\u3002</p> <p>Q\uff1a\u5982\u4f55\u4fee\u6539\u6587\u6863\u683c\u5f0f\uff1f</p> <p>A\uff1a\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49 DocGeneratorSO \u5b9e\u73b0\u7c7b\uff0c\u91cd\u5199\u6587\u6863\u751f\u6210\u903b\u8f91\u3002</p> <p>Q\uff1a\u201c\u989d\u5916\u8bf4\u660e\u201d \u90e8\u5206\u7684\u5185\u5bb9\u88ab\u8986\u76d6\u4e86\uff1f</p> <p>A\uff1a\u786e\u4fdd\u81ea\u5b9a\u4e49\u5185\u5bb9\u5728 \u201c## \u989d\u5916\u8bf4\u660e\u201d \u6807\u9898\u4e4b\u540e\uff0c\u5de5\u5177\u4f1a\u4fdd\u7559\u8be5\u6807\u9898\u53ca\u4e4b\u540e\u7684\u5185\u5bb9\u3002</p> 2025-10-272025-10-27"},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/","title":"TypeAnalyzer \u652f\u6301\u60c5\u51b5\u5355\u5143\u6d4b\u8bd5\u603b\u89c8","text":"","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#Type-\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","title":"Type \u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","text":"<p>Type \u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5\u987b\u77e5</p> <p>\u7c7b\u578b\u89e3\u6790\u6570\u636e\uff08TypeData\uff09\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u7c7b\u578b\u4e00\u5171\u6709 14 \u79cd</p> <p>\u7c7b\u578b\u89e3\u6790\u652f\u6301\u5305\u62ec\u7c7b\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u3001\u63a5\u53e3\u3001\u59d4\u6258\u3001\u5d4c\u5957\u7c7b\u578b\u3001\u8bb0\u5f55\u7c7b\u3002</p> \u5b8c\u7f8e\u652f\u6301\u90e8\u5206\u7c7b\u578b\uff0c\u5171 14 \u79cd <pre><code>public interface ITestInterface { }\n[Summary(\"\u652f\u6301\u89e3\u6790\u7279\u6027\")]\n[ReferenceLinkURL(\"https://learn.microsoft.com/en-us/dotnet/api/system.object?view=net-9.0\")]\npublic class TestClassWithAttribute { }\npublic abstract class TestAbstractClass { }\npublic sealed class TestSealedClass { }\npublic static class TestStaticClass { }\npublic class TestGenericClass&lt;T&gt; where T : class\n{\n    public T Owner;\n}\npublic delegate void TestDelegate();\npublic delegate void TestDelegateHasParameters(int a, List&lt;string&gt; b);\npublic delegate bool TestDelegateHasReturnType(float a, int[] b);\npublic record TestRecord;\npublic struct TestStruct { }\npublic class UnitTestTypes : TestAbstractClass { }\n</code></pre> \u89e3\u6790\u540e\u7684\u7c7b\u578b\u5b8c\u6574\u58f0\u660e - \u5355\u884c <code>public interface ITestInterface</code> <code>public abstract class TestAbstractClass</code> <code>public sealed class TestSealedClass</code> <code>public static class TestStaticClass</code> <code>public class TestGenericClass&lt;T&gt; where T : class</code> <code>public delegate void TestDelegate()</code> <code>public delegate void TestDelegateHasParameters(int a, List&lt;string&gt; b)</code> <code>public delegate bool TestDelegateHasReturnType(float a, int[] b)</code> TestClassWithAttribute \u7684\u5b8c\u6574\u58f0\u660e<pre><code>[ReferenceLinkURL]\npublic class TestClassWithAttribute\n</code></pre> TestRecord \u7684\u5b8c\u6574\u58f0\u660e<pre><code>[NullableContext(NullableContextOptions.flow)]\n[Nullable(NullableContextOptions.flow)]\npublic record TestRecord : System.IEquatable&lt;TestRecord&gt;\n</code></pre> TestStruct \u7684\u5b8c\u6574\u58f0\u660e<pre><code>public struct TestStruct : System.ValueType\n</code></pre> UnitTestTypes \u7684\u5b8c\u6574\u58f0\u660e<pre><code>public class UnitTestTypes : Yuumix.OdinToolkits.Tests.Editor.TestAbstractClass\n</code></pre>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u6784\u9020\u65b9\u6cd5Construtor\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","title":"\u6784\u9020\u65b9\u6cd5\uff08Construtor\uff09\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","text":"<p>\u6784\u9020\u65b9\u6cd5\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5\u987b\u77e5</p> <p>\u6784\u9020\u65b9\u6cd5\u662f\u7c7b\u7684\u4e00\u79cd\u7279\u6b8a\u65b9\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\u3002\u6784\u9020\u65b9\u6cd5\u7684\u540d\u79f0\u4e0e\u7c7b\u540d\u76f8\u540c\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u7c7b\u578b\u3002</p> \u5b8c\u7f8e\u652f\u6301\u6784\u9020\u65b9\u6cd5\uff0c\u5171 4 \u79cd <pre><code>public abstract class TestClassAbstract\n{\n    protected TestClassAbstract(int a) { }\n    protected TestClassAbstract() { }\n}\npublic class TestClass : TestClassAbstract\n{\n    public TestClass() { }\n    public TestClass(bool b, int a) : base(a) { }\n    static TestClass() { }\n    TestClass(string s) { }\n}\n</code></pre> \u89e3\u6790\u540e\u7684\u6784\u9020\u65b9\u6cd5\u5b8c\u6574\u7b7e\u540d <code>public UnitTestConstructorsCommon.TestClass()</code> <code>public UnitTestConstructorsCommon.TestClass(bool b, int a)</code> <code>private static UnitTestConstructorsCommon.TestClass()</code> <code>private UnitTestConstructorsCommon.TestClass(string s)</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u4e8b\u4ef6Event\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","title":"\u4e8b\u4ef6\uff08Event\uff09\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","text":"<p>\u4e8b\u4ef6\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5\u987b\u77e5</p> <p>\u53ea\u89e3\u6790\u4f7f\u7528 <code>event</code> \u5173\u952e\u5b57\u58f0\u660e\u7684\u4e8b\u4ef6\uff0c\u7b80\u5355\u59d4\u6258\u5c5e\u4e8e\u5b57\u6bb5\u3002</p> <p>\u4e8b\u4ef6\u76f8\u5f53\u4e8e\u5728\u5b57\u6bb5\u7684\u58f0\u660e\u4e2d\u6dfb\u52a0\u4e86 <code>event</code> \u5173\u952e\u5b57\uff0c\u89e3\u6790\u652f\u6301\u53c2\u8003\u5b57\u6bb5\u89e3\u6790\u652f\u6301\u3002</p> <p>\u4e8b\u4ef6\u89e3\u6790\u6570\u636e\uff08EventData\uff09\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u4e8b\u4ef6\u4e00\u5171\u6709 6 \u79cd</p>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u9759\u6001\u548c\u5b9e\u4f8b\u4e8b\u4ef6\u89e3\u6790\u652f\u6301","title":"\u9759\u6001\u548c\u5b9e\u4f8b\u4e8b\u4ef6\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u9759\u6001\u548c\u5b9e\u4f8b\u4e8b\u4ef6\uff0c\u5171 6 \u79cd <pre><code>public event Action ActionEvent;\npublic event Action&lt;int, string&gt; ActionWithParamsEvent;\npublic event Func&lt;int, string, bool&gt; FuncWithParamsEvent;\npublic event Predicate&lt;int&gt; PredicateEvent;\npublic event Comparison&lt;string&gt; ComparisonEvent;\npublic static event Action&lt;bool&gt; StaticActionEvent;\n</code></pre> \u89e3\u6790\u540e\u7684\u4e8b\u4ef6\u5b8c\u6574\u7b7e\u540d <code>public event Action ActionEvent;</code> <code>public event Action&lt;int, string&gt; ActionWithParamsEvent;</code> <code>public event Func&lt;int, string, bool&gt; FuncWithParamsEvent;</code> <code>public event Predicate&lt;int&gt; PredicateEvent;</code> <code>public event Comparison&lt;string&gt; ComparisonEvent;</code> <code>public static event Action&lt;bool&gt; StaticActionEvent;</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u65b9\u6cd5Method\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","title":"\u65b9\u6cd5\uff08Method\uff09\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","text":"<p>\u65b9\u6cd5\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5\u987b\u77e5</p> <p>\u65b9\u6cd5\u89e3\u6790\u6570\u636e\uff08MethodData\uff09\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4e00\u5171\u6709 23 \u79cd\u3002</p> <p>\u65b9\u6cd5\u89e3\u6790\u6570\u636e\u4e0d\u5305\u62ec\u6784\u9020\u51fd\u6570\uff0c\u4ec5\u5305\u62ec\u666e\u901a\u65b9\u6cd5\u3002</p>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u666e\u901a\u65b9\u6cd5\u89e3\u6790\u652f\u6301","title":"\u666e\u901a\u65b9\u6cd5\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u666e\u901a\u65b9\u6cd5\uff0c\u5171 11 \u79cd <pre><code>public void EmptyParamMethod()\n{\n    Debug.Log(\"EmptyParamMethod\");\n}\n\npublic void OneIntParamMethod(int param)\n{\n    Debug.Log(param);\n}\n\npublic void TwoParamMethod(string param1, bool param2)\n{\n    Debug.Log(param1 + param2);\n}\n\npublic void GenericMethod&lt;T&gt;(T param)\n{\n    Debug.Log(param);\n}\n\npublic void TwoParamsGenericMethod&lt;T, T1&gt;(T param1, List&lt;T1&gt; param2)\n{\n    Debug.Log(param1);\n    Debug.Log(param2);\n}\n\npublic void IndefiniteParamsMethod(string param1, params bool[] param2)\n{\n    Debug.Log(param1 + param2);\n}\n\npublic string HasReturnStringMethod(float param1)\n{\n    Debug.Log(param1);\n    return \"HasReturnStringMethod\";\n}\n\npublic static void StaticMethod()\n{\n    Debug.Log(\"StaticMethod\");\n}\n\npublic static bool HasReturnBoolMethodWithDefault(float param1 = 5f, bool param2 = false,\n    string param3 = \"Hello World\", int param4 = 0,\n    ScriptDocGeneratorTestEnum param5 = ScriptDocGeneratorTestEnum.Value3)\n{\n    Debug.Log(param3 + param4);\n    return true;\n}\n\npublic static async Task AsyncMethod()\n{\n    await Task.Delay(1);\n}\n\npublic async Task&lt;int&gt; AsyncMethodWithReturnValue()\n{\n    await Task.Delay(1);\n    return 42;\n}\n</code></pre> \u89e3\u6790\u540e\u7684\u65b9\u6cd5\u5b8c\u6574\u7b7e\u540d <code>public void EmptyParamMethod()</code> <code>public void OneIntParamMethod(int param)</code> <code>public void TwoParamMethod(string param1, bool param2)</code> <code>public void GenericMethod&lt;T&gt;(T param)</code> <code>public void TwoParamsGenericMethod&lt;T, T1&gt;(T param1, List&lt;T1&gt; param2)</code> <code>public void IndefiniteParamsMethod(string param1, params bool[] param2)</code> <code>public string HasReturnStringMethod(float param1)</code> <code>public static void StaticMethod()</code> <code>public static bool HasReturnBoolMethodWithDefault(float param1 = 5f, bool param2 = false, string param3 = \"Hello World\", int param4 = 0, ScriptDocGeneratorTestEnum param5 = ScriptDocGeneratorTestEnum.Value3)</code> <code>public static async Task AsyncMethod()</code> <code>public async Task&lt;int&gt; AsyncMethodWithReturnValue()</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u7ee7\u627f\u4ee5\u53ca\u63a5\u53e3\u65b9\u6cd5\u89e3\u6790\u652f\u6301","title":"\u7ee7\u627f\u4ee5\u53ca\u63a5\u53e3\u65b9\u6cd5\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u7ee7\u627f\u4ee5\u53ca\u63a5\u53e3\u65b9\u6cd5\uff0c\u5171 4 \u79cd <pre><code>public interface IInterface\n{\n    void InterfaceMethod();\n}\n\npublic abstract class TestClassAbstract\n{\n    public virtual void OverrideVirtualMethod() { }\n    public abstract void OverrideAbstractMethod();\n}\n\npublic class TestClassImplement : TestClassAbstract, IInterface\n{\n    public override void OverrideAbstractMethod() { }\n    public override void OverrideVirtualMethod() { \n    public void InterfaceMethod()\n    {\n        Debug.Log(\"InterfaceMethod\");\n    }\n}\n</code></pre> \u89e3\u6790\u540e\u7684\u65b9\u6cd5\u5b8c\u6574\u7b7e\u540d <p>| <code>public virtual void OverrideVirtualMethod()</code> | | <code>public override void OverrideAbstractMethod()</code> | | <code>public override void OverrideVirtualMethod()</code> | | <code>public void InterfaceMethod()</code> |</p>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u8fd0\u7b97\u7b26\u65b9\u6cd5\u89e3\u6790\u652f\u6301","title":"\u8fd0\u7b97\u7b26\u65b9\u6cd5\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u8fd0\u7b97\u7b26\u65b9\u6cd5\uff0c\u5171 7 \u79cd <pre><code>public static TestClass operator +(TestClass a, TestClass b) =&gt; new TestClass();\npublic static TestClass operator -(TestClass a, TestClass b) =&gt; new TestClass();\npublic static TestClass operator *(TestClass a, TestClass b) =&gt; new TestClass();\npublic static TestClass operator /(TestClass a, TestClass b) =&gt; new TestClass();\npublic static TestClass operator %(TestClass a, TestClass b) =&gt; new TestClass();\npublic static implicit operator TestClass(int a) =&gt; new TestClass();\npublic static explicit operator float(TestClass a) =&gt; 1f;\n</code></pre> \u89e3\u6790\u540e\u7684\u8fd0\u7b97\u7b26\u65b9\u6cd5\u5b8c\u6574\u7b7e\u540d <code>public static UnitTestMethodsOperator.TestClass operator +(UnitTestMethodsOperator.TestClass a, UnitTestMethodsOperator.TestClass b)</code> <code>public static UnitTestMethodsOperator.TestClass operator -(UnitTestMethodsOperator.TestClass a, UnitTestMethodsOperator.TestClass b)</code> <code>public static UnitTestMethodsOperator.TestClass operator *(UnitTestMethodsOperator.TestClass a, UnitTestMethodsOperator.TestClass b)</code> <code>public static UnitTestMethodsOperator.TestClass operator /(UnitTestMethodsOperator.TestClass a, UnitTestMethodsOperator.TestClass b)</code> <code>public static UnitTestMethodsOperator.TestClass operator %(UnitTestMethodsOperator.TestClass a, UnitTestMethodsOperator.TestClass b)</code> <code>public static implicit operator UnitTestMethodsOperator.TestClass(int a)</code> <code>public static explicit operator float(UnitTestMethodsOperator.TestClass a)</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u9759\u6001\u6269\u5c55\u65b9\u6cd5\u89e3\u6790\u652f\u6301","title":"\u9759\u6001\u6269\u5c55\u65b9\u6cd5\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u9759\u6001\u6269\u5c55\u65b9\u6cd5\uff0c\u5171 1 \u79cd <pre><code>public static class TestStaticExtension\n{\n    public static int StaticMethod(this UnitTestMethodsStaticExtension.TestClass t) =&gt; 0;\n}\n</code></pre> \u89e3\u6790\u540e\u7684\u9759\u6001\u6269\u5c55\u65b9\u6cd5\u5b8c\u6574\u7b7e\u540d <code>public static int StaticMethod(this UnitTestMethodsStaticExtension.TestClass t)</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u5c5e\u6027Property\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","title":"\u5c5e\u6027\uff08Property\uff09\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","text":"<p>\u5c5e\u6027\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5\u987b\u77e5</p> <p>\u5c5e\u6027\u89e3\u6790\u6570\u636e\uff08PropertyData\uff09\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u5c5e\u6027\u4e00\u5171\u6709 19 \u79cd\u3002</p> <p>\u5c5e\u6027\u76f8\u5f53\u4e8e\u5728\u5b57\u6bb5\u7684\u58f0\u660e\u4e2d\u6dfb\u52a0\u4e86 <code>get</code> \u548c <code>set</code> \u8bbf\u95ee\u5668\uff0c\u89e3\u6790\u652f\u6301\u53c2\u8003\u5b57\u6bb5\u89e3\u6790\u652f\u6301\u3002</p> <p>\u5c5e\u6027\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u503c\u89e3\u6790\u652f\u6301\u5305\u62ec\u4e24\u79cd\u60c5\u51b5\uff1a</p> <pre><code>1. \u5728\u5c5e\u6027\u58f0\u660e\u65f6\u76f4\u63a5\u8d4b\u503c\n\n2. \u5728\u65e0\u53c2\u6570\u6784\u9020\u65b9\u6cd5\u4e2d\u8d4b\u503c\uff0c\u5fc5\u987b\u662f\u65e0\u53c2\u6570\u6784\u9020\u65b9\u6cd5\n</code></pre> <p>\u4e0d\u652f\u6301\u5c5e\u6027\u7684\u8bbf\u95ee\u4fee\u9970\u7b26\u4e0e get \u548c set \u8bbf\u95ee\u5668\u90fd\u4e0d\u540c\u7684\u60c5\u51b5</p> <pre><code>protected bool BoolPropertyPrivateGetPublicSet { private get; set; }\n</code></pre>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u5b9e\u4f8b\u548c\u9759\u6001\u57fa\u7840\u7c7b\u578b\u5c5e\u6027\u89e3\u6790\u652f\u6301","title":"\u5b9e\u4f8b\u548c\u9759\u6001\u57fa\u7840\u7c7b\u578b\u5c5e\u6027\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u5c5e\u6027\uff0c\u5171 8 \u79cd <pre><code>public int IntPropertyPublicGetPublicSet { get; set; }\npublic string StringPropertyPublicGetInternalSet { get; internal set; }\npublic float FloatPropertyPublicGetProtectedSet { get; protected set; }\npublic bool BoolPropertyPublicGetPrivateSet { get; private set; }\npublic int IntPropertyInternalGetPublicSet { internal get; set; }\npublic float FloatPropertyProtectedGetPublicSet { protected get; set; }\npublic bool BoolPropertyPrivateGetPublicSet { private get; set; }\npublic static int StaticIntPropertyPublicGetPublicSet { get; set; }\n</code></pre> \u89e3\u6790\u540e\u7684\u5c5e\u6027\u5b8c\u6574\u7b7e\u540d <code>public int IntPropertyPublicGetPublicSet { get; set; }</code> <code>public string StringPropertyPublicGetInternalSet { get; internal set; }</code> <code>public float FloatPropertyPublicGetProtectedSet { get; protected set; }</code> <code>public bool BoolPropertyPublicGetPrivateSet { get; private set; }</code> <code>public int IntPropertyInternalGetPublicSet { internal get; set; }</code> <code>public float FloatPropertyProtectedGetPublicSet { protected get; set; }</code> <code>public bool BoolPropertyPrivateGetPublicSet { private get; set; }</code> <code>public static int StaticIntPropertyPublicGetPublicSet { get; set; }</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u503c\u5c5e\u6027\u89e3\u6790\u652f\u6301","title":"\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u503c\u5c5e\u6027\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u503c\u5c5e\u6027\uff0c\u5171 11 \u79cd <pre><code>public static int StaticIntPropertyWithDefaultValue { get; set; } = 1;\npublic static float StaticFloatPropertyWithDefaultValue { get; set; } = 1f;\npublic static bool StaticBoolPropertyWithDefaultValue { get; set; } = true;\npublic static string StaticStringPropertyWithDefaultValue { get; set; } = \"Hello\";\npublic static TestEnum StaticEnumPropertyWithDefaultValue { get; set; } = TestEnum.B;\npublic int IntPropertyWithDefaultValue { get; internal set; } = 77;\npublic float FloatPropertyWithDefaultValue { get; protected set; } = 77f;\npublic bool BoolPropertyWithDefaultValue { get; private set; } = true;\npublic string StringPropertyWithDefaultValue { get; set; } = \"World\";\npublic TestEnum EnumPropertyWithDefaultValue { get; set; } = TestEnum.C;\npublic string StringPropertyInitOnCtor { get; set; }\npublic TestClass()\n{\n    StringPropertyInitOnCtor = \"Hello World\";\n}\n</code></pre> \u89e3\u6790\u540e\u7684\u5c5e\u6027\u5b8c\u6574\u7b7e\u540d <code>public static int StaticIntPropertyWithDefaultValue { get; set; } = 1;</code> <code>public static float StaticFloatPropertyWithDefaultValue { get; set; } = 1f;</code> <code>public static bool StaticBoolPropertyWithDefaultValue { get; set; } = true;</code> <code>public static string StaticStringPropertyWithDefaultValue { get; set; } = \"Hello\";</code> <code>public static TestEnum StaticEnumPropertyWithDefaultValue { get; set; } = TestEnum.B;</code> <code>public int IntPropertyWithDefaultValue { get; internal set; } = 77;</code> <code>public float FloatPropertyWithDefaultValue { get; protected set; } = 77f;</code> <code>public bool BoolPropertyWithDefaultValue { get; private set; } = true;</code> <code>public string StringPropertyWithDefaultValue { get; set; } = \"World\";</code> <code>public TestEnum EnumPropertyWithDefaultValue { get; set; } = TestEnum.C;</code> <code>public string StringPropertyInitOnCtor { get; set; } = \"Hello World\";</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u5b57\u6bb5Field\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","title":"\u5b57\u6bb5\uff08Field\uff09\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5","text":"<p>\u5b57\u6bb5\u89e3\u6790\u652f\u6301\u5355\u5143\u6d4b\u8bd5\u987b\u77e5</p> <p>\u5b57\u6bb5\u89e3\u6790\u6570\u636e\uff08FieldData\uff09\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u5b57\u6bb5\u4e00\u5171\u6709 101 \u79cd</p>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u4e0d\u540c\u8bbf\u95ee\u4fee\u9970\u7b26\u548c\u590d\u5408\u5173\u952e\u5b57\u89e3\u6790\u652f\u6301","title":"\u4e0d\u540c\u8bbf\u95ee\u4fee\u9970\u7b26\u548c\u590d\u5408\u5173\u952e\u5b57\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u4e0d\u540c\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u5171 6 \u79cd <pre><code>int _privateField;\ninternal int InternalField;\nprivate protected int PrivateProtectedField;\nprotected int ProtectedField;\nprotected internal int ProtectedInternalField;\npublic int PublicField;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>private int _privateField;</code> <code>internal int InternalField;</code> <code>private protected int PrivateProtectedField;</code> <code>protected int ProtectedField;</code> <code>protected internal int ProtectedInternalField;</code> <code>public int PublicField;</code> \u5b8c\u7f8e\u652f\u6301\u590d\u5408\u5173\u952e\u5b57\uff0c\u5171 4 \u79cd <pre><code>public const int CONST_FIELD = 42;\npublic static readonly int StaticReadOnlyField;\npublic static int StaticField;\npublic readonly int ReadOnlyField;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public const int CONST_FIELD = 42;</code> <code>public static readonly int StaticReadOnlyField;</code> <code>public static int StaticField;</code> <code>public readonly int ReadOnlyField;</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u5e38\u91cf\u5b57\u6bb5\u89e3\u6790\u652f\u6301","title":"\u5e38\u91cf\u5b57\u6bb5\u89e3\u6790\u652f\u6301","text":"<p>\u5e38\u91cf\u5b57\u6bb5\u89e3\u6790\u987b\u77e5</p> <ol> <li> <p>\u5e38\u91cf\u5b57\u6bb5\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u7684\u89e3\u6790\u6d4b\u8bd5\u53ea\u5305\u62ec\u57fa\u7840\u503c\u7c7b\u578b\u3001\u679a\u4e3e\u7c7b\u578b\u3001\u7279\u6b8a\u7684 string \u5f15\u7528\u7c7b\u578b\u3002</p> </li> <li> <p>\u5e38\u91cf\u5b57\u6bb5\u90e8\u5206\u7c7b\u578b\u89e3\u6790\u9650\u5236\u5982\u4e0b\uff1a</p> <p>a. \u957f\u6574\u578b\u5e38\u91cf\u5b57\u6bb5\uff0clong\uff0c\u89e3\u6790\u540e\u7684\u5b57\u6bb5\u6570\u636e\u8bbe\u7f6e\u4e3a\u4ee5 'L' \u5b57\u7b26\u7ed3\u5c3e\u3002</p> <p>b. \u65e0\u7b26\u53f7\u957f\u6574\u578b\u5e38\u91cf\u5b57\u6bb5\uff0culong\uff0c\u89e3\u6790\u540e\u7684\u5b57\u6bb5\u6570\u636e\u8bbe\u7f6e\u4e3a\u4ee5 'ul' \u5b57\u7b26\u7ed3\u5c3e\u3002</p> <p>c. \u65e0\u7b26\u53f7\u6574\u578b\u5e38\u91cf\u5b57\u6bb5\uff0cuint\uff0c\u89e3\u6790\u540e\u7684\u5b57\u6bb5\u6570\u636e\u8bbe\u7f6e\u4e3a\u4ee5 'u' \u5b57\u7b26\u7ed3\u5c3e\u3002</p> <p>d. \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u5e38\u91cf\u5b57\u6bb5\uff0cdouble\uff0c\u89e3\u6790\u540e\u7684\u5b57\u6bb5\u6570\u636e\u8bbe\u7f6e\u4e3a\u4ee5 'd' \u5b57\u7b26\u7ed3\u5c3e\uff0c\u4e14\u4e3a\u4e86\u4fdd\u8bc1\u7cbe\u51c6\uff0c\u4f4d\u6570\u4e0d\u80fd\u8d85\u8fc7 15 \u4f4d\uff0c\u8fd9\u91cc\u7684 15 \u4f4d\u662f\u6307\u6709\u6548\u6570\u5b57\u7684\u4f4d\u6570\uff0c\u4e0d\u53ea\u662f\u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570\u3002</p> <p>e. \u5341\u8fdb\u5236\u6d6e\u70b9\u578b\u5e38\u91cf\u5b57\u6bb5\uff0cdecimal\uff0c\u89e3\u6790\u540e\u7684\u5b57\u6bb5\u6570\u636e\u8bbe\u7f6e\u4e3a\u4ee5 'm' \u5b57\u7b26\u7ed3\u5c3e\u3002</p> <p>f. \u5d4c\u5957\u7c7b\u679a\u4e3e\u5e38\u91cf\u5b57\u6bb5\uff0cUnitTestFieldsIsConstantWithDefaultValue.TestEnum\uff0c\u89e3\u6790\u540e\u7684\u5b57\u6bb5\u6570\u636e\u7684\u5b57\u6bb5\u7c7b\u578b\u4f1a\u663e\u793a\u5d4c\u5957\u8def\u5f84\u3002</p> </li> </ol> \u5b8c\u7f8e\u652f\u6301\u5927\u90e8\u5206\u5e38\u91cf\u5b57\u6bb5\uff0c\u5171 9 \u79cd <pre><code>public const string STRING_CONST_FIELD = \"Hello, World!\";\npublic const int INT_CONST_FIELD = 2147483647;\npublic const float FLOAT_CONST_FIELD = 3.14159f;\npublic const bool BOOLEAN_CONST_FIELD = true;\npublic const char CHAR_CONST_FIELD = 'A';\npublic const byte BYTE_CONST_FIELD = 255;\npublic const sbyte SBYTE_CONST_FIELD = -128;\npublic const short SHORT_CONST_FIELD = 32767;\npublic const ushort USHORT_CONST_FIELD = 65535;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public const string STRING_CONST_FIELD = \"Hello, World!\";</code> <code>public const int INT_CONST_FIELD = 2147483647;</code> <code>public const float FLOAT_CONST_FIELD = 3.14159f;</code> <code>public const bool BOOLEAN_CONST_FIELD = true;</code> <code>public const char CHAR_CONST_FIELD = 'A';</code> <code>public const byte BYTE_CONST_FIELD = 255;</code> <code>public const sbyte SBYTE_CONST_FIELD = -128;</code> <code>public const short SHORT_CONST_FIELD = 32767;</code> <code>public const ushort USHORT_CONST_FIELD = 65535;</code> \u6709\u9650\u5236\u7684\u652f\u6301\u90e8\u5206\u5e38\u91cf\u5b57\u6bb5\uff0c\u5171 7 \u79cd <pre><code>public const long LONG_CONST_FIELD = 9223372036854775807L;\npublic const ulong ULONG_CONST_FIELD = 18446744073709551615ul;\npublic const uint UINT_CONST_FIELD = 4294967295u;\npublic const double DOUBLE_CONST_FIELD = 2.71828182845904d; \npublic const decimal DECIMAL_CONST_FIELD = 123.456m;\npublic const ScriptDocGeneratorTestEnum ENUM_CONST_FIELD = ScriptDocGeneratorTestEnum.Value1;\n\n// \u5d4c\u5957\u7c7b\u679a\u4e3e\u5e38\u91cf\u5b57\u6bb5\uff0cUnitTestFieldsIsConstantWithDefaultValue.TestEnum\npublic const TestEnum NESTED_ENUM_CONST_FIELD = TestEnum.Value3;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public const long LONG_CONST_FIELD = 9223372036854775807L;</code> <code>public const ulong ULONG_CONST_FIELD = 18446744073709551615ul;</code> <code>public const uint UINT_CONST_FIELD = 4294967295u;</code> <code>public const double DOUBLE_CONST_FIELD = 2.71828182845904d;</code> <code>public const decimal DECIMAL_CONST_FIELD = 123.456m;</code> <code>public const ScriptDocGeneratorTestEnum ENUM_CONST_FIELD = ScriptDocGeneratorTestEnum.Value1;</code> <code>public const UnitTestFieldsIsConstantWithDefaultValue.TestEnum NESTED_ENUM_CONST_FIELD = TestEnum.Value3;</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u9759\u6001\u5b57\u6bb5\u89e3\u6790\u652f\u6301","title":"\u9759\u6001\u5b57\u6bb5\u89e3\u6790\u652f\u6301","text":"<p>\u9759\u6001\u5b57\u6bb5\u89e3\u6790\u987b\u77e5</p> <ol> <li> <p>\u9759\u6001\u5b57\u6bb5\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u7684\u89e3\u6790\u6d4b\u8bd5\u53ea\u5305\u62ec\u57fa\u7840\u503c\u7c7b\u578b\u3001\u679a\u4e3e\u7c7b\u578b\u3001\u7279\u6b8a\u7684 string \u5f15\u7528\u7c7b\u578b\u3002</p> </li> <li> <p>\u9759\u6001\u5b57\u6bb5\u90e8\u5206\u7c7b\u578b\u89e3\u6790\u9650\u5236\u548c\u5e38\u91cf\u4e00\u81f4</p> </li> </ol> \u5b8c\u7f8e\u652f\u6301\u5927\u90e8\u5206\u7684\u9759\u6001\u5b57\u6bb5\uff0c\u5171 9 \u79cd <pre><code>public static string StringStaticField = \"Hello, World!\";\npublic static int INTStaticField = 2147483647;\npublic static float FloatStaticField = 3.14159f;\npublic static bool BooleanStaticField = true;\npublic static char CharStaticField = 'A';\npublic static byte ByteStaticField = 255;\npublic static sbyte SbyteStaticField = -128;\npublic static short ShortStaticField = 32767;\npublic static ushort UshortStaticField = 65535;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public static string StringStaticField = \"Hello, World!\";</code> <code>public static int INTStaticField = 2147483647;</code> <code>public static float FloatStaticField = 3.14159f;</code> <code>public static bool BooleanStaticField = true;</code> <code>public static char CharStaticField = 'A';</code> <code>public static byte ByteStaticField = 255;</code> <code>public static sbyte SbyteStaticField = -128;</code> <code>public static short ShortStaticField = 32767;</code> <code>public static ushort UshortStaticField = 65535;</code> \u6709\u9650\u5236\u7684\u652f\u6301\u90e8\u5206\u9759\u6001\u5b57\u6bb5\uff0c\u5171 7 \u79cd <pre><code>public static long LongStaticField = 9223372036854775807L;\npublic static ulong UlongStaticField = 18446744073709551615ul;\npublic static uint UintStaticField = 4294967295u;\npublic static double DoubleStaticField = 2.71828182845904d;\npublic static decimal DecimalStaticField = 123.456m;\npublic static ScriptDocGeneratorTestEnum EnumStaticField = ScriptDocGeneratorTestEnum.Value2;\npublic static TestEnum NestedEnumStaticField = TestEnum.Value3;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public static long LongStaticField = 9223372036854775807L;</code> <code>public static ulong UlongStaticField = 18446744073709551615ul;</code> <code>public static uint UintStaticField = 4294967295u;</code> <code>public static double DoubleStaticField = 2.71828182845904d;</code> <code>public static decimal DecimalStaticField = 123.456m;</code> <code>public static ScriptDocGeneratorTestEnum EnumStaticField = ScriptDocGeneratorTestEnum.Value2;</code> <code>public static UnitTestFieldsIsStaticWithDefaultValue.TestEnum NestedEnumStaticField = TestEnum.Value3;</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u5b9e\u4f8b\u5b57\u6bb5\u89e3\u6790\u652f\u6301","title":"\u5b9e\u4f8b\u5b57\u6bb5\u89e3\u6790\u652f\u6301","text":"<p>\u5b9e\u4f8b\u5b57\u6bb5\u89e3\u6790\u987b\u77e5</p> <ol> <li>\u5b9e\u4f8b\u5b57\u6bb5\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u7684\u89e3\u6790\u6d4b\u8bd5\u53ea\u5305\u62ec\u57fa\u7840\u503c\u7c7b\u578b\u3001\u679a\u4e3e\u7c7b\u578b\u3001\u7279\u6b8a\u7684 string \u5f15\u7528\u7c7b\u578b\u3002</li> <li>\u53ea\u652f\u6301\u5728 \u65e0\u53c2\u6784\u9020\u51fd\u6570 \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u7684\u503c\u7c7b\u578b\u5b57\u6bb5</li> <li>\u666e\u901a\u5b9e\u4f8b\u5b57\u6bb5\u82e5\u6210\u529f\u89e3\u6790\uff0c\u5219\u53ea\u8bfb\u5b9e\u4f8b\u5b57\u6bb5\u4e5f\u53ef\u4ee5\u6210\u529f\u89e3\u6790\uff0c\u4e0d\u505a\u53e6\u5916\u6d4b\u8bd5\u3002</li> <li> <p>\u5b9e\u4f8b\u5b57\u6bb5\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u503c\u8bbe\u7f6e\u5305\u62ec\uff1a</p> <ol> <li> <p>\u76f4\u63a5\u58f0\u660e\u9ed8\u8ba4\u503c</p> </li> <li> <p>\u5728 \u65e0\u53c2\u6784\u9020\u51fd\u6570 \u4e2d\u521d\u59cb\u5316\u3002</p> </li> </ol> </li> <li> <p>\u5b9e\u4f8b\u5b57\u6bb5\u90e8\u5206\u7c7b\u578b\u89e3\u6790\u9650\u5236\u548c\u5e38\u91cf\u4e00\u81f4</p> </li> </ol> \u5b8c\u7f8e\u652f\u6301\u5927\u90e8\u5206\u7684\u5b9e\u4f8b\u5b57\u6bb5\uff0c\u5171 18 \u79cd <pre><code>public string StringField = \"Hello, World!\";\npublic int IntField = 2147483647;\npublic float FloatField = 3.14159f;\npublic bool BooleanField = true;\npublic char CharField = 'A';\npublic byte ByteField = 255;\npublic sbyte SbyteField = -128;\npublic short ShortField = 32767;\npublic ushort UshortField = 65535;\n// ---\npublic string StringFieldInitOnCtor;\npublic int IntFieldInitOnCtor;\npublic float FloatFieldInitOnCtor;\npublic bool BooleanFieldInitOnCtor;\npublic char CharFieldInitOnCtor;\npublic byte ByteFieldInitOnCtor;\npublic sbyte SbyteFieldInitOnCtor;\npublic short ShortFieldInitOnCtor;\npublic ushort UshortFieldInitOnCtor;\n// --- \u6784\u9020\u65b9\u6cd5\npublic TestClass()\n{\n    StringFieldInitOnCtor = \"Initialized in constructor!\";\n    IntFieldInitOnCtor = -123456789;\n    FloatFieldInitOnCtor = -2.71828f;\n    BooleanFieldInitOnCtor = true;\n    CharFieldInitOnCtor = 'Z';\n    ByteFieldInitOnCtor = 128;\n    SbyteFieldInitOnCtor = 127;\n    ShortFieldInitOnCtor = -32768;\n    UshortFieldInitOnCtor = 32768;\n    // ...\n}\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public string StringField = \"Hello, World!\";</code> <code>public int IntField = 2147483647;</code> <code>public float FloatField = 3.14159f;</code> <code>public bool BooleanField = true;</code> <code>public char CharField = 'A';</code> <code>public byte ByteField = 255;</code> <code>public sbyte SbyteField = -128;</code> <code>public short ShortField = 32767;</code> <code>public ushort UshortField = 65535;</code> <code>public string StringFieldInitOnCtor = \"Initialized in constructor!\";</code> <code>public int IntFieldInitOnCtor = -123456789;</code> <code>public float FloatFieldInitOnCtor = -2.71828f;</code> <code>public bool BooleanFieldInitOnCtor = true;</code> <code>public char CharFieldInitOnCtor = 'Z';</code> <code>public byte ByteFieldInitOnCtor = 128;</code> <code>public sbyte SbyteFieldInitOnCtor = 127;</code> <code>public short ShortFieldInitOnCtor = -32768;</code> <code>public ushort UshortFieldInitOnCtor = 32768;</code> \u6709\u9650\u5236\u7684\u652f\u6301\u90e8\u5206\u5b9e\u4f8b\u5b57\u6bb5\uff0c\u5171 14 \u79cd <pre><code>public long LongField = 9223372036854775807L;\npublic ulong UlongField = 18446744073709551615ul;\npublic uint UintField = 4294967295u;\npublic double DoubleField = 2.71828182845904d;\npublic decimal DecimalField = 123.456m;\npublic ScriptDocGeneratorTestEnum EnumField = ScriptDocGeneratorTestEnum.Value2;\npublic UnitTestFieldsIsStaticWithDefaultValue.TestEnum NestedEnumField = TestEnum.Value2;\n// ---\npublic long LongFieldInitOnCtor;\npublic ulong UlongFieldInitOnCtor;\npublic uint UintFieldInitOnCtor;\npublic double DoubleFieldInitOnCtor;\npublic decimal DecimalFieldInitOnCtor;\npublic ScriptDocGeneratorTestEnum EnumFieldInitOnCtor;\npublic UnitTestFieldsIsStaticWithDefaultValue.TestEnum NestedEnumFieldInitOnCtor;\n// --- \u6784\u9020\u65b9\u6cd5\npublic TestClass()\n{\n    // ...\n    LongFieldInitOnCtor = -9223372036854775808L;\n    UlongFieldInitOnCtor = 9223372036854775808ul;\n    UintFieldInitOnCtor = 2147483648u;\n    DoubleFieldInitOnCtor = -3.14159265358979d;\n    DecimalFieldInitOnCtor = -987.654m;\n    EnumFieldInitOnCtor = ScriptDocGeneratorTestEnum.Value3;\n    NestedEnumFieldInitOnCtor = TestEnum.Value3;\n}\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public long LongField = 9223372036854775807L;</code> <code>public ulong UlongField = 18446744073709551615ul;</code> <code>public uint UintField = 4294967295u;</code> <code>public double DoubleField = 2.71828182845904d;</code> <code>public decimal DecimalField = 123.456m;</code> <code>public ScriptDocGeneratorTestEnum EnumField = ScriptDocGeneratorTestEnum.Value2;</code> <code>public UnitTestFieldsIsStaticWithDefaultValue.TestEnum NestedEnumField = TestEnum.Value2;</code> <code>public long LongFieldInitOnCtor = -9223372036854775808L;</code> <code>public ulong UlongFieldInitOnCtor = 9223372036854775808ul;</code> <code>public uint UintFieldInitOnCtor = 2147483648u;</code> <code>public double DoubleFieldInitOnCtor = -3.14159265358979d;</code> <code>public decimal DecimalFieldInitOnCtor = -987.654m;</code> <code>public ScriptDocGeneratorTestEnum EnumFieldInitOnCtor = ScriptDocGeneratorTestEnum.Value3;</code> <code>public UnitTestFieldsIsStaticWithDefaultValue.TestEnum NestedEnumFieldInitOnCtor = TestEnum.Value3;</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u96c6\u5408\u5b57\u6bb5\u89e3\u6790\u652f\u6301","title":"\u96c6\u5408\u5b57\u6bb5\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u89e3\u6790\u96c6\u5408\u5b57\u6bb5\uff0c\u5171 16 \u79cd <pre><code>public int[] ArrayField;\npublic int[,] MultiArrayField;\npublic int[][] JaggedArrayField;\npublic List&lt;string&gt; ListField;\npublic Dictionary&lt;string, int&gt; DictionaryField;\npublic HashSet&lt;string&gt; HashSetField;\npublic SortedDictionary&lt;string, int&gt; SortedDictionaryField;\npublic SortedList&lt;string, int&gt; SortedListField;\npublic Stack&lt;string&gt; StackField;\npublic Queue&lt;int&gt; QueueField;\npublic LinkedList&lt;string&gt; LinkedListField;\npublic System.Collections.ArrayList ArrayListField;\npublic System.Collections.Hashtable HashtableField;\npublic IReadOnlyList&lt;string&gt; ReadOnlyListField;\npublic IReadOnlyDictionary&lt;string, int&gt; ReadOnlyDictionaryField;\npublic ConcurrentDictionary&lt;string, int&gt; ConcurrentDictionaryField;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public int[] ArrayField;</code> <code>public int[,] MultiArrayField;</code> <code>public int[][] JaggedArrayField;</code> <code>public List&lt;string&gt; ListField;</code> <code>public Dictionary&lt;string, int&gt; DictionaryField;</code> <code>public HashSet&lt;string&gt; HashSetField;</code> <code>public SortedDictionary&lt;string, int&gt; SortedDictionaryField;</code> <code>public SortedList&lt;string, int&gt; SortedListField;</code> <code>public Stack&lt;string&gt; StackField;</code> <code>public Queue&lt;int&gt; QueueField;</code> <code>public LinkedList&lt;string&gt; LinkedListField;</code> <code>public System.Collections.ArrayList ArrayListField;</code> <code>public System.Collections.Hashtable HashtableField;</code> <code>public IReadOnlyList&lt;string&gt; ReadOnlyListField;</code> <code>public IReadOnlyDictionary&lt;string, int&gt; ReadOnlyDictionaryField;</code> <code>public ConcurrentDictionary&lt;string, int&gt; ConcurrentDictionaryField;</code>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#Unity-\u90e8\u5206\u7279\u6709\u5b57\u6bb5\u89e3\u6790\u652f\u6301","title":"Unity \u90e8\u5206\u7279\u6709\u5b57\u6bb5\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301 Unity \u90e8\u5206\u7279\u6709\u5b57\u6bb5\uff0c\u5171 7 \u79cd <pre><code>public GameObject gameObjectField;\npublic Transform transformField;\npublic Rigidbody rigidbodyField;\npublic Vector3 vector3Field = new Vector3(1, 1, 1);\n\n[SerializeField]\n[Tooltip(\"This is a tooltip\")]\n[UnityEngine.Range(0, 100)]\npublic Quaternion quaternionField = new Quaternion(0, 0, 0, 1);\n\n[ColorUsage(true, true)]\npublic Color colorField = Color.white;\n\n[Obsolete(\"Use newField instead\")]\npublic LayerMask layerMaskField;\n</code></pre> \u5b8c\u6574\u58f0\u660e\u4e3a\u5355\u884c\u7684\u5b57\u6bb5\uff0c\u5305\u542b\u7279\u6027 <code>public GameObject gameObjectField;</code> <code>public Transform transformField;</code> <code>public Rigidbody rigidbodyField;</code> <code>public Vector3 vector3Field = new Vector3(1.00, 1.00, 1.00);</code> Quaternion \u5b57\u6bb5\u89e3\u6790\u540e\u7684\u5b8c\u6574\u58f0\u660e\u5b57\u7b26\u4e32<pre><code>[SerializeField]\n[UnityEngine.Tooltip(\"This is a tooltip\")]\n[UnityEngine.Range(0, 100)]\npublic Quaternion quaternionField = new Quaternion(0.00000, 0.00000, 0.00000, 1.00000);\n</code></pre> Color \u5b57\u6bb5\u89e3\u6790\u540e\u7684\u5b8c\u6574\u58f0\u660e\u5b57\u7b26\u4e32<pre><code>[UnityEngine.ColorUsage(true, true)]\npublic Color colorField = RGBA(1.000, 1.000, 1.000, 1.000);\n</code></pre> LayerMask \u5b57\u6bb5\u89e3\u6790\u540e\u7684\u5b8c\u6574\u58f0\u660e\u5b57\u7b26\u4e32<pre><code>[Obsolete(\"Use newField instead\")]\npublic LayerMask layerMaskField;\n</code></pre>","tags":["ScriptDocGenerator"]},{"location":"contents/manuals/scriptdocgenerator/TypeAnalysisOverview/#\u5176\u4ed6\u6742\u9879\u5b57\u6bb5\u89e3\u6790\u652f\u6301","title":"\u5176\u4ed6\u6742\u9879\u5b57\u6bb5\u89e3\u6790\u652f\u6301","text":"\u5b8c\u7f8e\u652f\u6301\u5176\u4ed6\u6742\u9879\u5b57\u6bb5\uff0c\u5171 4 \u79cd <pre><code>public TestAbstractClass AbstractField;\npublic dynamic DynamicField;\npublic ITestInterface InterfaceField;\npublic int? NullableField = null;\n</code></pre> \u89e3\u6790\u540e\u7684\u5b57\u6bb5\u5b8c\u6574\u7b7e\u540d <code>public TestAbstractClass AbstractField;</code> <code>public dynamic DynamicField;</code> <code>public ITestInterface InterfaceField;</code> <code>public int? NullableField = null;</code> 2025-10-172025-10-27","tags":["ScriptDocGenerator"]},{"location":"blog/archive/2025/","title":"2025","text":"2025-10-272025-10-27"},{"location":"blog/category/sirenix/","title":"sirenix","text":"2025-10-272025-10-27"},{"location":"blog/category/csharp/","title":"csharp","text":"2025-10-272025-10-27"},{"location":"blog/category/odintoolkits/","title":"OdinToolkits","text":"2025-10-272025-10-27"},{"location":"blog/category/unity/","title":"Unity","text":"2025-10-272025-10-27"},{"location":"blog/category/%E6%95%99%E7%A8%8B/","title":"\u6559\u7a0b","text":"2025-10-272025-10-27"},{"location":"blog/category/%E5%BA%8F%E5%88%97%E5%8C%96%E7%B3%BB%E7%BB%9F/","title":"\u5e8f\u5217\u5316\u7cfb\u7edf","text":"2025-10-272025-10-27"}]}